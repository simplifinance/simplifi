{
  "address": "0xa00E598D0c6c2Ab62E74B1282c9Efd9d2010F47A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "contract IRoleBase",
          "name": "_roleManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "ErrorOccurred",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getDefaultSupportedCollateralAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "_default",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedAssets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "internalType": "struct SupportedAssetManager.SupportedAsset[]",
          "name": "_assets",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "listed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleManager",
      "outputs": [
        {
          "internalType": "contract IRoleBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setRoleManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "supportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAsset",
          "type": "address"
        }
      ],
      "name": "unsupportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9c43742e8eee3c6e09d8d8606cd7edf9c39d5ca490ea5cd76a86e7355462230d",
  "receipt": {
    "to": null,
    "from": "0xD7c271d20c9E323336bFC843AEb8deC23B346352",
    "contractAddress": "0xa00E598D0c6c2Ab62E74B1282c9Efd9d2010F47A",
    "transactionIndex": 1,
    "gasUsed": "820104",
    "logsBloom": "0x
    "blockHash": "0x60903c27fc174ab147c7a8503b824a052680d2135a73e89b3a9e371518b99980",
    "transactionHash": "0x9c43742e8eee3c6e09d8d8606cd7edf9c39d5ca490ea5cd76a86e7355462230d",
    "logs": [],
    "blockNumber": 44487704,
    "cumulativeGasUsed": "863862",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x962289B0F4f0Aa00d84D7a55DAFC68F28C54fAC0",
    "0x79dF2FCc7DfDdc0C85Cc1f82B1f631b4b9D994B0"
  ],
  "numDeployments": 3,
  "solcInputHash": "df159e95352441ed65652ea3a2393118",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IRoleBase\",\"name\":\"_roleManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"ErrorOccurred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getDefaultSupportedCollateralAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_default\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct SupportedAssetManager.SupportedAsset[]\",\"name\":\"_assets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"contract IRoleBase\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setRoleManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"supportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAsset\",\"type\":\"address\"}],\"name\":\"unsupportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initialize state variables\",\"params\":{\"_asset\":\": Initial supported asset\"}},\"getDefaultSupportedCollateralAsset()\":{\"details\":\"Returns the default supported asset\"},\"getSupportedAssets()\":{\"details\":\"Returns a list of supported assets\"},\"isSupportedAsset(address)\":{\"details\":\"Check if an asset is supported\"},\"setRoleManager(address)\":{\"params\":{\"newManager\":\": New manager address\"}},\"supportAsset(address)\":{\"details\":\"Support a new asset Note: OnlyRoleBase action\",\"params\":{\"_asset\":\": Asset to add to list of supported asset\"}},\"unsupportAsset(address)\":{\"details\":\"Unsupports an asset Note: Only-owner action\",\"params\":{\"newAsset\":\": Removes an asset from the list of supported asset\"}}},\"stateVariables\":{\"supportedAssets\":{\"details\":\"Mapping assets address to bool i.e Assets must be contract account and must be supported\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRoleManager(address)\":{\"notice\":\"Set Role manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/SupportedAssetManager.sol\":\"SupportedAssetManager\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/apis/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport \\\"./IERC20Metadata.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 is IERC20Metadata{\\r\\n    error NotCallable();\\r\\n    error AddressIsZero(address);\\r\\n    error NoPreviousLockDetected();\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n    \\r\\n    /** \\r\\n     * @dev Moves `amounts` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event for each transfer.\\r\\n     * Note: BE AWARE OF THE GAS COST WHEN USING THIS FUNCTION. IT INCREASES \\r\\n                RELATIVE TO THE ACCOUNTS ARRAY\\r\\n     */\\r\\n    function batchTransfer(uint[] memory amounts, address[] memory accounts) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**@dev Locks specific amount of JFT to the private ledger.\\r\\n        param: routeTo - Alternative address that funds will be sent to when panic call is made.\\r\\n        param: amount - Amount to lock.\\r\\n    */\\r\\n    function lockToken(address routeTo, uint256 amount) external returns(bool);\\r\\n\\r\\n    /**@dev Moves an 'amount' from private ledger to regular balances.\\r\\n        @param amount - Amount to unlock.\\r\\n        Note: If the lock duration was set, holder will not be able to unlock until the \\r\\n            set time has passed else they can withdraw to regular balance anytime.\\r\\n     */\\r\\n    function unlockToken(uint amount) external returns(bool);\\r\\n\\r\\n    /** @dev Returns seperate balances of @param who\\r\\n        return value will be in struct format having two values\\r\\n     */\\r\\n    function accountBalances(address who) external view returns(Balances memory);\\r\\n   \\r\\n    // /**@dev Return JFT's Metadata including the information of `who`\\r\\n    //  */\\r\\n    // function getInfo(address who) external view returns(Protected memory);\\r\\n\\r\\n    /**\\r\\n     * @dev PanicUnlock is meant to be invoked only by the Attorney.\\r\\n     * It should only be called when JFT holder has lost access to their account and they had \\r\\n     * earlier initiated a lock. The locked token is simply unlocked and sent to an escape address\\r\\n     * provided at the time the lock was activated.\\r\\n     * \\r\\n     * Note: Attorney charges a fee for doing this. \\r\\n     * @param account : Account that owns this token.\\r\\n     */\\r\\n    function panicUnlock(address account, Balances memory _bal) external returns(bool);\\r\\n\\r\\n    struct Protected {\\r\\n        uint256 value; // Total value currently locked\\r\\n        address escapeTo;\\r\\n    }\\r\\n\\r\\n    struct Balances {\\r\\n        uint256 spendable;\\r\\n        Protected locked;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        uint8 decimals;\\r\\n        uint256 totalSupply;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        address attorney;\\r\\n        // address rewarder;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0f16e22e9c3da96f41e8237352b0d826ca0421b69340e09aedae74eb222428e6\",\"license\":\"MIT\"},\"contracts/apis/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb50d28f397609626ce66bde796d1ea41ce80b047482aea9d7f228b285c619ad\",\"license\":\"MIT\"},\"contracts/apis/IRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IRoleBase \\r\\n * Interface of the OwnerShip contract\\r\\n * @author Simplifi (Bobeu)\\r\\n */\\r\\ninterface IRoleBase {\\r\\n    function setRole(\\r\\n        address[] memory newRoleTos\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function removeRole(\\r\\n        address target\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function renounceRole() \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function getRoleBearer(\\r\\n        uint ownerId\\r\\n    ) \\r\\n        external \\r\\n        view \\r\\n        returns(address);\\r\\n\\r\\n    function hasRole(\\r\\n        address target\\r\\n    )\\r\\n        external\\r\\n        view \\r\\n        returns(bool);\\r\\n}\",\"keccak256\":\"0xa166efe0dfbcd8f4e00f33c155797b3e2d652087f630893518b0dec1f823519b\",\"license\":\"MIT\"},\"contracts/apis/ISupportedAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\ninterface ISupportedAsset {\\r\\n  function isSupportedAsset(address _asset) external view returns(bool);\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address _default);\\r\\n}\",\"keccak256\":\"0x676b33d227f783ad956a0abe0877df24ffcec14f4991119903801ce207e281bf\",\"license\":\"MIT\"},\"contracts/libraries/ErrorLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nlibrary ErrorLib {\\r\\n    error ErrorOccurred(string errorMsg);\\r\\n\\r\\n    /**\\r\\n     * @dev Reverts any operation.\\r\\n     * @param _error : Error struct\\r\\n     */\\r\\n    function _throw(string memory _error) internal pure {\\r\\n        if(bytes(_error).length > 0){ \\r\\n            revert ErrorOccurred(_error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x967582ca2a833932c7403e6950ede1972f1b7f94ecfedd2d3ddee9175d309e5a\",\"license\":\"MIT\"},\"contracts/peripherals/OnlyRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { IRoleBase } from \\\"../apis/IRoleBase.sol\\\";\\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title MsgSender \\r\\n * @author Simplifi (Bobeu)\\r\\n * @notice Non-deployable contract simply returning the calling account.\\r\\n */\\r\\nabstract contract MsgSender {\\r\\n    function _msgSender() internal view virtual returns(address sender) {\\r\\n        sender = msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract OnlyRoleBase is MsgSender {\\r\\n    using ErrorLib for *;\\r\\n\\r\\n    // Role manager address\\r\\n    IRoleBase public roleManager;\\r\\n\\r\\n    // ============= constructor ============\\r\\n    constructor(IRoleBase _roleManager)\\r\\n    {\\r\\n        _setRoleManager(_roleManager);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Caller must have owner role before execeution can proceed.\\r\\n     * The 'errorMessage' argument can be used to return error specific to \\r\\n     * a context e.g function call. \\r\\n     */\\r\\n    modifier onlyRoleBearer {\\r\\n        _onlyRoleBearer();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Allow only account with role access\\r\\n    function _onlyRoleBearer() internal view {\\r\\n        IRoleBase mgr = roleManager;\\r\\n        if(address(mgr) == address(0)) 'Manager is zero'._throw();\\r\\n        if(!_hasRole(_msgSender())) 'Access denied'._throw();\\r\\n    }\\r\\n\\r\\n    function _hasRole(address target) internal view returns(bool result) {\\r\\n        result = IRoleBase(roleManager).hasRole(target);\\r\\n    }  \\r\\n\\r\\n    /// @dev Set role manager\\r\\n    function _setRoleManager(IRoleBase newManager) private{\\r\\n        roleManager = newManager;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set Role manager\\r\\n     * @param newManager : New manager address\\r\\n     */\\r\\n    function setRoleManager(\\r\\n        address newManager\\r\\n    )\\r\\n        public\\r\\n        onlyRoleBearer\\r\\n        returns(bool)\\r\\n    {\\r\\n        _setRoleManager(IRoleBase(newManager));\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa16a1ee72f3b6ef52356210cdc85a46ddd5a88d56c0c044c0740b68cf5b83438\",\"license\":\"MIT\"},\"contracts/standalone/SupportedAssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { OnlyRoleBase, IRoleBase } from \\\"../peripherals/OnlyRoleBase.sol\\\";\\r\\nimport { ISupportedAsset } from \\\"../apis/ISupportedAsset.sol\\\"; \\r\\nimport { IERC20 } from \\\"../apis/IERC20.sol\\\"; \\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\n\\r\\ncontract SupportedAssetManager is ISupportedAsset, OnlyRoleBase {\\r\\n  using ErrorLib for *;\\r\\n\\r\\n  struct SupportedAsset {\\r\\n    address id;\\r\\n    string name;\\r\\n    string symbol;\\r\\n  }\\r\\n\\r\\n  // Supported assets\\r\\n  SupportedAsset[] private assets;\\r\\n\\r\\n  /**\\r\\n   * @dev Mapping assets address to bool i.e Assets must be contract account\\r\\n   * and must be supported\\r\\n   */\\r\\n  mapping(address => bool) private supportedAssets;\\r\\n\\r\\n  mapping(address => bool) public listed;\\r\\n\\r\\n  /**\\r\\n   * @dev Asset must be supported before they can be used.\\r\\n   */\\r\\n  modifier onlySupportedAsset(address _asset) {\\r\\n    if(!supportedAssets[_asset]) 'Unsupported asset'._throw();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initialize state variables\\r\\n   * @param _asset : Initial supported asset\\r\\n   */\\r\\n  constructor(\\r\\n    address _asset,\\r\\n    IRoleBase _roleManager\\r\\n  ) \\r\\n    OnlyRoleBase(_roleManager) \\r\\n  {\\r\\n    if(_asset == address(0)) 'Default asset is empty'._throw();\\r\\n    _supportAsset(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Support a new asset\\r\\n   * Note: OnlyRoleBase action\\r\\n   * @param _asset : Asset to add to list of supported asset\\r\\n   */\\r\\n  function supportAsset(\\r\\n    address _asset\\r\\n  ) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    _supportAsset(_asset); \\r\\n  }\\r\\n\\r\\n  function _supportAsset(address _asset) private {\\r\\n    \\r\\n    if(!listed[_asset]){\\r\\n      listed[_asset] = true;\\r\\n      assets.push(SupportedAsset(\\r\\n        _asset, \\r\\n        IERC20(_asset).name(), \\r\\n        IERC20(_asset).symbol()\\r\\n      ));\\r\\n    }\\r\\n    if(!_isAssetSupported(_asset)){\\r\\n      supportedAssets[_asset] = true;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Unsupports an asset\\r\\n   * Note: Only-owner action\\r\\n   * @param newAsset : Removes an asset from the list of supported asset\\r\\n   */\\r\\n  function unsupportAsset(\\r\\n    address newAsset\\r\\n  ) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    supportedAssets[newAsset] = false;\\r\\n  }\\r\\n\\r\\n  function _isAssetSupported(address _asset) internal view returns(bool) {\\r\\n    return supportedAssets[_asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Check if an asset is supported\\r\\n   */\\r\\n  function isSupportedAsset(address _asset) external view returns(bool) {\\r\\n    return _isAssetSupported(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns a list of supported assets\\r\\n   */\\r\\n  function getSupportedAssets() public view returns(SupportedAsset[] memory _assets) {\\r\\n    _assets = assets;\\r\\n    return _assets;\\r\\n  }\\r\\n\\r\\n  /// @dev Returns the default supported asset\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address _default) {\\r\\n    _default = assets[0].id;\\r\\n    assert(_default != address(0));\\r\\n    return _default;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0xad219cbb17654c5dbe7959948dcde82c7bddfad9f92f37a4169e41234e245cbc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100875760003560e01c8063739c13db1161005b578063739c13db146101175780639be918e61461011f578063e5406dbf14610132578063f1d588c51461014757600080fd5b8062435da51461008c5780634cd55c2d146100bc57806364138230146100d15780636968751214610104575b600080fd5b60005461009f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cf6100ca3660046106ad565b61015a565b005b6100f46100df3660046106ad565b60036020526000908152604090205460ff1681565b60405190151581526020016100b3565b6100cf6101123660046106ad565b61016e565b61009f610197565b6100f461012d3660046106ad565b6101d9565b61013a6101fc565b6040516100b3919061072d565b6100f46101553660046106ad565b610395565b6101626103c2565b61016b8161043e565b50565b6101766103c2565b6001600160a01b03166000908152600260205260409020805460ff19169055565b600060016000815481106101ad576101ad6107cb565b60009182526020909120600390910201546001600160a01b03169050806101d6576101d66107e1565b90565b6001600160a01b03811660009081526002602052604081205460ff165b92915050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561038c57600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610269906107f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610295906107f7565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081526020016002820180546102fb906107f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610327906107f7565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b50505050508152505081526020019060010190610220565b50505050905090565b600061039f6103c2565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b031680610403576104036040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b815250610613565b61040c3361063e565b61016b5761016b6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b815250610613565b6001600160a01b03811660009081526003602052604090205460ff166105cd576001600160a01b0381166000818152600360209081526040808320805460ff19166001908117909155815160608101835285815282516306fdde0360e01b81529251919590949385019390926306fdde0392600480830193928290030181865afa1580156104d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104f89190810190610847565b8152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105639190810190610847565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b039093169290921782559282015191929091908201906105b49082610945565b50604082015160028201906105c99082610945565b5050505b6001600160a01b03811660009081526002602052604090205460ff1661016b576001600160a01b0381166000908152600260205260409020805460ff1916600117905550565b80511561016b578060405163cc86106360e01b81526004016106359190610a05565b60405180910390fd5b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610a18565b6000602082840312156106bf57600080fd5b81356001600160a01b03811681146106d657600080fd5b9392505050565b60005b838110156106f85781810151838201526020016106e0565b50506000910152565b600081518084526107198160208601602086016106dd565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156107bd57888303603f19018552815180516001600160a01b031684528781015160608986018190529061078f82870182610701565b915050878201519150848103888601526107a98183610701565b968901969450505090860190600101610756565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600181811c9082168061080b57607f821691505b60208210810361082b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561085957600080fd5b815167ffffffffffffffff8082111561087157600080fd5b818401915084601f83011261088557600080fd5b81518181111561089757610897610831565b604051601f8201601f19908116603f011681019083821181831017156108bf576108bf610831565b816040528281528760208487010111156108d857600080fd5b6108e98360208301602088016106dd565b979650505050505050565b601f821115610940576000816000526020600020601f850160051c8101602086101561091d5750805b601f850160051c820191505b8181101561093c57828155600101610929565b5050505b505050565b815167ffffffffffffffff81111561095f5761095f610831565b6109738161096d84546107f7565b846108f4565b602080601f8311600181146109a857600084156109905750858301515b600019600386901b1c1916600185901b17855561093c565b600085815260208120601f198616915b828110156109d7578886015182559484019460019091019084016109b8565b50858210156109f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260006106d66020830184610701565b600060208284031215610a2a57600080fd5b815180151581146106d657600080fdfea2646970667358221220101e8b37e961abc7a689f9be0067507bf1561041681794ec7c2ca8a421cf0e4e64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initialize state variables",
        "params": {
          "_asset": ": Initial supported asset"
        }
      },
      "getDefaultSupportedCollateralAsset()": {
        "details": "Returns the default supported asset"
      },
      "getSupportedAssets()": {
        "details": "Returns a list of supported assets"
      },
      "isSupportedAsset(address)": {
        "details": "Check if an asset is supported"
      },
      "setRoleManager(address)": {
        "params": {
          "newManager": ": New manager address"
        }
      },
      "supportAsset(address)": {
        "details": "Support a new asset Note: OnlyRoleBase action",
        "params": {
          "_asset": ": Asset to add to list of supported asset"
        }
      },
      "unsupportAsset(address)": {
        "details": "Unsupports an asset Note: Only-owner action",
        "params": {
          "newAsset": ": Removes an asset from the list of supported asset"
        }
      }
    },
    "stateVariables": {
      "supportedAssets": {
        "details": "Mapping assets address to bool i.e Assets must be contract account and must be supported"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setRoleManager(address)": {
        "notice": "Set Role manager"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 288,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "roleManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRoleBase)220"
      },
      {
        "astId": 417,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "assets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(SupportedAsset)413_storage)dyn_storage"
      },
      {
        "astId": 422,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "supportedAssets",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 426,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "listed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(SupportedAsset)413_storage)dyn_storage": {
        "base": "t_struct(SupportedAsset)413_storage",
        "encoding": "dynamic_array",
        "label": "struct SupportedAssetManager.SupportedAsset[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRoleBase)220": {
        "encoding": "inplace",
        "label": "contract IRoleBase",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(SupportedAsset)413_storage": {
        "encoding": "inplace",
        "label": "struct SupportedAssetManager.SupportedAsset",
        "members": [
          {
            "astId": 408,
            "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 410,
            "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 412,
            "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}