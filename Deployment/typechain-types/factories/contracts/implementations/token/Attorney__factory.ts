/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Attorney,
  AttorneyInterface,
} from "../../../../contracts/implementations/token/Attorney";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CallNotFromEscapeAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountToRetrieve",
        type: "address",
      },
    ],
    name: "panicUnlock",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ed0380380610ed083398101604081905261002f916100e4565b600080546001600160a81b0319166001600160a01b038381169190911790915561005a908316610085565b50600191909155600280546001600160a01b0319166001600160a01b03909216919091179055610120565b6001600160a01b0381166100c5576040517f867915ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b80516001600160a01b03811681146100df57600080fd5b919050565b6000806000606084860312156100f957600080fd5b83519250610109602085016100c8565b9150610117604085016100c8565b90509250925092565b610da18061012f6000396000f3fe6080604052600436106100955760003560e01c806369fe0e2d1161005957806369fe0e2d146101995780638456cb59146101b9578063b88a3915146101ce578063ddca3f4314610206578063fc0c546a1461022a57600080fd5b8063144fa6d7146101015780633f4ba83a146101215780635c975abb1461013657806360d4507f1461016657806361737d621461017957600080fd5b366100fc576002546040516000916001600160a01b03169034908381818185875af1925050503d80600081146100e7576040519150601f19603f3d011682016040523d82523d6000602084013e6100ec565b606091505b50509050806100fa57600080fd5b005b600080fd5b34801561010d57600080fd5b506100fa61011c366004610bcc565b61024a565b34801561012d57600080fd5b506100fa61037e565b34801561014257600080fd5b50600054600160a01b900460ff165b60405190151581526020015b60405180910390f35b6100fa610174366004610bcc565b6104ca565b34801561018557600080fd5b50610151610194366004610bcc565b61064f565b3480156101a557600080fd5b506100fa6101b4366004610be9565b61076d565b3480156101c557600080fd5b506100fa610788565b3480156101da57600080fd5b506000546101ee906001600160a01b031681565b6040516001600160a01b03909116815260200161015d565b34801561021257600080fd5b5061021c60015481565b60405190815260200161015d565b34801561023657600080fd5b506003546101ee906001600160a01b031681565b6040805180820190915260208082527f4174746f726e65793a20736574546f6b656e204e6f74205065726d6974746564908201526000546001600160a01b0316806102b05760405162461bcd60e51b81526004016102a790610c02565b60405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103289190610c39565b82906103475760405162461bcd60e51b81526004016102a79190610c7f565b5061035a836001600160a01b03166108c0565b5050600380546001600160a01b0319166001600160a01b0392909216919091179055565b60408051808201909152601f81527f5061757361626c653a204f6e6c794f776e65722063616e20756e70617573650060208201526000546001600160a01b0316806103db5760405162461bcd60e51b81526004016102a790610c02565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190610c39565b82906104725760405162461bcd60e51b81526004016102a79190610c7f565b5061047b6108e7565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a15050565b6104d2610913565b600354604051636ff96d1760e01b81526001600160a01b0383811660048301526000921690636ff96d1790602401606060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190610ce9565b6020810151519091506105895760405162461bcd60e51b815260206004820152601060248201526f139bc81b1bd8dac819195d1958dd195960821b60448201526064016102a7565b60208082015101516001600160a01b0316336001600160a01b0316146105c257604051636aff795360e01b815260040160405180910390fd5b60015434906105d290829061093e565b6002546040516000916001600160a01b03169083908381818185875af1925050503d806000811461061f576040519150601f19603f3d011682016040523d82523d6000602084013e610624565b606091505b505090508061063257600080fd5b600354610649906001600160a01b0316858561096d565b50505050565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600080549091906001600160a01b0316806106b05760405162461bcd60e51b81526004016102a790610c02565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190610c39565b82906107475760405162461bcd60e51b81526004016102a79190610c7f565b50600080546001600160a01b0319166001600160a01b0386161790555060019392505050565b6002546001600160a01b031633036107855760018190555b50565b60408051808201909152601d81527f5061757361626c653a204f6e6c794f776e65722063616e20706175736500000060208201526000546001600160a01b0316806107e55760405162461bcd60e51b81526004016102a790610c02565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190610c39565b829061087c5760405162461bcd60e51b81526004016102a79190610c7f565b50610885610913565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586104ab3390565b6001600160a01b0381166107855760405163867915ab60e01b815260040160405180910390fd5b600054600160a01b900460ff1661091157604051638dfc202b60e01b815260040160405180910390fd5b565b600054600160a01b900460ff16156109115760405163d93c066560e01b815260040160405180910390fd5b808210156109695760405163cf47918160e01b815260048101839052602481018290526044016102a7565b5050565b6040516001600160a01b038084166024830152825160448301526020808401518051606485015201511660848201526109e590849063f627590b60e01b9060a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526109ea565b505050565b60006109ff6001600160a01b03841683610a7f565b9050805160001480610a20575080806020019051810190610a209190610c39565b6109e55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102a7565b6060610a8d83836000610a94565b9392505050565b60603031821115610aba5760405163cd78605960e01b81523060048201526024016102a7565b600080856001600160a01b03168486604051610ad69190610d4f565b60006040518083038185875af1925050503d8060008114610b13576040519150601f19603f3d011682016040523d82523d6000602084013e610b18565b606091505b5091509150610b28868383610b32565b9695505050505050565b606082610b4757610b4282610b8e565b610a8d565b8151158015610b5e57506001600160a01b0384163b155b15610b8757604051639996b31560e01b81526001600160a01b03851660048201526024016102a7565b5080610a8d565b805115610b9e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461078557600080fd5b600060208284031215610bde57600080fd5b8135610a8d81610bb7565b600060208284031215610bfb57600080fd5b5035919050565b6020808252601a908201527f4f6e6c794f776e65723a204d616e61676572206e6f7420736574000000000000604082015260600190565b600060208284031215610c4b57600080fd5b81518015158114610a8d57600080fd5b60005b83811015610c76578181015183820152602001610c5e565b50506000910152565b6020815260008251806020840152610c9e816040850160208701610c5b565b601f01601f19169190910160400192915050565b6040805190810167ffffffffffffffff81118282101715610ce357634e487b7160e01b600052604160045260246000fd5b60405290565b60008183036060811215610cfc57600080fd5b610d04610cb2565b835181526040601f1983011215610d1a57600080fd5b610d22610cb2565b9150602084015182526040840151610d3981610bb7565b6020838101919091528101919091529392505050565b60008251610d61818460208701610c5b565b919091019291505056fea2646970667358221220eb50a92249603da4c1ae4a93a86741b34f2ecf325a50d08638b633bdca96d13b64736f6c63430008180033";

type AttorneyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttorneyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attorney__factory extends ContractFactory {
  constructor(...args: AttorneyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fee: BigNumberish,
    _feeTo: AddressLike,
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _fee,
      _feeTo,
      _ownershipManager,
      overrides || {}
    );
  }
  override deploy(
    _fee: BigNumberish,
    _feeTo: AddressLike,
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _fee,
      _feeTo,
      _ownershipManager,
      overrides || {}
    ) as Promise<
      Attorney & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Attorney__factory {
    return super.connect(runner) as Attorney__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttorneyInterface {
    return new Interface(_abi) as AttorneyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Attorney {
    return new Contract(address, _abi, runner) as unknown as Attorney;
  }
}
