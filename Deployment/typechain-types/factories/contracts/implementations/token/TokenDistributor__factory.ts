/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenDistributor,
  TokenDistributorInterface,
} from "../../../../contracts/implementations/token/TokenDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint8",
        name: "_quorum",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadySigned",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InvalidRequestId",
    type: "error",
  },
  {
    inputs: [],
    name: "Pending",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "Requested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "Signer",
    type: "event",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
    ],
    name: "getTransactionRequest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "delay",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "executors",
            type: "address[]",
          },
          {
            internalType: "enum TokenDistributor.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum TokenDistributor.Type",
            name: "txType",
            type: "uint8",
          },
        ],
        internalType: "struct TokenDistributor.Request",
        name: "req",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_delayInHours",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "initiateTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
    ],
    name: "signTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b7938038062001b79833981016040819052620000349162000175565b600080546001600160a01b0319166001600160a01b03851617905560018055815160ff82166002558015620000a75760005b81811015620000a5576200009c84828151811062000088576200008862000270565b6020026020010151620000b160201b60201c565b60010162000066565b505b505050506200029f565b6001600160a01b03166000818152600760205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319169091179055565b80516001600160a01b03811681146200012f57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805160ff811681146200012f57600080fd5b6000806000606084860312156200018b57600080fd5b620001968462000117565b602085810151919450906001600160401b0380821115620001b657600080fd5b818701915087601f830112620001cb57600080fd5b815181811115620001e057620001e062000134565b8060051b604051601f19603f8301168101818110858211171562000208576200020862000134565b60405291825284820192508381018501918a8311156200022757600080fd5b938501935b828510156200025057620002408562000117565b845293850193928501926200022c565b809750505050505050620002676040850162000163565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6118ca80620002af6000396000f3fe6080604052600436106100ab5760003560e01c8063ca93ed7811610064578063ca93ed78146101a0578063d0e30db0146101cd578063ee22610b146101d5578063ef09e78f146101f5578063f6a3a5e614610217578063fc0c546a1461023757600080fd5b8063144fa6d7146100b75780631703a018146100d95780635d9ec2101461010257806361737d62146101225780636a42b8f814610152578063b88a39151461016857600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d23660046115a7565b610257565b005b3480156100e557600080fd5b506100ef60025481565b6040519081526020015b60405180910390f35b34801561010e57600080fd5b506100d761011d3660046115c4565b61039c565b34801561012e57600080fd5b5061014261013d3660046115a7565b610674565b60405190151581526020016100f9565b34801561015e57600080fd5b506100ef60045481565b34801561017457600080fd5b50600054610188906001600160a01b031681565b6040516001600160a01b0390911681526020016100f9565b3480156101ac57600080fd5b506101c06101bb3660046115c4565b6107c2565b6040516100f99190611617565b6100d7610905565b3480156101e157600080fd5b506100d76101f03660046115c4565b610940565b34801561020157600080fd5b5061020a610ffd565b6040516100f991906116c0565b34801561022357600080fd5b506100d761023236600461170d565b61105f565b34801561024357600080fd5b50600954610188906001600160a01b031681565b6040518060600160405280602a815260200161186b602a91396000546001600160a01b0316806102ce5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c794f776e65723a204d616e61676572206e6f742073657400000000000060448201526064015b60405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610346919061176d565b82906103655760405162461bcd60e51b81526004016102c591906117b3565b50610378836001600160a01b0316611278565b5050600980546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526007602052604090205460ff166103cb5760405162461bcd60e51b81526004016102c5906117e6565b80806000036103f0576040516364b4f07960e11b8152600481018290526024016102c5565b33600081815260086020908152604080832086845290915290205483919060ff161561042f5760405163585eb56560e11b815260040160405180910390fd5b6000848152600660209081526040808320815160c0810183528154815260018201546001600160a01b0316818501526002820154818401526003820180548451818702810187019095528085529194929360608601939092908301828280156104c157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104a3575b5050509183525050600482015460209091019060ff1660038111156104e8576104e86115dd565b60038111156104f9576104f96115dd565b81526020016004820160019054906101000a900460ff166004811115610521576105216115dd565b6004811115610532576105326115dd565b81525050905061057281600160405180604001604052806016815260200175151c9e1b881b5d5cdd081899481a5b9a5d1a585d195960521b8152506112a2565b60608101515160025481106105bc5760405162461bcd60e51b815260206004820152601060248201526f5369676e65727320636f6d706c65746560801b60448201526064016102c5565b60008681526006602090815260408083206003018054600180820183559185528385200180546001600160a01b03191633908117909155808552600884528285208b86529093529220805460ff191683179055600254909161061f908490611822565b03610641576000878152600660205260409020600401805460ff191660021790555b5050506001600160a01b0316600090815260086020908152604080832093835292905220805460ff191660011790555050565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600080549091906001600160a01b0316806107055760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c794f776e65723a204d616e61676572206e6f742073657400000000000060448201526064016102c5565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d919061176d565b829061079c5760405162461bcd60e51b81526004016102c591906117b3565b50600080546001600160a01b0319166001600160a01b0386161790555060019392505050565b6107f96040805160c08101825260008082526020820181905291810182905260608082015290608082019081526020016000905290565b600082815260066020908152604091829020825160c0810184528154815260018201546001600160a01b031681840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561088b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161086d575b5050509183525050600482015460209091019060ff1660038111156108b2576108b26115dd565b60038111156108c3576108c36115dd565b81526020016004820160019054906101000a900460ff1660048111156108eb576108eb6115dd565b60048111156108fc576108fc6115dd565b90525092915050565b6000341161093e5760405162461bcd60e51b81526004016102c5906020808252600490820152633030302f60e01b604082015260600190565b565b3360009081526007602052604090205460ff1661096f5760405162461bcd60e51b81526004016102c5906117e6565b8080600003610994576040516364b4f07960e11b8152600481018290526024016102c5565b61099c6112f0565b6000828152600660209081526040808320815160c0810183528154815260018201546001600160a01b031681850152600282015481840152600382018054845181870281018701909552808552919492936060860193909290830182828015610a2e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a10575b5050509183525050600482015460209091019060ff166003811115610a5557610a556115dd565b6003811115610a6657610a666115dd565b81526020016004820160019054906101000a900460ff166004811115610a8e57610a8e6115dd565b6004811115610a9f57610a9f6115dd565b815250509050610adf81600260405180604001604052806016815260200175151c9e1b881b5d5cdd081899481a5b9a5d1a585d195960521b8152506112a2565b60408101514267ffffffffffffffff161015610b0e576040516306df203960e41b815260040160405180910390fd5b60008381526006602052604081206004908101805460ff1916600317905560a083015190811115610b4157610b416115dd565b03610b7f57600954610b5b906001600160a01b0316611278565b60208101518151600954610b7a926001600160a01b039091169161131a565b610fef565b60018160a001516004811115610b9757610b976115dd565b03610c5f578051303190811015610bc457604051639266535160e01b8152600481018290526024016102c5565b602082015182516040516000926001600160a01b031691908381818185875af1925050503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5050905080610c585760405162461bcd60e51b815260206004820152600b60248201526a151c9e1b8819985a5b195960aa1b60448201526064016102c5565b5050610fef565b60028160a001516004811115610c7757610c776115dd565b03610e3857600083815260066020908152604091829020825160c0810184528154815260018201546001600160a01b0316818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015610d0e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cf0575b5050509183525050600482015460209091019060ff166003811115610d3557610d356115dd565b6003811115610d4657610d466115dd565b81526020016004820160019054906101000a900460ff166004811115610d6e57610d6e6115dd565b6004811115610d7f57610d7f6115dd565b90525060008481526006602052604081208181556001810180546001600160a01b031916905560028101829055919250610dbc6003830182611560565b50600401805461ffff191690556020810151610b7a906001600160a01b03166000818152600760205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319169091179055565b60038160a001516004811115610e5057610e506115dd565b03610fcc57600083815260066020908152604091829020825160c0810184528154815260018201546001600160a01b0316818401526002820154818501526003820180548551818602810186019096528086529194929360608601939290830182828015610ee757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ec9575b5050509183525050600482015460209091019060ff166003811115610f0e57610f0e6115dd565b6003811115610f1f57610f1f6115dd565b81526020016004820160019054906101000a900460ff166004811115610f4757610f476115dd565b6004811115610f5857610f586115dd565b90525060008481526006602052604081208181556001810180546001600160a01b031916905560028101829055919250610f956003830182611560565b50600401805461ffff191690556020810151610b7a906001600160a01b03166000908152600760205260409020805460ff19169055565b60048160a001516004811115610fe457610fe46115dd565b03610fef5780516002555b50610ff960018055565b5050565b6060600580548060200260200160405190810160405280929190818152602001828054801561105557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611037575b5050505050905090565b3360009081526007602052604090205460ff1661108e5760405162461bcd60e51b81526004016102c5906117e6565b60058160ff16106110d45760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21039b2b632b1ba37b960811b60448201526064016102c5565b60006110de611371565b905060048260ff16101561113b576001600160a01b03851661113b5760405162461bcd60e51b81526020600482015260166024820152752932b1b4b834b2b73a1034b9903d32b9379030b2323960511b60448201526064016102c5565b6000818152600660205260409020848155600180820180546001600160a01b0319166001600160a01b0389161790556004909101805460ff1916828002179055508160ff166004811115611191576111916115dd565b600082815260066020526040902060049081018054909161ff0019909116906101009084908111156111c5576111c56115dd565b0217905550600081815260066020908152604080832067ffffffffffffffff42610e10890261ffff16011660028201556003018054600180820183559185528385200180546001600160a01b0319163390811790915580855260088452828520868652845293829020805460ff19169091179055805184815291820183905280517ffda9ac54069bb066debdc05afc39e260f270fcfb0ce45a42e94b6615a4514fbc9281900390910190a1505050505050565b6001600160a01b03811661129f5760405163867915ab60e01b815260040160405180910390fd5b50565b8160038111156112b4576112b46115dd565b836080015160038111156112ca576112ca6115dd565b1481906112ea5760405162461bcd60e51b81526004016102c591906117b3565b50505050565b60026001540361131357604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261136c90849061138f565b505050565b600380546000918261138283611835565b9190505550600354905090565b60006113a46001600160a01b03841683611424565b90508051600014806113c55750808060200190518101906113c5919061176d565b61136c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102c5565b60606114328383600061143b565b90505b92915050565b606030318211156114615760405163cd78605960e01b81523060048201526024016102c5565b600080856001600160a01b0316848660405161147d919061184e565b60006040518083038185875af1925050503d80600081146114ba576040519150601f19603f3d011682016040523d82523d6000602084013e6114bf565b606091505b50915091506114cf8683836114db565b925050505b9392505050565b6060826114f0576114eb82611537565b6114d4565b815115801561150757506001600160a01b0384163b155b1561153057604051639996b31560e01b81526001600160a01b03851660048201526024016102c5565b50806114d4565b8051156115475780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b508054600082559060005260206000209081019061129f91905b8082111561158e576000815560010161157a565b5090565b6001600160a01b038116811461129f57600080fd5b6000602082840312156115b957600080fd5b81356114d481611592565b6000602082840312156115d657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60048110611603576116036115dd565b9052565b60058110611603576116036115dd565b6020808252825182820152828101516001600160a01b0390811660408085019190915284015160608085019190915284015160c06080850152805160e08501819052600093929183019184916101008701905b8084101561168c5784518316825293850193600193909301929085019061166a565b50608088015194506116a160a08801866115f3565b60a088015194506116b560c0880186611607565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156117015783516001600160a01b0316835292840192918401916001016116dc565b50909695505050505050565b6000806000806080858703121561172357600080fd5b843561172e81611592565b935060208501359250604085013561ffff8116811461174c57600080fd5b9150606085013560ff8116811461176257600080fd5b939692955090935050565b60006020828403121561177f57600080fd5b815180151581146114d457600080fd5b60005b838110156117aa578181015183820152602001611792565b50506000910152565b60208152600082518060208401526117d281604085016020870161178f565b601f01601f19169190910160400192915050565b6020808252600c908201526b2737ba10309039b4b3b732b960a11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156114355761143561180c565b6000600182016118475761184761180c565b5060010190565b6000825161186081846020870161178f565b919091019291505056fe546f6b656e4469737472696275746f72202d20736574546f6b656e3a204e6f74207065726d6974746564a2646970667358221220b342794a0270fb4868dfdeb1463fcfe1c1b90b541c1683c1ec51713206d2141664736f6c63430008180033";

type TokenDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenDistributor__factory extends ContractFactory {
  constructor(...args: TokenDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ownershipManager: AddressLike,
    _signers: AddressLike[],
    _quorum: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _ownershipManager,
      _signers,
      _quorum,
      overrides || {}
    );
  }
  override deploy(
    _ownershipManager: AddressLike,
    _signers: AddressLike[],
    _quorum: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _ownershipManager,
      _signers,
      _quorum,
      overrides || {}
    ) as Promise<
      TokenDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenDistributor__factory {
    return super.connect(runner) as TokenDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenDistributorInterface {
    return new Interface(_abi) as TokenDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenDistributor {
    return new Contract(address, _abi, runner) as unknown as TokenDistributor;
  }
}
