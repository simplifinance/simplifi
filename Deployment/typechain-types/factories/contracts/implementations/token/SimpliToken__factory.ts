/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SimpliToken,
  SimpliTokenInterface,
} from "../../../../contracts/implementations/token/SimpliToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attorney_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reserve_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initTokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ownershipMgr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionNotCallable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ManagerAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPreviousLockDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPermittedToCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "accountBalances",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "_bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "batchTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttorney",
    outputs: [
      {
        internalType: "address",
        name: "_attorney",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "getLockedInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "escapeTo",
            type: "address",
          },
        ],
        internalType: "struct IERC20.Protected",
        name: "_locked",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountToRetrieve",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    name: "panicUnlock",
    outputs: [
      {
        internalType: "bool",
        name: "feedback",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAttorney",
        type: "address",
      },
    ],
    name: "setAttorney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200213a3803806200213a83398101604081905262000034916200059d565b600180546001600160a81b0319166001600160a01b0383161790558383838360096200006081620001c7565b620000746001600160a01b03861662000217565b6040805160a081018252601280825260006020808401918252845180860186529283527f53696d706c66696e616e636520546f6b656e000000000000000000000000000083820152838501928352845180860190955260038086527f53465400000000000000000000000000000000000000000000000000000000009186019190915260608401949094526001600160a01b038916608084015282516002805460ff191660ff9092169190911781559051909355519091906004906200013b9082620006d2565b5060608201516003820190620001529082620006d2565b5060809190910151600490910180546001600160a01b0319166001600160a01b0390921691909117905562000194836b033b2e3c9fd0803ce80000006200025b565b620001ad83856b024306c4097859c43c000000620002ee565b620001b881620003de565b5050505050505050506200080e565b600160008083600d811115620001e157620001e16200079e565b600d811115620001f557620001f56200079e565b81526020810191909152604001600020805460ff191691151591909117905550565b6001600160a01b03811662000258576040517f867915ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6200026f6001600160a01b03831662000217565b6200027d60008383620003f8565b8060026001016000828254620002949190620007cd565b90915550506001600160a01b0382166000818152600760209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b5050565b62000304620002fe6009620004b5565b620004fd565b620003186001600160a01b03831662000217565b6001600160a01b0380841660009081526007602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015280516200036d90836200053a565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526007835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b600080600083600d811115620001e157620001e16200079e565b6200041d60015474010000000000000000000000000000000000000000900460ff1690565b15620004b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e7366657220776860448201527f696c65207061757365640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b600080600083600d811115620004cf57620004cf6200079e565b600d811115620004e357620004e36200079e565b815260208101919091526040016000205460ff1692915050565b80151560000362000258576040517f590bd95200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80821015620002ea576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401620004a7565b80516001600160a01b03811681146200059857600080fd5b919050565b60008060008060808587031215620005b457600080fd5b620005bf8562000580565b9350620005cf6020860162000580565b9250620005df6040860162000580565b9150620005ef6060860162000580565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c908216806200063e57607f821691505b60208210810362000678577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620004b0576000816000526020600020601f850160051c81016020861015620006a95750805b601f850160051c820191505b81811015620006ca57828155600101620006b5565b505050505050565b81516001600160401b03811115620006ee57620006ee620005fa565b6200070681620006ff845462000629565b846200067e565b602080601f8311600181146200073e5760008415620007255750858301515b600019600386901b1c1916600185901b178555620006ca565b600085815260208120601f198616915b828110156200076f578886015182559484019460019091019084016200074e565b50858210156200078e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8082018082111562000808577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b61191c806200081e6000396000f3fe60806040526004361061016a5760003560e01c80636ff96d17116100d1578063a543fdf61161008a578063c52c159311610064578063c52c15931461046e578063dd2e0ac01461048e578063dd62ed3e146104ae578063f627590b146104ce57600080fd5b8063a543fdf6146103fc578063a9059cbb1461042e578063b88a39151461044e57600080fd5b80636ff96d171461033857806370a08231146103655780638456cb59146103855780638afb22071461039a57806395d89b41146103c7578063a457c2d7146103dc57600080fd5b8063313ce56711610123578063313ce5671461028257806339509351146102a45780633f4ba83a146102c457806342966c68146102d95780635c975abb146102f957806361737d621461031857600080fd5b806306fdde03146101a6578063095ea7b3146101d157806317be3fa51461020157806318160ddd146102215780631fa29aad1461024057806323b872dd1461026257600080fd5b366101a15760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156101b257600080fd5b506101bb6104ee565b6040516101c8919061146f565b60405180910390f35b3480156101dd57600080fd5b506101f16101ec3660046114da565b610582565b60405190151581526020016101c8565b34801561020d57600080fd5b506101f161021c3660046114da565b6105b1565b34801561022d57600080fd5b506003545b6040519081526020016101c8565b34801561024c57600080fd5b5061026061025b366004611504565b610619565b005b34801561026e57600080fd5b506101f161027d366004611526565b61070d565b34801561028e57600080fd5b5060025460405160ff90911681526020016101c8565b3480156102b057600080fd5b506101f16102bf3660046114da565b610747565b3480156102d057600080fd5b50610260610774565b3480156102e557600080fd5b506102606102f4366004611562565b610889565b34801561030557600080fd5b50600154600160a01b900460ff166101f1565b34801561032457600080fd5b506101f1610333366004611504565b610896565b34801561034457600080fd5b50610358610353366004611504565b61097e565b6040516101c8919061157b565b34801561037157600080fd5b50610232610380366004611504565b6109d1565b34801561039157600080fd5b506102606109f1565b3480156103a657600080fd5b506103ba6103b5366004611504565b610af3565b6040516101c891906115a7565b3480156103d357600080fd5b506101bb610b5a565b3480156103e857600080fd5b506101f16103f73660046114da565b610b6c565b34801561040857600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101c8565b34801561043a57600080fd5b506101f16104493660046114da565b610c02565b34801561045a57600080fd5b50600154610416906001600160a01b031681565b34801561047a57600080fd5b506101f16104893660046116d1565b610c1b565b34801561049a57600080fd5b506101f16104a9366004611562565b610cda565b3480156104ba57600080fd5b506102326104c936600461178a565b610d41565b3480156104da57600080fd5b506101f16104e93660046117bd565b610d6c565b60606002800180546104ff90611843565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90611843565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b6000600c61058f81610e05565b3361059b818686610e4f565b60019250505b6105aa81610f17565b5092915050565b600060096105be81610e05565b6105c9338585610f2e565b7f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd6000833604080516001600160a01b039092168252602082018690520160405180910390a1600191506105aa81610f17565b6001546001600160a01b03168061064357604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb9190611877565b6106d8576040516315ed864b60e21b815260040160405180910390fd5b6106ea826001600160a01b0316611011565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000600661071a81610e05565b33610726868286611038565b61073186868661106c565b600192505061073f81610f17565b509392505050565b6000600761075481610e05565b3361059b8186866107658383610d41565b61076f9190611899565b610e4f565b6001546001600160a01b03168061079e57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611877565b610833576040516315ed864b60e21b815260040160405180910390fd5b61083b611168565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b6108933382611194565b50565b6001546000906001600160a01b0316806108c357604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190611877565b610958576040516315ed864b60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b038516179055600191505b50919050565b610986611432565b506001600160a01b0390811660009081526007602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015290565b6001600160a01b0381166000908152600760205260408120545b92915050565b6001546001600160a01b031680610a1b57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190611877565b610ab0576040516315ed864b60e21b815260040160405180910390fd5b610ab861123f565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861086b3390565b604080518082019091526000808252602082015260065433906001600160a01b031681036109785750506001600160a01b03908116600090815260076020908152604091829020825180840190935260018101548352600201549092169181019190915290565b6060600260030180546104ff90611843565b60006008610b7981610e05565b336000610b868287610d41565b905084811015610be65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610198565b610bf38287878403610e4f565b6001935050506105aa81610f17565b60006005610c0f81610e05565b3361059b81868661106c565b60006003610c2881610e05565b825184518114610c695760405162461bcd60e51b815260206004820152600c60248201526b155b995c5d585b081b1a5cdd60a21b6044820152606401610198565b60005b81811015610ccb576000858281518110610c8857610c886118ba565b602002602001015190506000878381518110610ca657610ca66118ba565b60200260200101519050610cc1610cba3390565b838361106c565b5050600101610c6c565b5060019250506105aa81610f17565b6000600a610ce781610e05565b610cf1338461126a565b7f4e7407468c9afb1673f0eb43b54dbfa1f26fd38ee8918b42318c78efefac177333604080516001600160a01b039092168252602082018690520160405180910390a16001915061097881610f17565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6000600d610d7981610e05565b600654610d8e906001600160a01b0316611011565b6006546001600160a01b031633036105a1576001600160a01b038085166000908152600760209081526040808320600101839055868201518051920151909316825291902080549091019055825115610df857610df884846020015160200151856000015161106c565b600191506105aa81610f17565b600160008083600d811115610e1c57610e1c6118d0565b600d811115610e2d57610e2d6118d0565b81526020810191909152604001600020805460ff191691151591909117905550565b610e91610e5c600c611331565b80610e6c5750610e6c6007611331565b80610e7c5750610e7c6008611331565b80610e8c5750610e8c6006611331565b611373565b610ea3836001600160a01b0316611011565b610eb5826001600160a01b0316611011565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080600083600d811115610e1c57610e1c6118d0565b610f3b610e8c6009611331565b610f4d826001600160a01b0316611011565b6001600160a01b038084166000908152600760209081526040918290208251808401845281548152835180850190945260018201548452600290910154909316828201528201528051610fa09083611396565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526007835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b6001600160a01b0381166108935760405163867915ab60e01b815260040160405180910390fd5b60006110448484610d41565b90506000198114611066576110598183611396565b6110668484848403610e4f565b50505050565b6110a96110796005611331565b8061108957506110896006611331565b8061109957506110996003611331565b80610e8c5750610e8c600d611331565b6110bb836001600160a01b0316611011565b6110cd826001600160a01b0316611011565b6110d88383836113c5565b6001600160a01b0383166000908152600760205260409020546110fb8183611396565b6001600160a01b0380851660008181526007602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061115b9086815260200190565b60405180910390a3611066565b600154600160a01b900460ff1661119257604051638dfc202b60e01b815260040160405180910390fd5b565b6111a1610e8c6001611331565b6111b3826001600160a01b0316611011565b6111bf826000836113c5565b6001600160a01b0382166000908152600760205260409020546111e28183611396565b6001600160a01b03831660008181526007602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f0a565b505050565b600154600160a01b900460ff16156111925760405163d93c066560e01b815260040160405180910390fd5b611277610e8c600a611331565b6001600160a01b038083166000908152600760209081526040918290208251808401845281548152835180850190945260018201548452600290910154841683830190815291810192909252519091166112e457604051631ec4ebaf60e21b815260040160405180910390fd5b6020810151516112f49083611396565b6001600160a01b03928316600090815260076020908152604080832060010180548690039055928101510151909316835290912080549091019055565b600080600083600d811115611348576113486118d0565b600d811115611359576113596118d0565b815260208101919091526040016000205460ff1692915050565b80151560000361089357604051632c85eca960e11b815260040160405180910390fd5b808210156113c15760405163cf47918160e01b81526004810183905260248101829052604401610198565b5050565b600154600160a01b900460ff161561123a5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610198565b60405180604001604052806000815260200161146a60405180604001604052806000815260200160006001600160a01b031681525090565b905290565b60006020808352835180602085015260005b8181101561149d57858101830151858201604001528201611481565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146114d557600080fd5b919050565b600080604083850312156114ed57600080fd5b6114f6836114be565b946020939093013593505050565b60006020828403121561151657600080fd5b61151f826114be565b9392505050565b60008060006060848603121561153b57600080fd5b611544846114be565b9250611552602085016114be565b9150604084013590509250925092565b60006020828403121561157457600080fd5b5035919050565b81518152602080830151805182840152908101516001600160a01b0316604083015260608201906105aa565b815181526020808301516001600160a01b031690820152604081016109eb565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611600576116006115c7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561162f5761162f6115c7565b604052919050565b600067ffffffffffffffff821115611651576116516115c7565b5060051b60200190565b600082601f83011261166c57600080fd5b8135602061168161167c83611637565b611606565b8083825260208201915060208460051b8701019350868411156116a357600080fd5b602086015b848110156116c6576116b9816114be565b83529183019183016116a8565b509695505050505050565b600080604083850312156116e457600080fd5b823567ffffffffffffffff808211156116fc57600080fd5b818501915085601f83011261171057600080fd5b8135602061172061167c83611637565b82815260059290921b8401810191818101908984111561173f57600080fd5b948201945b8386101561175d57853582529482019490820190611744565b9650508601359250508082111561177357600080fd5b506117808582860161165b565b9150509250929050565b6000806040838503121561179d57600080fd5b6117a6836114be565b91506117b4602084016114be565b90509250929050565b60008082840360808112156117d157600080fd5b6117da846114be565b92506060601f19820112156117ee57600080fd5b6117f66115dd565b602085013581526040603f198301121561180f57600080fd5b6118176115dd565b91506040850135825261182c606086016114be565b602083015281602082015280925050509250929050565b600181811c9082168061185757607f821691505b60208210810361097857634e487b7160e01b600052602260045260246000fd5b60006020828403121561188957600080fd5b8151801515811461151f57600080fd5b808201808211156109eb57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220deac42cea299b3bde9ded0e4f1563d6d08c2f364cdfe9895fb369b29e9c86fa564736f6c63430008180033";

type SimpliTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpliTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpliToken__factory extends ContractFactory {
  constructor(...args: SimpliTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _ownershipMgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      attorney_,
      reserve_,
      initTokenReceiver,
      _ownershipMgr,
      overrides || {}
    );
  }
  override deploy(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _ownershipMgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      attorney_,
      reserve_,
      initTokenReceiver,
      _ownershipMgr,
      overrides || {}
    ) as Promise<
      SimpliToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpliToken__factory {
    return super.connect(runner) as SimpliToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpliTokenInterface {
    return new Interface(_abi) as SimpliTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpliToken {
    return new Contract(address, _abi, runner) as unknown as SimpliToken;
  }
}
