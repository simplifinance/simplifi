/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SimpliToken,
  SimpliTokenInterface,
} from "../../../../contracts/implementations/token/SimpliToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attorney_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reserve_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initTokenReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ownershipMgr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FunctionNotCallable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPreviousLockDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "accountBalances",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "_bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "batchTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttorney",
    outputs: [
      {
        internalType: "address",
        name: "_attorney",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "getLockedInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "escapeTo",
            type: "address",
          },
        ],
        internalType: "struct IERC20.Protected",
        name: "_locked",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountToRetrieve",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    name: "panicUnlock",
    outputs: [
      {
        internalType: "bool",
        name: "feedback",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAttorney",
        type: "address",
      },
    ],
    name: "setAttorney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022553803806200225583398101604081905262000034916200059d565b600180546001600160a81b0319166001600160a01b0383161790558383838360096200006081620001c7565b620000746001600160a01b03861662000217565b6040805160a081018252601280825260006020808401918252845180860186529283527f53696d706c66696e616e636520546f6b656e000000000000000000000000000083820152838501928352845180860190955260038086527f53465400000000000000000000000000000000000000000000000000000000009186019190915260608401949094526001600160a01b038916608084015282516002805460ff191660ff9092169190911781559051909355519091906004906200013b9082620006d2565b5060608201516003820190620001529082620006d2565b5060809190910151600490910180546001600160a01b0319166001600160a01b0390921691909117905562000194836b033b2e3c9fd0803ce80000006200025b565b620001ad83856b024306c4097859c43c000000620002ee565b620001b881620003de565b5050505050505050506200080e565b600160008083600d811115620001e157620001e16200079e565b600d811115620001f557620001f56200079e565b81526020810191909152604001600020805460ff191691151591909117905550565b6001600160a01b03811662000258576040517f867915ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6200026f6001600160a01b03831662000217565b6200027d60008383620003f8565b8060026001016000828254620002949190620007cd565b90915550506001600160a01b0382166000818152600760209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b5050565b62000304620002fe6009620004b5565b620004fd565b620003186001600160a01b03831662000217565b6001600160a01b0380841660009081526007602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015280516200036d90836200053a565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526007835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b600080600083600d811115620001e157620001e16200079e565b6200041d60015474010000000000000000000000000000000000000000900460ff1690565b15620004b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e7366657220776860448201527f696c65207061757365640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b600080600083600d811115620004cf57620004cf6200079e565b600d811115620004e357620004e36200079e565b815260208101919091526040016000205460ff1692915050565b80151560000362000258576040517f590bd95200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80821015620002ea576040517fcf4791810000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401620004a7565b80516001600160a01b03811681146200059857600080fd5b919050565b60008060008060808587031215620005b457600080fd5b620005bf8562000580565b9350620005cf6020860162000580565b9250620005df6040860162000580565b9150620005ef6060860162000580565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c908216806200063e57607f821691505b60208210810362000678577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620004b0576000816000526020600020601f850160051c81016020861015620006a95750805b601f850160051c820191505b81811015620006ca57828155600101620006b5565b505050505050565b81516001600160401b03811115620006ee57620006ee620005fa565b6200070681620006ff845462000629565b846200067e565b602080601f8311600181146200073e5760008415620007255750858301515b600019600386901b1c1916600185901b178555620006ca565b600085815260208120601f198616915b828110156200076f578886015182559484019460019091019084016200074e565b50858210156200078e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8082018082111562000808577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b611a37806200081e6000396000f3fe60806040526004361061016a5760003560e01c80636ff96d17116100d1578063a543fdf61161008a578063c52c159311610064578063c52c15931461046e578063dd2e0ac01461048e578063dd62ed3e146104ae578063f627590b146104ce57600080fd5b8063a543fdf6146103fc578063a9059cbb1461042e578063b88a39151461044e57600080fd5b80636ff96d171461033857806370a08231146103655780638456cb59146103855780638afb22071461039a57806395d89b41146103c7578063a457c2d7146103dc57600080fd5b8063313ce56711610123578063313ce5671461028257806339509351146102a45780633f4ba83a146102c457806342966c68146102d95780635c975abb146102f957806361737d621461031857600080fd5b806306fdde03146101a6578063095ea7b3146101d157806317be3fa51461020157806318160ddd146102215780631fa29aad1461024057806323b872dd1461026257600080fd5b366101a15760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156101b257600080fd5b506101bb6104ee565b6040516101c89190611532565b60405180910390f35b3480156101dd57600080fd5b506101f16101ec36600461159d565b610582565b60405190151581526020016101c8565b34801561020d57600080fd5b506101f161021c36600461159d565b6105b1565b34801561022d57600080fd5b506003545b6040519081526020016101c8565b34801561024c57600080fd5b5061026061025b3660046115c7565b610619565b005b34801561026e57600080fd5b506101f161027d3660046115e9565b610729565b34801561028e57600080fd5b5060025460405160ff90911681526020016101c8565b3480156102b057600080fd5b506101f16102bf36600461159d565b610763565b3480156102d057600080fd5b50610260610790565b3480156102e557600080fd5b506102606102f4366004611625565b6108dc565b34801561030557600080fd5b50600154600160a01b900460ff166101f1565b34801561032457600080fd5b506101f16103333660046115c7565b6108e9565b34801561034457600080fd5b506103586103533660046115c7565b610a07565b6040516101c8919061163e565b34801561037157600080fd5b506102326103803660046115c7565b610a5a565b34801561039157600080fd5b50610260610a7a565b3480156103a657600080fd5b506103ba6103b53660046115c7565b610bb2565b6040516101c8919061166a565b3480156103d357600080fd5b506101bb610c1d565b3480156103e857600080fd5b506101f16103f736600461159d565b610c2f565b34801561040857600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101c8565b34801561043a57600080fd5b506101f161044936600461159d565b610cc5565b34801561045a57600080fd5b50600154610416906001600160a01b031681565b34801561047a57600080fd5b506101f1610489366004611794565b610cde565b34801561049a57600080fd5b506101f16104a9366004611625565b610d9d565b3480156104ba57600080fd5b506102326104c936600461184d565b610e04565b3480156104da57600080fd5b506101f16104e9366004611880565b610e2f565b60606002800180546104ff90611906565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90611906565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b6000600c61058f81610ec8565b3361059b818686610f12565b60019250505b6105aa81610fda565b5092915050565b600060096105be81610ec8565b6105c9338585610ff1565b7f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd6000833604080516001600160a01b039092168252602082018690520160405180910390a1600191506105aa81610fda565b6040518060600160405280602181526020016119e1602191396001546001600160a01b03168061065b5760405162461bcd60e51b81526004016101989061193a565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190611971565b82906106f25760405162461bcd60e51b81526004016101989190611532565b50610705836001600160a01b03166110d4565b5050600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000600661073681610ec8565b336107428682866110fb565b61074d86868661112f565b600192505061075b81610fda565b509392505050565b6000600761077081610ec8565b3361059b8186866107818383610e04565b61078b9190611993565b610f12565b60408051808201909152601f81527f5061757361626c653a204f6e6c794f776e65722063616e20756e70617573650060208201526001546001600160a01b0316806107ed5760405162461bcd60e51b81526004016101989061193a565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611971565b82906108845760405162461bcd60e51b81526004016101989190611532565b5061088d61122b565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a15050565b6108e63382611257565b50565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600154600091906001600160a01b03168061094a5760405162461bcd60e51b81526004016101989061193a565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c29190611971565b82906109e15760405162461bcd60e51b81526004016101989190611532565b50600180546001600160a01b0319166001600160a01b0386161790555060019392505050565b610a0f6114f5565b506001600160a01b0390811660009081526007602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015290565b6001600160a01b0381166000908152600760205260408120545b92915050565b60408051808201909152601d81527f5061757361626c653a204f6e6c794f776e65722063616e20706175736500000060208201526001546001600160a01b031680610ad75760405162461bcd60e51b81526004016101989061193a565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190611971565b8290610b6e5760405162461bcd60e51b81526004016101989190611532565b50610b77611302565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586108bd3390565b604080518082019091526000808252602082015260065433906001600160a01b03168103610c17576001600160a01b03808416600090815260076020908152604091829020825180840190935260018101548352600201549092169181019190915291505b50919050565b6060600260030180546104ff90611906565b60006008610c3c81610ec8565b336000610c498287610e04565b905084811015610ca95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610198565b610cb68287878403610f12565b6001935050506105aa81610fda565b60006005610cd281610ec8565b3361059b81868661112f565b60006003610ceb81610ec8565b825184518114610d2c5760405162461bcd60e51b815260206004820152600c60248201526b155b995c5d585b081b1a5cdd60a21b6044820152606401610198565b60005b81811015610d8e576000858281518110610d4b57610d4b6119b4565b602002602001015190506000878381518110610d6957610d696119b4565b60200260200101519050610d84610d7d3390565b838361112f565b5050600101610d2f565b5060019250506105aa81610fda565b6000600a610daa81610ec8565b610db4338461132d565b7f4e7407468c9afb1673f0eb43b54dbfa1f26fd38ee8918b42318c78efefac177333604080516001600160a01b039092168252602082018690520160405180910390a160019150610c1781610fda565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6000600d610e3c81610ec8565b600654610e51906001600160a01b03166110d4565b6006546001600160a01b031633036105a1576001600160a01b038085166000908152600760209081526040808320600101839055868201518051920151909316825291902080549091019055825115610ebb57610ebb84846020015160200151856000015161112f565b600191506105aa81610fda565b600160008083600d811115610edf57610edf6119ca565b600d811115610ef057610ef06119ca565b81526020810191909152604001600020805460ff191691151591909117905550565b610f54610f1f600c6113f4565b80610f2f5750610f2f60076113f4565b80610f3f5750610f3f60086113f4565b80610f4f5750610f4f60066113f4565b611436565b610f66836001600160a01b03166110d4565b610f78826001600160a01b03166110d4565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080600083600d811115610edf57610edf6119ca565b610ffe610f4f60096113f4565b611010826001600160a01b03166110d4565b6001600160a01b0380841660009081526007602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015280516110639083611459565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526007835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b6001600160a01b0381166108e65760405163867915ab60e01b815260040160405180910390fd5b60006111078484610e04565b905060001981146111295761111c8183611459565b6111298484848403610f12565b50505050565b61116c61113c60056113f4565b8061114c575061114c60066113f4565b8061115c575061115c60036113f4565b80610f4f5750610f4f600d6113f4565b61117e836001600160a01b03166110d4565b611190826001600160a01b03166110d4565b61119b838383611488565b6001600160a01b0383166000908152600760205260409020546111be8183611459565b6001600160a01b0380851660008181526007602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061121e9086815260200190565b60405180910390a3611129565b600154600160a01b900460ff1661125557604051638dfc202b60e01b815260040160405180910390fd5b565b611264610f4f60016113f4565b611276826001600160a01b03166110d4565b61128282600083611488565b6001600160a01b0382166000908152600760205260409020546112a58183611459565b6001600160a01b03831660008181526007602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610fcd565b505050565b600154600160a01b900460ff16156112555760405163d93c066560e01b815260040160405180910390fd5b61133a610f4f600a6113f4565b6001600160a01b038083166000908152600760209081526040918290208251808401845281548152835180850190945260018201548452600290910154841683830190815291810192909252519091166113a757604051631ec4ebaf60e21b815260040160405180910390fd5b6020810151516113b79083611459565b6001600160a01b03928316600090815260076020908152604080832060010180548690039055928101510151909316835290912080549091019055565b600080600083600d81111561140b5761140b6119ca565b600d81111561141c5761141c6119ca565b815260208101919091526040016000205460ff1692915050565b8015156000036108e657604051632c85eca960e11b815260040160405180910390fd5b808210156114845760405163cf47918160e01b81526004810183905260248101829052604401610198565b5050565b600154600160a01b900460ff16156112fd5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610198565b60405180604001604052806000815260200161152d60405180604001604052806000815260200160006001600160a01b031681525090565b905290565b60006020808352835180602085015260005b8181101561156057858101830151858201604001528201611544565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461159857600080fd5b919050565b600080604083850312156115b057600080fd5b6115b983611581565b946020939093013593505050565b6000602082840312156115d957600080fd5b6115e282611581565b9392505050565b6000806000606084860312156115fe57600080fd5b61160784611581565b925061161560208501611581565b9150604084013590509250925092565b60006020828403121561163757600080fd5b5035919050565b81518152602080830151805182840152908101516001600160a01b0316604083015260608201906105aa565b815181526020808301516001600160a01b03169082015260408101610a74565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156116c3576116c361168a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156116f2576116f261168a565b604052919050565b600067ffffffffffffffff8211156117145761171461168a565b5060051b60200190565b600082601f83011261172f57600080fd5b8135602061174461173f836116fa565b6116c9565b8083825260208201915060208460051b87010193508684111561176657600080fd5b602086015b848110156117895761177c81611581565b835291830191830161176b565b509695505050505050565b600080604083850312156117a757600080fd5b823567ffffffffffffffff808211156117bf57600080fd5b818501915085601f8301126117d357600080fd5b813560206117e361173f836116fa565b82815260059290921b8401810191818101908984111561180257600080fd5b948201945b8386101561182057853582529482019490820190611807565b9650508601359250508082111561183657600080fd5b506118438582860161171e565b9150509250929050565b6000806040838503121561186057600080fd5b61186983611581565b915061187760208401611581565b90509250929050565b600080828403608081121561189457600080fd5b61189d84611581565b92506060601f19820112156118b157600080fd5b6118b96116a0565b602085013581526040603f19830112156118d257600080fd5b6118da6116a0565b9150604085013582526118ef60608601611581565b602083015281602082015280925050509250929050565b600181811c9082168061191a57607f821691505b602082108103610c1757634e487b7160e01b600052602260045260246000fd5b6020808252601a908201527f4f6e6c794f776e65723a204d616e61676572206e6f7420736574000000000000604082015260600190565b60006020828403121561198357600080fd5b815180151581146115e257600080fd5b80820180821115610a7457634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fdfe546f6b656e3a207365744174746f726e65793a204e6f74207065726d6974746564a264697066735822122080ad51f6b54f1948a14632ee4d615a7d183e9574f4154a3ad93adca3f92483c164736f6c63430008180033";

type SimpliTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpliTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpliToken__factory extends ContractFactory {
  constructor(...args: SimpliTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _ownershipMgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      attorney_,
      reserve_,
      initTokenReceiver,
      _ownershipMgr,
      overrides || {}
    );
  }
  override deploy(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _ownershipMgr: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      attorney_,
      reserve_,
      initTokenReceiver,
      _ownershipMgr,
      overrides || {}
    ) as Promise<
      SimpliToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpliToken__factory {
    return super.connect(runner) as SimpliToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpliTokenInterface {
    return new Interface(_abi) as SimpliTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpliToken {
    return new Contract(address, _abi, runner) as unknown as SimpliToken;
  }
}
