/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Reserve,
  ReserveInterface,
} from "../../../../contracts/implementations/token/Reserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ManagerAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPermittedToCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d97380380610d9783398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b610d088061008f6000396000f3fe60806040526004361061007f5760003560e01c806388d695b21161004e57806388d695b214610152578063b88a391514610172578063dd2e0ac0146101aa578063fc0c546a146101ca57600080fd5b80631072cbea146100bb578063144fa6d7146100dd57806317be3fa5146100fd57806361737d621461011d57600080fd5b366100b65760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156100c757600080fd5b506100db6100d63660046109ff565b6101ea565b005b3480156100e957600080fd5b506100db6100f8366004610a2b565b6102c5565b34801561010957600080fd5b506100db6101183660046109ff565b6103b9565b34801561012957600080fd5b5061013d610138366004610a2b565b61048f565b60405190151581526020015b60405180910390f35b34801561015e57600080fd5b506100db61016d366004610b22565b610573565b34801561017e57600080fd5b50600054610192906001600160a01b031681565b6040516001600160a01b039091168152602001610149565b3480156101b657600080fd5b506100db6101c5366004610be4565b610649565b3480156101d657600080fd5b50600154610192906001600160a01b031681565b6000546001600160a01b03168061021457604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610bfd565b6102a9576040516315ed864b60e21b815260040160405180910390fd5b6001546102c0906001600160a01b03168484610722565b505050565b6000546001600160a01b0316806102ef57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610bfd565b610384576040516315ed864b60e21b815260040160405180910390fd5b610396826001600160a01b0316610785565b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316806103e357604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190610bfd565b610478576040516315ed864b60e21b815260040160405180910390fd5b6001546102c0906001600160a01b031684846107af565b600080546001600160a01b0316806104ba57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610bfd565b61054f576040516315ed864b60e21b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03851617905550600192915050565b6000546001600160a01b03168061059d57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190610bfd565b610632576040516315ed864b60e21b815260040160405180910390fd5b6001546102c0906001600160a01b031684846107df565b6000546001600160a01b03168061067357604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb9190610bfd565b610708576040516315ed864b60e21b815260040160405180910390fd5b60015461071e906001600160a01b0316836107fe565b5050565b6040516001600160a01b0383166024820152604481018290526102c090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261081d565b6001600160a01b0381166107ac5760405163867915ab60e01b815260040160405180910390fd5b50565b6040516001600160a01b0383166024820152604481018290526102c09084906317be3fa560e01b9060640161074e565b6102c08363c52c159360e01b848460405160240161074e929190610c1f565b61071e8263dd2e0ac060e01b8360405160240161074e91815260200190565b60006108326001600160a01b038416836108b2565b90508051600014806108535750808060200190518101906108539190610bfd565b6102c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100ad565b60606108c0838360006108c7565b9392505050565b606030318211156108ed5760405163cd78605960e01b81523060048201526024016100ad565b600080856001600160a01b031684866040516109099190610ca3565b60006040518083038185875af1925050503d8060008114610946576040519150601f19603f3d011682016040523d82523d6000602084013e61094b565b606091505b509150915061095b868383610965565b9695505050505050565b60608261097a57610975826109c1565b6108c0565b815115801561099157506001600160a01b0384163b155b156109ba57604051639996b31560e01b81526001600160a01b03851660048201526024016100ad565b50806108c0565b8051156109d15780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146107ac57600080fd5b60008060408385031215610a1257600080fd5b8235610a1d816109ea565b946020939093013593505050565b600060208284031215610a3d57600080fd5b81356108c0816109ea565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a8757610a87610a48565b604052919050565b600067ffffffffffffffff821115610aa957610aa9610a48565b5060051b60200190565b600082601f830112610ac457600080fd5b81356020610ad9610ad483610a8f565b610a5e565b8083825260208201915060208460051b870101935086841115610afb57600080fd5b602086015b84811015610b175780358352918301918301610b00565b509695505050505050565b60008060408385031215610b3557600080fd5b823567ffffffffffffffff80821115610b4d57600080fd5b818501915085601f830112610b6157600080fd5b81356020610b71610ad483610a8f565b82815260059290921b84018101918181019089841115610b9057600080fd5b948201945b83861015610bb7578535610ba8816109ea565b82529482019490820190610b95565b96505086013592505080821115610bcd57600080fd5b50610bda85828601610ab3565b9150509250929050565b600060208284031215610bf657600080fd5b5035919050565b600060208284031215610c0f57600080fd5b815180151581146108c057600080fd5b604080825283519082018190526000906020906060840190828701845b82811015610c615781516001600160a01b031684529284019290840190600101610c3c565b5050508381038285015284518082528583019183019060005b81811015610c9657835183529284019291840191600101610c7a565b5090979650505050505050565b6000825160005b81811015610cc45760208186018101518583015201610caa565b50600092019182525091905056fea2646970667358221220c01f94548ce31bfcd27188468363d4bf17fcd196422fa794dc7e80470a2ce86064736f6c63430008180033";

type ReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reserve__factory extends ContractFactory {
  constructor(...args: ReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ownershipManager, overrides || {});
  }
  override deploy(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ownershipManager, overrides || {}) as Promise<
      Reserve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reserve__factory {
    return super.connect(runner) as Reserve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveInterface {
    return new Interface(_abi) as ReserveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reserve {
    return new Contract(address, _abi, runner) as unknown as Reserve;
  }
}
