/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Reserve,
  ReserveInterface,
} from "../../../../contracts/implementations/token/Reserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f88380380610f8883398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b610ef98061008f6000396000f3fe60806040526004361061007f5760003560e01c806388d695b21161004e57806388d695b214610152578063b88a391514610172578063dd2e0ac0146101aa578063fc0c546a146101ca57600080fd5b80631072cbea146100bb578063144fa6d7146100dd57806317be3fa5146100fd57806361737d621461011d57600080fd5b366100b65760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156100c757600080fd5b506100db6100d6366004610ae2565b6101ea565b005b3480156100e957600080fd5b506100db6100f8366004610b0e565b6102e1565b34801561010957600080fd5b506100db610118366004610ae2565b61040c565b34801561012957600080fd5b5061013d610138366004610b0e565b6104fd565b60405190151581526020015b60405180910390f35b34801561015e57600080fd5b506100db61016d366004610c05565b61061b565b34801561017e57600080fd5b50600054610192906001600160a01b031681565b6040516001600160a01b039091168152602001610149565b3480156101b657600080fd5b506100db6101c5366004610cc7565b61070c565b3480156101d657600080fd5b50600154610192906001600160a01b031681565b6040518060600160405280602a8152602001610e9a602a91396000546001600160a01b03168061022c5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a49190610d17565b82906102c35760405162461bcd60e51b81526004016100ad9190610d5d565b506001546102db906001600160a01b03168585610801565b50505050565b6040805180820190915260208082527f526573657276653a20736574546f6b656e3a204e6f74207065726d6974746564908201526000546001600160a01b03168061033e5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190610d17565b82906103d55760405162461bcd60e51b81526004016100ad9190610d5d565b506103e8836001600160a01b0316610864565b5050600180546001600160a01b0319166001600160a01b0392909216919091179055565b604051806060016040528060218152602001610e56602191396000546001600160a01b03168061044e5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190610d17565b82906104e55760405162461bcd60e51b81526004016100ad9190610d5d565b506001546102db906001600160a01b0316858561088e565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600080549091906001600160a01b03168061055e5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d69190610d17565b82906105f55760405162461bcd60e51b81526004016100ad9190610d5d565b50600080546001600160a01b0319166001600160a01b0386161790555060019392505050565b604051806060016040528060258152602001610e31602591396000546001600160a01b03168061065d5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190610d17565b82906106f45760405162461bcd60e51b81526004016100ad9190610d5d565b506001546102db906001600160a01b031685856108be565b604051806060016040528060238152602001610e77602391396000546001600160a01b03168061074e5760405162461bcd60e51b81526004016100ad90610ce0565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190610d17565b82906107e55760405162461bcd60e51b81526004016100ad9190610d5d565b506001546107fc906001600160a01b0316846108dd565b505050565b6040516001600160a01b0383166024820152604481018290526107fc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610900565b6001600160a01b03811661088b5760405163867915ab60e01b815260040160405180910390fd5b50565b6040516001600160a01b0383166024820152604481018290526107fc9084906317be3fa560e01b9060640161082d565b6107fc8363c52c159360e01b848460405160240161082d929190610d90565b6108fc8263dd2e0ac060e01b8360405160240161082d91815260200190565b5050565b60006109156001600160a01b03841683610995565b90508051600014806109365750808060200190518101906109369190610d17565b6107fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100ad565b60606109a3838360006109aa565b9392505050565b606030318211156109d05760405163cd78605960e01b81523060048201526024016100ad565b600080856001600160a01b031684866040516109ec9190610e14565b60006040518083038185875af1925050503d8060008114610a29576040519150601f19603f3d011682016040523d82523d6000602084013e610a2e565b606091505b5091509150610a3e868383610a48565b9695505050505050565b606082610a5d57610a5882610aa4565b6109a3565b8151158015610a7457506001600160a01b0384163b155b15610a9d57604051639996b31560e01b81526001600160a01b03851660048201526024016100ad565b50806109a3565b805115610ab45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461088b57600080fd5b60008060408385031215610af557600080fd5b8235610b0081610acd565b946020939093013593505050565b600060208284031215610b2057600080fd5b81356109a381610acd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b6a57610b6a610b2b565b604052919050565b600067ffffffffffffffff821115610b8c57610b8c610b2b565b5060051b60200190565b600082601f830112610ba757600080fd5b81356020610bbc610bb783610b72565b610b41565b8083825260208201915060208460051b870101935086841115610bde57600080fd5b602086015b84811015610bfa5780358352918301918301610be3565b509695505050505050565b60008060408385031215610c1857600080fd5b823567ffffffffffffffff80821115610c3057600080fd5b818501915085601f830112610c4457600080fd5b81356020610c54610bb783610b72565b82815260059290921b84018101918181019089841115610c7357600080fd5b948201945b83861015610c9a578535610c8b81610acd565b82529482019490820190610c78565b96505086013592505080821115610cb057600080fd5b50610cbd85828601610b96565b9150509250929050565b600060208284031215610cd957600080fd5b5035919050565b6020808252601a908201527f4f6e6c794f776e65723a204d616e61676572206e6f7420736574000000000000604082015260600190565b600060208284031215610d2957600080fd5b815180151581146109a357600080fd5b60005b83811015610d54578181015183820152602001610d3c565b50506000910152565b6020815260008251806020840152610d7c816040850160208701610d39565b601f01601f19169190910160400192915050565b604080825283519082018190526000906020906060840190828701845b82811015610dd25781516001600160a01b031684529284019290840190600101610dad565b5050508381038285015284518082528583019183019060005b81811015610e0757835183529284019291840191600101610deb565b5090979650505050505050565b60008251610e26818460208701610d39565b919091019291505056fe526573657276653a2062617463685472616e736665723a204e6f74207065726d6974746564526573657276653a206c6f636b546f6b656e3a204e6f74207065726d6974746564526573657276653a20756e6c6f636b546f6b656e3a204e6f74207065726d6974746564526573657276653a2062617463685472616e73666572546f6b656e3a204e6f74207065726d6974746564a26469706673582212201671710480ef70f8740454884c0837208e9662bb9c64d1fb77da713eca76a3ae64736f6c63430008180033";

type ReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reserve__factory extends ContractFactory {
  constructor(...args: ReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ownershipManager, overrides || {});
  }
  override deploy(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ownershipManager, overrides || {}) as Promise<
      Reserve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reserve__factory {
    return super.connect(runner) as Reserve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveInterface {
    return new Interface(_abi) as ReserveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reserve {
    return new Contract(address, _abi, runner) as unknown as Reserve;
  }
}
