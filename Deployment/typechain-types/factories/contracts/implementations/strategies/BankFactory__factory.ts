/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BankFactory,
  BankFactoryInterface,
} from "../../../../contracts/implementations/strategies/BankFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ManagerAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPermittedToCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "createBank",
    outputs: [
      {
        internalType: "address",
        name: "_bank",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getBank",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBanks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c96380380611c9683398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b611c078061008f6000396000f3fe60806040526004361061004e5760003560e01c806361737d621461005d578063b88a391514610092578063c3b95b1b146100ca578063e487862714610100578063f01cc0a61461012057600080fd5b3661005857600080fd5b600080fd5b34801561006957600080fd5b5061007d6100783660046103cf565b610144565b60405190151581526020015b60405180910390f35b34801561009e57600080fd5b506000546100b2906001600160a01b031681565b6040516001600160a01b039091168152602001610089565b3480156100d657600080fd5b506100b26100e53660046103f8565b6000908152600260205260409020546001600160a01b031690565b34801561010c57600080fd5b506100b261011b3660046103f8565b61022a565b34801561012c57600080fd5b5061013660015481565b604051908152602001610089565b600080546001600160a01b03168061016f57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156101c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e79190610411565b610204576040516315ed864b60e21b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038516179055600191505b50919050565b600080546001600160a01b03168061025557604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610411565b6102ea576040516315ed864b60e21b815260040160405180910390fd5b6000838152600260205260409020546001600160a01b03166103165761030f83610336565b9150610224565b6000838152600260205260409020546001600160a01b03165b9392505050565b600180546000918261034783610433565b90915550506000546040516001600160a01b0390911690610367906103c2565b6001600160a01b039091168152602001604051809103906000f080158015610393573d6000803e3d6000fd5b50600083815260026020526040902080546001600160a01b0319166001600160a01b0383161790559050919050565b6117778061045b83390190565b6000602082840312156103e157600080fd5b81356001600160a01b038116811461032f57600080fd5b60006020828403121561040a57600080fd5b5035919050565b60006020828403121561042357600080fd5b8151801515811461032f57600080fd5b60006001820161045357634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b5060405161177738038061177783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0383161790555060018055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6116e4806100936000396000f3fe6080604052600436106100a05760003560e01c806361737d621161006457806361737d62146101f757806383a7b08014610217578063b88a391514610238578063bad4a01f14610270578063bb16369f14610283578063c879c6d8146102a357600080fd5b80633bc5de301461010157806341a8d7ce1461014c5780634ba223441461016e5780634cd01af1146101815780636112fe2e146101c757600080fd5b366100fc5760405162461bcd60e51b815260206004820152602160248201527f506c656173652075736520746865206465706f73697428292066756e6374696f6044820152603760f91b60648201526084015b60405180910390fd5b600080fd5b34801561010d57600080fd5b50604080518082018252600080825260209182015281518083019092526002548252600354908201526040516101439190611227565b60405180910390f35b34801561015857600080fd5b5061016c61016736600461125a565b6102c3565b005b61016c61017c366004611311565b6103a6565b34801561018d57600080fd5b506101a161019c36600461125a565b6106a1565b604080518251151581526020928301518051848301529092015190820152606001610143565b3480156101d357600080fd5b506101e76101e23660046114d7565b61070f565b6040519015158152602001610143565b34801561020357600080fd5b506101e76102123660046114f0565b6108f6565b61022a61022536600461150b565b6109da565b604051908152602001610143565b34801561024457600080fd5b50600054610258906001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6101e761027e3660046114d7565b610c2f565b34801561028f57600080fd5b5061016c61029e366004611560565b610c43565b3480156102af57600080fd5b5061016c6102be3660046115a2565b610d1e565b6000546001600160a01b0316806102ed57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036591906115d5565b610382576040516315ed864b60e21b815260040160405180910390fd5b6002805490600061039283611608565b91905055506103a18383610f03565b505050565b6000546001600160a01b0316806103d057604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044891906115d5565b610465576040516315ed864b60e21b815260040160405180910390fd5b61046f8888611621565b6040516370a0823160e01b81523060048201526001600160a01b038b16906370a0823190602401602060405180830381865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190611634565b10156104e5576104e561164d565b6001600160a01b038a166000908152600560209081526040808320858452825291829020825180840190935280548352600101549082015284156106255760056000856001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060056000856001600160a01b03166001600160a01b0316815260200190815260200160002060008481526020019081526020016000206000808201600090556001820160009055505080600560008d6001600160a01b03166001600160a01b031681526020019081526020016000206000858152602001908152602001600020600082015181600001556020820151816001015590505061061b8484610f83565b6106258b84610f03565b60405180604001604052806000815260200161065283600001518460200151610fff90919063ffffffff16565b90526001600160a01b038c1660009081526005602090815260408083208784528252909120825181559101516001909101558615610694576106948a87611012565b5050505050505050505050565b6106a96111f1565b506040805180820182526001600160a01b03841660008181526004602090815284822086835281528482205460ff161515845291815260058252838120858252825283902083518085019094528054845260010154838201528101919091525b92915050565b336000818152600460209081526040808320858452909152812054909190839060ff1661074f5760405163442421a560e11b815260040160405180910390fd5b6002600154036107a15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001908155336000818152600560209081526040808320898452825280832081518083019092528054825290940154908401819052919291303191036107fc57604051636aecca6760e11b815260040160405180910390fd5b815160000361083e5761080f8388610f83565b6001600160a01b03831660009081526005602090815260408083208a8452909152812081815560010155610866565b6001600160a01b03831660009081526005602090815260408083208a84529091528120600101555b81602001518110156108ac5760405162461bcd60e51b815260206004820152600f60248201526e42616c616e636520416e6f6d616c7960881b60448201526064016100f3565b60208201516040516001600160a01b0385169180156108fc02916000818181858888f193505050501580156108e5573d6000803e3d6000fd5b505060018080559695505050505050565b600080546001600160a01b03168061092157604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099991906115d5565b6109b6576040516315ed864b60e21b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03851617905550600192915050565b600080546001600160a01b031680610a0557604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906115d5565b610a9a576040516315ed864b60e21b815260040160405180910390fd5b6001600160a01b03871615801590610aba57506001600160a01b03881615155b610ac657610ac661164d565b6001600160a01b0388166000908152600560209081526040808320868452825280832081518083019092528054808352600190910154928201929092529190610b0f9034610fff565b9050808611610b3a57610b30610b2582886110fc565b602084015190610fff565b6020830152610bc6565b60208201518251600091610b5891610b529034610fff565b90610fff565b905086811015610bb55760405162461bcd60e51b815260206004820152602260248201527f4167677265676174652062616c616e63657320697320696e73756666696369656044820152611b9d60f21b60648201526084016100f3565b610bbf81886110fc565b6020840152505b508481526001600160a01b038916600090815260056020908152604080832087845282529091208251815590820151600190910155868615610c1657600380548801905586881115610c16578690035b610c218a8a83611108565b509598975050505050505050565b6000610c3b3483611181565b506001919050565b6000546001600160a01b031680610c6d57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce591906115d5565b610d02576040516315ed864b60e21b815260040160405180910390fd5b610d0d858585611108565b610d178583610f83565b5050505050565b600260015403610d705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001556000546001600160a01b031680610d9f57604051637e70a7e360e01b815260040160405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1791906115d5565b610e34576040516315ed864b60e21b815260040160405180910390fd5b6003546000819003610e5957604051630c5214e560e31b815260040160405180910390fd5b6001600160a01b038316610e805760405163dc2e5e8d60e01b815260040160405180910390fd5b600060035560405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef891906115d5565b505060018055505050565b6001600160a01b038216600090815260046020908152604080832084845290915290205460ff1615610f535760405163abb3a9f560e01b81526001600160a01b03831660048201526024016100f3565b6001600160a01b03909116600090815260046020908152604080832093835292905220805460ff19166001179055565b6001600160a01b038216600090815260046020908152604080832084845290915290205460ff16610fd257604051636d1a905760e01b81526001600160a01b03831660048201526024016100f3565b6001600160a01b03909116600090815260046020908152604080832093835292905220805460ff19169055565b600061100b8284611621565b9392505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107d9190611634565b600354909150808211156110f1576110958183611663565b91506110ab8351836111e590919063ffffffff16565b905060005b83518110156110ef5760008482815181106110cd576110cd611676565b602002602001015160c0015190506110e6818785611108565b506001016110b0565b505b505060006002555050565b600061100b8284611663565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af1158015611157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117b91906115d5565b50505050565b336000818152600460209081526040808320858452909152902054829060ff166111be5760405163442421a560e11b815260040160405180910390fd5b50503360009081526005602090815260408083209383529290522060010180549091019055565b600061100b828461168c565b6040518060400160405280600015158152602001611222604051806040016040528060008152602001600081525090565b905290565b815181526020808301519082015260408101610709565b80356001600160a01b038116811461125557600080fd5b919050565b6000806040838503121561126d57600080fd5b6112768361123e565b946020939093013593505050565b801515811461129257600080fd5b50565b803561125581611284565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156112da576112da6112a0565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611309576113096112a0565b604052919050565b60008060008060008060008060006101208a8c03121561133057600080fd5b6113398a61123e565b985061134760208b0161123e565b975060408a0135965060608a0135955061136460808b0135611284565b60808a0135945067ffffffffffffffff60a08b0135111561138457600080fd5b8a601f60a08c01358c01011261139957600080fd5b67ffffffffffffffff60a08b01358b013511156113b8576113b86112a0565b6113ce602060a08c01358c013560051b016112e0565b60a08b01358b0180358083526020808401939260089290921b909101018d10156113f757600080fd5b602060a08d01358d01015b60a08d01358d01803560081b016020018110156114a157610100818f03121561142a57600080fd5b6114326112b6565b813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261147460c0830161123e565b60c082015261148660e0830135611284565b60e08281013590820152835260209092019161010001611402565b5094506114b2905060c08b01611295565b92506114c060e08b0161123e565b91506101008a013590509295985092959850929598565b6000602082840312156114e957600080fd5b5035919050565b60006020828403121561150257600080fd5b61100b8261123e565b60008060008060008060c0878903121561152457600080fd5b61152d8761123e565b955061153b6020880161123e565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561157657600080fd5b61157f8561123e565b935061158d6020860161123e565b93969395505050506040820135916060013590565b600080604083850312156115b557600080fd5b6115be8361123e565b91506115cc6020840161123e565b90509250929050565b6000602082840312156115e757600080fd5b815161100b81611284565b634e487b7160e01b600052601160045260246000fd5b60006001820161161a5761161a6115f2565b5060010190565b80820180821115610709576107096115f2565b60006020828403121561164657600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b81810381811115610709576107096115f2565b634e487b7160e01b600052603260045260246000fd5b6000826116a957634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204af0cc7125eed8b39da11667e3e0fa535fba2e464f18febcba4ab12ac0730ebd64736f6c63430008180033a2646970667358221220677b7aa9b96262351483555268618c378312d29a38c0f9135cab7e9959926d3564736f6c63430008180033";

type BankFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankFactory__factory extends ContractFactory {
  constructor(...args: BankFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ownershipManager, overrides || {});
  }
  override deploy(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ownershipManager, overrides || {}) as Promise<
      BankFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BankFactory__factory {
    return super.connect(runner) as BankFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankFactoryInterface {
    return new Interface(_abi) as BankFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BankFactory {
    return new Contract(address, _abi, runner) as unknown as BankFactory;
  }
}
