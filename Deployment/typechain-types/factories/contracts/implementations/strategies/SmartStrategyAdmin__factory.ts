/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SmartStrategyAdmin,
  SmartStrategyAdminInterface,
} from "../../../../contracts/implementations/strategies/SmartStrategyAdmin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alcCreationFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_assetAdmin",
        type: "address",
      },
      {
        internalType: "contract ISmartStrategy",
        name: "_smartStrategyInstance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1167FailedCreateClone",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InsufficientMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NoStrategyFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OperationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "StatusAlreadyUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "StrategyWasDeleted",
    type: "error",
  },
  {
    inputs: [],
    name: "UpgradeNotReady",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "activateStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetClass",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "createStrategy",
    outputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dormantStrategies",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "handpickStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "rekeyStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAssetAdmin",
        type: "address",
      },
    ],
    name: "setAssetAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeTo",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setStrategyCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newInstance",
        type: "address",
      },
    ],
    name: "setdeployedInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smartStrategyInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStrategies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "upgraded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200187538038062001875833981016040819052620000349162000152565b8484848484338062000079576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240160405180910390fd5b6200008481620000e9565b50600380546001600160a01b038087166001600160a01b03199283161790925560048054868416908316179055600680548584169083161790556007805492841692909116919091179055620000d985600255565b50505050505050505050620001c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200014f57600080fd5b50565b600080600080600060a086880312156200016b57600080fd5b8551945060208601516200017f8162000139565b6040870151909450620001928162000139565b6060870151909350620001a58162000139565b6080870151909250620001b88162000139565b809150509295509295909350565b61169f80620001d66000396000f3fe6080604052600436106101695760003560e01c80638da5cb5b116100d1578063c87dfeb41161008a578063f46901ed11610064578063f46901ed146104e2578063f8806a1314610502578063f96d7b8014610522578063fc0c546a1461054657600080fd5b8063c87dfeb414610482578063d80ea5a0146104a2578063f2fde38b146104c257600080fd5b80638da5cb5b146103a95780639865fccf146103c7578063a793330f146103e7578063b3872e6214610422578063c18323dc14610442578063c45a01551461046257600080fd5b80635bb47808116101235780635bb47808146102e45780635d0341ba14610304578063715018a6146103345780637316bcd11461034957806386c9de05146103695780638a2f7e451461038957600080fd5b8062f714ce146101f7578063017e7e5814610217578063144fa6d7146102545780633c724205146102745780634753ab7b1461029457806348d0374a146102c457600080fd5b366101f2576003546040516000916001600160a01b03169034908381818185875af1925050503d80600081146101bb576040519150601f19603f3d011682016040523d82523d6000602084013e6101c0565b606091505b50509050806101f05760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b005b600080fd5b34801561020357600080fd5b506101f061021236600461150d565b610566565b34801561022357600080fd5b50600354610237906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561026057600080fd5b506101f061026f366004611539565b61072d565b34801561028057600080fd5b506101f061028f366004611539565b610789565b3480156102a057600080fd5b506102b46102af366004611554565b6107e5565b604051901515815260200161024b565b3480156102d057600080fd5b506101f06102df366004611539565b6108b9565b3480156102f057600080fd5b506101f06102ff366004611539565b610915565b34801561031057600080fd5b506102b461031f366004611539565b60096020526000908152604090205460ff1681565b34801561034057600080fd5b506101f0610971565b34801561035557600080fd5b50610237610364366004611539565b610985565b34801561037557600080fd5b50600654610237906001600160a01b031681565b34801561039557600080fd5b506102b46103a4366004611539565b610a7a565b3480156103b557600080fd5b506000546001600160a01b0316610237565b3480156103d357600080fd5b506102376103e2366004611554565b610c65565b3480156103f357600080fd5b506102b461040236600461156d565b600b60209081526000928352604080842090915290825290205460ff1681565b34801561042e57600080fd5b506101f061043d366004611554565b610c8f565b34801561044e57600080fd5b506101f061045d366004611539565b610ca3565b34801561046e57600080fd5b50600554610237906001600160a01b031681565b34801561048e57600080fd5b50600754610237906001600160a01b031681565b3480156104ae57600080fd5b506102b46104bd366004611539565b610d5f565b3480156104ce57600080fd5b506101f06104dd366004611539565b610e98565b3480156104ee57600080fd5b506101f06104fd366004611539565b610ed3565b34801561050e57600080fd5b5061023761051d366004611539565b610f2f565b34801561052e57600080fd5b5061053860015481565b60405190815260200161024b565b34801561055257600080fd5b50600454610237906001600160a01b031681565b600654604051634df48c7360e11b81526001600160a01b03808416600483015283921690639be918e690602401602060405180830381865afa1580156105b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d49190611597565b6106055760405162461bcd60e51b81526020600482015260026024820152614e5360f01b60448201526064016101e7565b3361060f81610f53565b156106f1576001600160a01b038082166000908152600a60205260409020541660405163024ab93760e21b81526001600160a01b038581166004830152838116602483015260448201879052919091169063092ae4dc906064016020604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190611597565b6106ec5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b60448201526064016101e7565b610727565b60405162461bcd60e51b815260206004820152600b60248201526a4e6f20737472617465677960a81b60448201526064016101e7565b50505050565b610735610f73565b6001600160a01b03811661076757604051633202e20d60e21b81526001600160a01b03821660048201526024016101e7565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610791610f73565b6001600160a01b0381166107c357604051633202e20d60e21b81526001600160a01b03821660048201526024016101e7565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600033604080518082019091526015815274155cd95c89dcc81cdd1c985d1959de48195e1a5cdd605a1b60208201526000908161082184610f53565b15151481906108435760405162461bcd60e51b81526004016101e791906115dd565b506008543390600090610857908890610fa0565b90506001600160a01b03811615610890576108728282611025565b60055461088b906001600160a01b03838116911661107e565b6108ac565b60405163b279bb2160e01b8152600481018890526024016101e7565b5060019695505050505050565b6108c1610f73565b6001600160a01b0381166108f357604051633202e20d60e21b81526001600160a01b03821660048201526024016101e7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b61091d610f73565b6001600160a01b03811661094f57604051633202e20d60e21b81526001600160a01b03821660048201526024016101e7565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610979610f73565b61098360006110de565b565b60008160006040518060400160405280601b81526020017f5573657220616c7265616479206f776e206120737472617465677900000000008152508115156109cc84610f53565b15151481906109ee5760405162461bcd60e51b81526004016101e791906115dd565b506005546001600160a01b031615801590610a1c57506005546001600160a01b0316336001600160a01b0316145b610a685760405162461bcd60e51b815260206004820181905260248201527f4e6f74207065726d6974746564207c7c20666163746f7279206e6f742073657460448201526064016101e7565b610a718561112e565b95945050505050565b60003360408051808201909152601281527114dd1c985d1959de481b9bdd08199bdd5b9960721b602082015260019081610ab384610f53565b1515148190610ad55760405162461bcd60e51b81526004016101e791906115dd565b50600654604051634df48c7360e11b81526001600160a01b03808816600483015287921690639be918e690602401602060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b449190611597565b610b755760405162461bcd60e51b81526020600482015260026024820152614e5360f01b60448201526064016101e7565b600754336000818152600a60209081526040808320546001600160a01b03958616808552600b84528285209190961680855292529091205491929160ff1615610bd157604051630dd6d40160e11b815260040160405180910390fd5b6000610bdc8461112e565b9050610be88483611230565b610bf28482611025565b610c066001600160a01b038316828c61128b565b5060088054600180820183556000929092527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b03939093169290921790915598975050505050505050565b60088181548110610c7557600080fd5b6000918252602090912001546001600160a01b0316905081565b610c97610f73565b610ca081600255565b50565b610cab610f73565b8060016040518060400160405280601881526020017f5573657220616c72656164792064656163746976617465640000000000000000815250811515610cf084610f53565b1515148190610d125760405162461bcd60e51b81526004016101e791906115dd565b506001600160a01b038085166000908152600a60209081526040918290208251808401909352805484168084526001909101549093169082015290610d58908690611230565b5050505050565b6000610d69610f73565b816000604051806040016040528060138152602001725573657220616c72656164792061637469766560681b815250811515610da484610f53565b1515148190610dc65760405162461bcd60e51b81526004016101e791906115dd565b506001600160a01b038086166000908152600a60209081526040918290208251808401909352805484168084526001909101549093169082015290158015610e19575060208101516001600160a01b0316155b15610e2d57610e278661112e565b50610e8c565b60208101516001600160a01b0316610e7e5760405162461bcd60e51b8152602060048201526014602482015273155cd95c881dd85cc819195858dd1a5d985d195960621b60448201526064016101e7565b610e8c868260200151611025565b50600195945050505050565b610ea0610f73565b6001600160a01b038116610eca57604051631e4fbdf760e01b8152600060048201526024016101e7565b610ca0816110de565b610edb610f73565b6001600160a01b038116610f0d57604051633202e20d60e21b81526001600160a01b03821660048201526024016101e7565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038082166000908152600a60205260408120549091165b92915050565b6001600160a01b039081166000908152600a602052604090205416151590565b6000546001600160a01b031633146109835760405163118cdaa760e01b81523360048201526024016101e7565b6000818310610fc25760405163531c25d760e01b815260040160405180910390fd5b60088381548110610fd557610fd5611610565b6000918252602090912001546001600160a01b0316905080610f4d5760405162461bcd60e51b8152602060048201526009602482015268139bdd08199bdd5b9960ba1b60448201526064016101e7565b6040805180820182526001600160a01b039283168152600060208083018281529585168252600a905291909120905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6040516001600160a01b03821660248201526110da9083906306c0752d60e51b906044015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112c1565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6005546000906001600160a01b031661115a5760405163179ce99f60e01b815260040160405180910390fd5b6001805490600061116a83611626565b90915550506007546001546040516001600160a01b03909216916111df916111b191869060200191825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120826001600160a01b031661134b90919063ffffffff16565b91506111eb8383611025565b6001600160a01b038082166000908152600b602090815260408083208685168085529252909120805460ff1916600117905560055461122a921661107e565b50919050565b60408051808201825260008082526001600160a01b0393841660208084019182529585168252600a90955291909120905181546001600160a01b03199081169184169190911782559251600190910180549093169116179055565b6040516001600160a01b038084166024830152821660448201526112bc90849063266a23b160e21b906064016110a3565b505050565b60006112d66001600160a01b038416836113b9565b8051909150156112bc57808060200190518101906112f49190611597565b6112bc5760405162461bcd60e51b815260206004820152602260248201527f5361666543616c6c3a204163636f756e74206f7065726174696f6e206661696c604482015261195960f21b60648201526084016101e7565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b038116610f4d576040516330be1a3d60e21b815260040160405180910390fd5b60606113c7838360006113ce565b9392505050565b606030318211156113f45760405163cd78605960e01b81523060048201526024016101e7565b600080856001600160a01b03168486604051611410919061164d565b60006040518083038185875af1925050503d806000811461144d576040519150601f19603f3d011682016040523d82523d6000602084013e611452565b606091505b509150915061146286838361146c565b9695505050505050565b6060826114815761147c826114c8565b6113c7565b815115801561149857506001600160a01b0384163b155b156114c157604051639996b31560e01b81526001600160a01b03851660048201526024016101e7565b50806113c7565b8051156114d85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461150857600080fd5b919050565b6000806040838503121561152057600080fd5b82359150611530602084016114f1565b90509250929050565b60006020828403121561154b57600080fd5b6113c7826114f1565b60006020828403121561156657600080fd5b5035919050565b6000806040838503121561158057600080fd5b611589836114f1565b9150611530602084016114f1565b6000602082840312156115a957600080fd5b815180151581146113c757600080fd5b60005b838110156115d45781810151838201526020016115bc565b50506000910152565b60208152600082518060208401526115fc8160408501602087016115b9565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161164657634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825161165f8184602087016115b9565b919091019291505056fea264697066735822122066d012c89dee490ce7ea89a810dd75a1fccc448dc6fd8f4c8d5faa5fb3594c3d64736f6c63430008180033";

type SmartStrategyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartStrategyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartStrategyAdmin__factory extends ContractFactory {
  constructor(...args: SmartStrategyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _alcCreationFee: BigNumberish,
    _feeTo: AddressLike,
    _token: AddressLike,
    _assetAdmin: AddressLike,
    _smartStrategyInstance: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _alcCreationFee,
      _feeTo,
      _token,
      _assetAdmin,
      _smartStrategyInstance,
      overrides || {}
    );
  }
  override deploy(
    _alcCreationFee: BigNumberish,
    _feeTo: AddressLike,
    _token: AddressLike,
    _assetAdmin: AddressLike,
    _smartStrategyInstance: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _alcCreationFee,
      _feeTo,
      _token,
      _assetAdmin,
      _smartStrategyInstance,
      overrides || {}
    ) as Promise<
      SmartStrategyAdmin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SmartStrategyAdmin__factory {
    return super.connect(runner) as SmartStrategyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartStrategyAdminInterface {
    return new Interface(_abi) as SmartStrategyAdminInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SmartStrategyAdmin {
    return new Contract(address, _abi, runner) as unknown as SmartStrategyAdmin;
  }
}
