/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Trustee,
  TrusteeInterface,
} from "../../../../contracts/implementations/strategies/Trustee";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "NotABeneficiary",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDev",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "claimContribution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccumulatedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "strategies",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "registerBeneficiaries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ISmartStrategyAdmin",
        name: "_strategyAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyAdmin",
    outputs: [
      {
        internalType: "contract ISmartStrategyAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "transferOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b503380610050576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240160405180910390fd5b6100598161005f565b506100af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e3d806100be6000396000f3fe6080604052600436106100c65760003560e01c8063979600c71161007f578063d1d58b2511610059578063d1d58b2514610283578063d4bf857f146102b3578063f2fde38b146102d3578063f887ea40146102f357600080fd5b8063979600c714610230578063a2dc17fc14610243578063c879c6d81461026357600080fd5b8063017e7e581461014d578063363bf9641461018a5780635eb33268146101aa578063715018a6146101da5780638da5cb5b146101ef57806393d217831461020d57600080fd5b366101485760006100d633610313565b6001600160a01b031603610146576002546040516000916001600160a01b03169034908381818185875af1925050503d8060008114610131576040519150601f19603f3d011682016040523d82523d6000602084013e610136565b606091505b505090508061014457600080fd5b505b005b600080fd5b34801561015957600080fd5b5060025461016d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019657600080fd5b506101466101a5366004610b39565b610388565b3480156101b657600080fd5b506101ca6101c5366004610b84565b6103e6565b6040519015158152602001610181565b3480156101e657600080fd5b506101466104bc565b3480156101fb57600080fd5b506000546001600160a01b031661016d565b34801561021957600080fd5b506102226104d0565b604051908152602001610181565b6101ca61023e366004610bca565b6104e1565b34801561024f57600080fd5b506101ca61025e366004610bf9565b610684565b34801561026f57600080fd5b5061014661027e366004610ce1565b6107dd565b34801561028f57600080fd5b5061022261029e366004610bca565b60009081526004602052604090206001015490565b3480156102bf57600080fd5b5060035461016d906001600160a01b031681565b3480156102df57600080fd5b506101466102ee366004610d1a565b61083b565b3480156102ff57600080fd5b5060055461016d906001600160a01b031681565b60035460405163f8806a1360e01b81526001600160a01b038381166004830152600092169063f8806a1390602401602060405180830381865afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610d37565b92915050565b610390610879565b600580546001600160a01b038086166001600160a01b0319928316179092556002805484841692169190911790558216156103e157600380546001600160a01b0319166001600160a01b0384161790555b505050565b6005546000906001600160a01b031633816104395760405162461bcd60e51b815260206004820152600e60248201526d149bdd5d195c881b9bdd081cd95d60921b60448201526064015b60405180910390fd5b816001600160a01b0316816001600160a01b03161461047f5760405162461bcd60e51b81526020600482015260026024820152614e4160f01b6044820152606401610430565b83156104a45760018054850190556002546104a4906001600160a01b031688866108a6565b6104af8688876108a6565b5060019695505050505050565b6104c4610879565b6104ce60006108ba565b565b60006104da610879565b5060015490565b600081816104ee33610313565b60008381526004602090815260408083206001600160a01b038516845260030190915290205490915060ff16610542576040516301b6d7df60e01b81526001600160a01b0382166004820152602401610430565b600061054d33610313565b60008681526004602081815260408084206001600160a01b0386168552600381018352908420805460ff1916905589845291905280549293509061059083610d6a565b909155505060008581526004602052604081206002810154600182015491546001600160a01b0390911692036105d3576000878152600460205260408120600101555b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190610d81565b6104af5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610430565b6005546000906001600160a01b031633816106d25760405162461bcd60e51b815260206004820152600e60248201526d149bdd5d195c881b9bdd081cd95d60921b6044820152606401610430565b816001600160a01b0316816001600160a01b0316146107185760405162461bcd60e51b81526020600482015260026024820152614e4160f01b6044820152606401610430565b86516000868152600460205260408120600181018990556002810180546001600160a01b0319166001600160a01b0389161790558290555b818160ff1610156107ce5760016004600089815260200190815260200160002060030160008b8460ff168151811061078a5761078a610da3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806107c681610db9565b915050610750565b50600198975050505050505050565b6107e5610879565b6001548061082b5760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610430565b60006001556103e18284836108a6565b610843610879565b6001600160a01b03811661086d57604051631e4fbdf760e01b815260006004820152602401610430565b610876816108ba565b50565b6000546001600160a01b031633146104ce5760405163118cdaa760e01b8152336004820152602401610430565b6103e16001600160a01b038316848361090a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092019092526020810180516001600160e01b031663a9059cbb60e01b1790526103e191859190600090610968908416836109dc565b8051909150156103e157808060200190518101906109869190610d81565b6103e15760405162461bcd60e51b815260206004820152602160248201527f5361666545524332303a204552433230206f7065726174696f6e206661696c656044820152601960fa1b6064820152608401610430565b60606109ea838360006109f1565b9392505050565b60603031821115610a175760405163cd78605960e01b8152306004820152602401610430565b600080856001600160a01b03168486604051610a339190610dd8565b60006040518083038185875af1925050503d8060008114610a70576040519150601f19603f3d011682016040523d82523d6000602084013e610a75565b606091505b5091509150610a85868383610a8f565b9695505050505050565b606082610aa457610a9f82610aeb565b6109ea565b8151158015610abb57506001600160a01b0384163b155b15610ae457604051639996b31560e01b81526001600160a01b0385166004820152602401610430565b50806109ea565b805115610afb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461087657600080fd5b8035610b3481610b14565b919050565b600080600060608486031215610b4e57600080fd5b8335610b5981610b14565b92506020840135610b6981610b14565b91506040840135610b7981610b14565b809150509250925092565b60008060008060808587031215610b9a57600080fd5b8435610ba581610b14565b93506020850135610bb581610b14565b93969395505050506040820135916060013590565b600060208284031215610bdc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610c0f57600080fd5b843567ffffffffffffffff80821115610c2757600080fd5b818701915087601f830112610c3b57600080fd5b8135602082821115610c4f57610c4f610be3565b8160051b604051601f19603f83011681018181108682111715610c7457610c74610be3565b60405292835281830193508481018201928b841115610c9257600080fd5b948201945b83861015610cb757610ca886610b29565b85529482019493820193610c97565b9850508801359550505060408601359250610cd6905060608601610b29565b905092959194509250565b60008060408385031215610cf457600080fd5b8235610cff81610b14565b91506020830135610d0f81610b14565b809150509250929050565b600060208284031215610d2c57600080fd5b81356109ea81610b14565b600060208284031215610d4957600080fd5b81516109ea81610b14565b634e487b7160e01b600052601160045260246000fd5b600081610d7957610d79610d54565b506000190190565b600060208284031215610d9357600080fd5b815180151581146109ea57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610dcf57610dcf610d54565b60010192915050565b6000825160005b81811015610df95760208186018101518583015201610ddf565b50600092019182525091905056fea264697066735822122037f471988e514cbcc6c5f7192446d67e31c7673f831d8d5d39a10a961741230064736f6c63430008180033";

type TrusteeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrusteeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Trustee__factory extends ContractFactory {
  constructor(...args: TrusteeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Trustee & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Trustee__factory {
    return super.connect(runner) as Trustee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrusteeInterface {
    return new Interface(_abi) as TrusteeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Trustee {
    return new Contract(address, _abi, runner) as unknown as Trustee;
  }
}
