/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Bank,
  BankInterface,
} from "../../../../contracts/implementations/strategies/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownershipManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AlreadyACustomer",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFeeToWithdraw",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "NotACustomer",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UserDoesNotHaveAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroWithdrawable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "addUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedCol",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "erc20Balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "depositCollateral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalClients",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "aggregateFee",
            type: "uint256",
          },
        ],
        internalType: "struct IBank.ViewData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "getUserData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "access",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "withdrawable",
                type: "uint256",
              },
            ],
            internalType: "struct IBank.Collateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct IBank.ViewUserData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attestedInitialBal",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allGF",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "durOfChoice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "payDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "turnTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loan",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "colBals",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sentQuota",
            type: "bool",
          },
        ],
        internalType: "struct Common.Contributor[]",
        name: "cData",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "isSwapped",
        type: "bool",
      },
      {
        internalType: "address",
        name: "defaulted",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "payback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setOwnershipManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rId",
        type: "uint256",
      },
    ],
    name: "withdrawCollateral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ownershipManager, overrides || {});
  }
  override deploy(
    _ownershipManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ownershipManager, overrides || {}) as Promise<
      Bank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Bank__factory {
    return super.connect(runner) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new Interface(_abi) as BankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Bank {
    return new Contract(address, _abi, runner) as unknown as Bank;
  }
}
