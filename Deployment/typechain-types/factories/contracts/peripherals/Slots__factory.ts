/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Slots,
  SlotsInterface,
} from "../../../contracts/peripherals/Slots";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getSlot",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMember",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isAdmin",
            type: "bool",
          },
        ],
        internalType: "struct Common.Slot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Slots__factory {
  static readonly abi = _abi;
  static createInterface(): SlotsInterface {
    return new Interface(_abi) as SlotsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Slots {
    return new Contract(address, _abi, runner) as unknown as Slots;
  }
}
