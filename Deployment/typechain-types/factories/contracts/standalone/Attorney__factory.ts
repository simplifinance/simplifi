/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Attorney,
  AttorneyInterface,
} from "../../../contracts/standalone/Attorney";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "contract IRoleBase",
        name: "_roleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "CallNotFromEscapeAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errorMsg",
        type: "string",
      },
    ],
    name: "ErrorOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lostAccount",
        type: "address",
      },
    ],
    name: "panicUnlock",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setRoleManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610be5380380610be583398101604081905261002f916100fe565b600080546001600160a81b0319166001600160a01b038381169190911790915582166100bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466565546f206973207a65726f20616464726573730000000000000000000000604482015260640160405180910390fd5b50600191909155600280546001600160a01b0319166001600160a01b03909216919091179055610141565b6001600160a01b03811681146100fb57600080fd5b50565b60008060006060848603121561011357600080fd5b835192506020840151610125816100e6565b6040850151909250610136816100e6565b809150509250925092565b610a95806101506000396000f3fe6080604052600436106100945760003560e01c806369fe0e2d1161005957806369fe0e2d146101b05780638456cb59146101d0578063ddca3f43146101e5578063f1d588c514610209578063fc0c546a1461022957600080fd5b8062435da514610100578063144fa6d71461013d5780633f4ba83a1461015d5780635c975abb1461017257806360d4507f1461019d57600080fd5b366100fb576002546040516000916001600160a01b03169034908381818185875af1925050503d80600081146100e6576040519150601f19603f3d011682016040523d82523d6000602084013e6100eb565b606091505b50509050806100f957600080fd5b005b600080fd5b34801561010c57600080fd5b50600054610120906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014957600080fd5b506100f96101583660046108f7565b610249565b34801561016957600080fd5b506100f96102c1565b34801561017e57600080fd5b50600054600160a01b900460ff165b6040519015158152602001610134565b6100f96101ab3660046108f7565b61031e565b3480156101bc57600080fd5b506100f96101cb366004610914565b6104ab565b3480156101dc57600080fd5b506100f96104b8565b3480156101f157600080fd5b506101fb60015481565b604051908152602001610134565b34801561021557600080fd5b5061018d6102243660046108f7565b610503565b34801561023557600080fd5b50600354610120906001600160a01b031681565b610251610530565b6001600160a01b03811661029f5760405162461bcd60e51b815260206004820152601060248201526f151bdad95b881a5cc81b9bdd081cd95d60821b60448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102c9610530565b6102d16105af565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6103266105db565b600354604051636ff96d1760e01b81526001600160a01b0383811660048301526000921690636ff96d1790602401606060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190610964565b6020810151519091506103dd5760405162461bcd60e51b815260206004820152601060248201526f139bc81b1bd8dac819195d1958dd195960821b6044820152606401610296565b60015434101561042f5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742076616c756520666f72206665650000000000006044820152606401610296565b6002546040516000916001600160a01b03169034908381818185875af1925050503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b505090508061048f57600080fd5b6003546104a6906001600160a01b03168484610606565b505050565b6104b3610530565b600155565b6104c0610530565b6104c86105db565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586103013390565b600061050d610530565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b031680610571576105716040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b81525061067e565b61057a336106a0565b6105ac576105ac6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b81525061067e565b50565b600054600160a01b900460ff166105d957604051638dfc202b60e01b815260040160405180910390fd5b565b600054600160a01b900460ff16156105d95760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038084166024830152825160448301526020808401518051606485015201511660848201526104a690849063f627590b60e01b9060a40160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610715565b8051156105ac578060405163cc86106360e01b815260040161029691906109ee565b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190610a21565b92915050565b600061072a6001600160a01b038416836107aa565b905080516000148061074b57508080602001905181019061074b9190610a21565b6104a65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610296565b60606107b8838360006107bf565b9392505050565b606030318211156107e55760405163cd78605960e01b8152306004820152602401610296565b600080856001600160a01b031684866040516108019190610a43565b60006040518083038185875af1925050503d806000811461083e576040519150601f19603f3d011682016040523d82523d6000602084013e610843565b606091505b509150915061085386838361085d565b9695505050505050565b6060826108725761086d826108b9565b6107b8565b815115801561088957506001600160a01b0384163b155b156108b257604051639996b31560e01b81526001600160a01b0385166004820152602401610296565b50806107b8565b8051156108c95780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146105ac57600080fd5b60006020828403121561090957600080fd5b81356107b8816108e2565b60006020828403121561092657600080fd5b5035919050565b6040805190810167ffffffffffffffff8111828210171561095e57634e487b7160e01b600052604160045260246000fd5b60405290565b6000818303606081121561097757600080fd5b61097f61092d565b835181526040601f198301121561099557600080fd5b61099d61092d565b91506020840151825260408401516109b4816108e2565b6020838101919091528101919091529392505050565b60005b838110156109e55781810151838201526020016109cd565b50506000910152565b6020815260008251806020840152610a0d8160408501602087016109ca565b601f01601f19169190910160400192915050565b600060208284031215610a3357600080fd5b815180151581146107b857600080fd5b60008251610a558184602087016109ca565b919091019291505056fea26469706673582212201c7f2c2da108600d5c64886c43330b1777a47efaaca4151986415aa21870811964736f6c63430008180033";

type AttorneyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttorneyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Attorney__factory extends ContractFactory {
  constructor(...args: AttorneyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fee: BigNumberish,
    _feeTo: AddressLike,
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _fee,
      _feeTo,
      _roleManager,
      overrides || {}
    );
  }
  override deploy(
    _fee: BigNumberish,
    _feeTo: AddressLike,
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_fee, _feeTo, _roleManager, overrides || {}) as Promise<
      Attorney & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Attorney__factory {
    return super.connect(runner) as Attorney__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttorneyInterface {
    return new Interface(_abi) as AttorneyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Attorney {
    return new Contract(address, _abi, runner) as unknown as Attorney;
  }
}
