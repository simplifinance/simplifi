/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  Provider,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  FlexpoolFactory,
  FlexpoolFactoryInterface,
} from "../../../../contracts/standalone/celo/FlexpoolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_makerRate",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_diaOracleAddress",
        type: "address",
      },
      {
        internalType: "contract IRoleBase",
        name: "_roleManager",
        type: "address",
      },
      {
        internalType: "contract ISupportedAsset",
        name: "_assetManager",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_baseAsset",
        type: "address",
      },
      {
        internalType: "contract IPoint",
        name: "_pointFactory",
        type: "address",
      },
      {
        internalType: "contract ISafeFactory",
        name: "_safeFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errorMsg",
        type: "string",
      },
    ],
    name: "ErrorOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "Cancellation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "GetFinanced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "NewContributorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "Payback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "maxQuorum",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "selector",
                type: "uint8",
              },
              {
                internalType: "uint24",
                name: "colCoverage",
                type: "uint24",
              },
              {
                internalType: "uint32",
                name: "duration",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "allGh",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "userCount",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Low",
            name: "low",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "unit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentPool",
                type: "uint256",
              },
              {
                internalType: "uint96",
                name: "recordId",
                type: "uint96",
              },
              {
                internalType: "uint96",
                name: "unitId",
                type: "uint96",
              },
            ],
            internalType: "struct Common.Big",
            name: "big",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "colAsset",
                type: "address",
              },
              {
                internalType: "address",
                name: "lastPaid",
                type: "address",
              },
              {
                internalType: "address",
                name: "safe",
                type: "address",
              },
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
            ],
            internalType: "struct Common.Addresses",
            name: "addrs",
            type: "tuple",
          },
          {
            internalType: "enum Common.Router",
            name: "router",
            type: "uint8",
          },
          {
            internalType: "enum Common.Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "enum Common.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Common.Pool",
        name: "",
        type: "tuple",
      },
    ],
    name: "PoolEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "activateReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "analytics",
    outputs: [
      {
        internalType: "uint256",
        name: "tvlCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tvlBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPermissioned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPermissionless",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetManager",
    outputs: [
      {
        internalType: "contract ISupportedAsset",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "awardPoint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "closePool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        internalType: "struct Common.Provider[]",
        name: "providers",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "contributeThroughProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxQuorum",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "durationInHours",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "colCoverage",
        type: "uint24",
      },
      {
        internalType: "bool",
        name: "isPermissionless",
        type: "bool",
      },
      {
        internalType: "contract IERC20",
        name: "colAsset",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "diaOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxQuorum",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "durationInHours",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "colCoverage",
        type: "uint24",
      },
    ],
    name: "editPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "enquireLiquidation",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "paybackTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "turnStartTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "getFinanceTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "loan",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "colBals",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sentQuota",
            type: "bool",
          },
        ],
        internalType: "struct Common.Contributor",
        name: "profile",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "defaulter",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMember",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isAdmin",
            type: "bool",
          },
        ],
        internalType: "struct Common.Slot",
        name: "slot",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getCollateralQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "colCoverage",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "recordId",
        type: "uint96",
      },
    ],
    name: "getContributorProviders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        internalType: "struct Common.Provider[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getCurrentDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactoryData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "tvlCollateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tvlBase",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalPermissioned",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalPermissionless",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Analytics",
            name: "analytics",
            type: "tuple",
          },
          {
            internalType: "uint16",
            name: "makerRate",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "currentEpoches",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "recordEpoches",
            type: "uint256",
          },
        ],
        internalType: "struct Common.ViewFactoryData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getFinance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "unitId",
        type: "uint96",
      },
    ],
    name: "getPoolData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "maxQuorum",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "selector",
                    type: "uint8",
                  },
                  {
                    internalType: "uint24",
                    name: "colCoverage",
                    type: "uint24",
                  },
                  {
                    internalType: "uint32",
                    name: "duration",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "allGh",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "userCount",
                    type: "uint8",
                  },
                ],
                internalType: "struct Common.Low",
                name: "low",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "unit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "currentPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint96",
                    name: "recordId",
                    type: "uint96",
                  },
                  {
                    internalType: "uint96",
                    name: "unitId",
                    type: "uint96",
                  },
                ],
                internalType: "struct Common.Big",
                name: "big",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "contract IERC20",
                    name: "colAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "lastPaid",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "safe",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "admin",
                    type: "address",
                  },
                ],
                internalType: "struct Common.Addresses",
                name: "addrs",
                type: "tuple",
              },
              {
                internalType: "enum Common.Router",
                name: "router",
                type: "uint8",
              },
              {
                internalType: "enum Common.Stage",
                name: "stage",
                type: "uint8",
              },
              {
                internalType: "enum Common.Status",
                name: "status",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Pool",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "paybackTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "turnStartTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "getFinanceTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint256",
                    name: "loan",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "colBals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "sentQuota",
                    type: "bool",
                  },
                ],
                internalType: "struct Common.Contributor",
                name: "profile",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMember",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isAdmin",
                    type: "bool",
                  },
                ],
                internalType: "struct Common.Slot",
                name: "slot",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "slot",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "rate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "earnStartDate",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "fullInterest",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "intPerSec",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Common.Interest",
                    name: "accruals",
                    type: "tuple",
                  },
                ],
                internalType: "struct Common.Provider[]",
                name: "providers",
                type: "tuple[]",
              },
            ],
            internalType: "struct Common.ContributorReturnValue[]",
            name: "cData",
            type: "tuple[]",
          },
        ],
        internalType: "struct Common.ReadPoolDataReturnValue",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "recordId",
        type: "uint96",
      },
    ],
    name: "getPoolRecord",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "maxQuorum",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "selector",
                    type: "uint8",
                  },
                  {
                    internalType: "uint24",
                    name: "colCoverage",
                    type: "uint24",
                  },
                  {
                    internalType: "uint32",
                    name: "duration",
                    type: "uint32",
                  },
                  {
                    internalType: "uint8",
                    name: "allGh",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "userCount",
                    type: "uint8",
                  },
                ],
                internalType: "struct Common.Low",
                name: "low",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "unit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "currentPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint96",
                    name: "recordId",
                    type: "uint96",
                  },
                  {
                    internalType: "uint96",
                    name: "unitId",
                    type: "uint96",
                  },
                ],
                internalType: "struct Common.Big",
                name: "big",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "contract IERC20",
                    name: "colAsset",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "lastPaid",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "safe",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "admin",
                    type: "address",
                  },
                ],
                internalType: "struct Common.Addresses",
                name: "addrs",
                type: "tuple",
              },
              {
                internalType: "enum Common.Router",
                name: "router",
                type: "uint8",
              },
              {
                internalType: "enum Common.Stage",
                name: "stage",
                type: "uint8",
              },
              {
                internalType: "enum Common.Status",
                name: "status",
                type: "uint8",
              },
            ],
            internalType: "struct Common.Pool",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "paybackTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "turnStartTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "getFinanceTime",
                    type: "uint32",
                  },
                  {
                    internalType: "uint256",
                    name: "loan",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "colBals",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "id",
                    type: "address",
                  },
                  {
                    internalType: "bool",
                    name: "sentQuota",
                    type: "bool",
                  },
                ],
                internalType: "struct Common.Contributor",
                name: "profile",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isMember",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isAdmin",
                    type: "bool",
                  },
                ],
                internalType: "struct Common.Slot",
                name: "slot",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "slot",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "rate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "earnStartDate",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "fullInterest",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "intPerSec",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct Common.Interest",
                    name: "accruals",
                    type: "tuple",
                  },
                ],
                internalType: "struct Common.Provider[]",
                name: "providers",
                type: "tuple[]",
              },
            ],
            internalType: "struct Common.ContributorReturnValue[]",
            name: "cData",
            type: "tuple[]",
          },
        ],
        internalType: "struct Common.ReadPoolDataReturnValue",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "paybackTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "turnStartTime",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "getFinanceTime",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "loan",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "colBals",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "id",
                type: "address",
              },
              {
                internalType: "bool",
                name: "sentQuota",
                type: "bool",
              },
            ],
            internalType: "struct Common.Contributor",
            name: "profile",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isMember",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isAdmin",
                type: "bool",
              },
            ],
            internalType: "struct Common.Slot",
            name: "slot",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "slot",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "earnStartDate",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fullInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "intPerSec",
                    type: "uint256",
                  },
                ],
                internalType: "struct Common.Interest",
                name: "accruals",
                type: "tuple",
              },
            ],
            internalType: "struct Common.Provider[]",
            name: "providers",
            type: "tuple[]",
          },
        ],
        internalType: "struct Common.ContributorReturnValue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "getSlot",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMember",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isAdmin",
            type: "bool",
          },
        ],
        internalType: "struct Common.Slot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "isPoolAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "makerRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "unit",
        type: "uint256",
      },
    ],
    name: "payback",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pointFactory",
    outputs: [
      {
        internalType: "contract IPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeFactory",
    outputs: [
      {
        internalType: "contract ISafeFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_makerRate",
        type: "uint16",
      },
    ],
    name: "setFeeOrMakerRate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateralAsset",
        type: "address",
      },
      {
        internalType: "string",
        name: "pair",
        type: "string",
      },
    ],
    name: "setPair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setRoleManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200646738038062006467833981016040819052620000359162000341565b600680546001600160a01b0319166001600160a01b038716179055878787878787878785848685858585858585858583828488888582828786848382848380826006805460ff60a01b19169055506001600160a01b0390811660805260a051811690851603620000de5760408051808201909152601581527f5f61737365744d616e61676572206973207a65726f00000000000000000000006020820152620000de90620002e1565b60c0516001600160a01b0316836001600160a01b031603620001395760408051808201909152601281527f5f626173654173736574206973207a65726f000000000000000000000000000060208201526200013990620002e1565b50506001600160a01b0391821660a052811660c05294851660e0525050509086169050620001a05760408051808201909152601581527f49506f696e74466163746f7279206973207a65726f00000000000000000000006020820152620001a090620002e1565b6001600960006101000a81548160ff021916908315150217905550846001600160a01b0316610100816001600160a01b031681525050505050505050505050505050505050505050600c60009054906101000a90046001600160a01b03166001600160a01b0316886001600160a01b031603620002565760408051808201909152600f81527f5f666565546f20697320656d707479000000000000000000000000000000000060208201526200025690620002e1565b61271061ffff88161115620002a45760408051808201909152601281527f496e76616c6964206d616b6572207261746500000000000000000000000000006020820152620002a490620002e1565b5050600c80546001600160a01b0319166001600160a01b03979097169690961790955550505061ffff16600d555062000459975050505050505050565b8051156200032857806040517fcc8610630000000000000000000000000000000000000000000000000000000081526004016200031f919062000408565b60405180910390fd5b50565b6001600160a01b03811681146200032857600080fd5b600080600080600080600080610100898b0312156200035f57600080fd5b88516200036c816200032b565b60208a015190985061ffff811681146200038557600080fd5b60408a015190975062000398816200032b565b60608a0151909650620003ab816200032b565b60808a0151909550620003be816200032b565b60a08a0151909450620003d1816200032b565b60c08a0151909350620003e4816200032b565b60e08a0151909250620003f7816200032b565b809150509295985092959890939650565b60006020808352835180602085015260005b8181101562000438578581018301518582016040015282016200041a565b506000604082860101526040601f19601f8301168501019250505092915050565b60805160a05160c05160e05161010051615f4462000523600039600081816104f201528181612392015261243b0152600081816103b40152818161317b0152818161478d01526147d401526000818161052c01528181610930015281816110dd0152818161154b01528181612dfb01528181612e6d01528181612ed101528181613893015281816143a701526148d2015260008181610426015281816115a101528181611fc8015281816138e901526149280152600081816102680152614eea0152615f446000f3fe608060405234801561001057600080fd5b506004361061021b5760003560e01c806380d5ac8a11610125578063c93c74e3116100ad578063e95b110d1161007c578063e95b110d14610581578063e962916814610589578063ed4c6cd81461059c578063f1d588c5146105bc578063f8e497dc146105cf57600080fd5b8063c93c74e314610514578063cdf456e114610527578063d9cc5ed01461054e578063e07098231461056e57600080fd5b80639d672294116100f45780639d672294146104485780639e6fbfd314610474578063a846c2fd146104c7578063c1cbbca7146104da578063c61778e9146104ed57600080fd5b806380d5ac8a146103d65780638456cb591461040c5780638b3c53cb1461041457806394217ad11461042157600080fd5b80633fd97927116101a857806358f0bd6d1161017757806358f0bd6d1461036457806359d2f32b146103775780635c975abb1461038a5780636d0406fd1461039c5780637d07db3c146103af57600080fd5b80633fd9792714610315578063415f124014610335578063435daefc14610348578063553c305a1461035157600080fd5b80631a055c1a116101ef5780631a055c1a146102ab57806321c05300146102cd5780632ef3946f146102e557806337de615f146102f85780633f4ba83a1461030b57600080fd5b8062435da514610220578063017e7e5814610250578063131e7e1c1461026357806313c8e60d1461028a575b600080fd5b600654610233906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600c54610233906001600160a01b031681565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b61029d610298366004615217565b6105ef565b604051908152602001610247565b6102be6102b9366004615217565b610601565b6040516102479392919061528a565b6102d561063b565b6040519015158152602001610247565b6102d56102f336600461537d565b61068e565b6102d5610306366004615217565b610761565b610313610a33565b005b6103286103233660046154ba565b610a90565b60405161024791906155c5565b6102d5610343366004615217565b610aab565b61029d600d5481565b6102d561035f366004615217565b610be4565b6102d561037236600461560e565b610c0c565b6102d561038536600461565b565b610daa565b600654600160a01b900460ff166102d5565b6102d56103aa366004615217565b610e2b565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b600e54600f546010546011546103ec9392919084565b604080519485526020850193909352918301526060820152608001610247565b61031361125f565b6009546102d59060ff1681565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b61045b610456366004615217565b6112aa565b6040805192835262ffffff909116602083015201610247565b61047c6112bf565b604080518251805182526020808201518184015281840151838501526060918201518284015284015161ffff1660808301529183015160a082015291015160c082015260e001610247565b6102d56104d5366004615217565b61132b565b6102d56104e8366004615217565b61139d565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6102d56105223660046156a9565b611432565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b61056161055c36600461578e565b611525565b6040516102479190615900565b6102d561057c36600461597e565b61153e565b6102d56116e1565b61056161059736600461578e565b611731565b6105af6105aa366004615a26565b611745565b6040516102479190615a52565b6102d56105ca366004615a77565b61176c565b6105e26105dd366004615a94565b611799565b6040516102479190615ac0565b60006105fa826117a5565b5092915050565b610609614f77565b6040805160608101825260008082526020820181905291810182905261062e84611a13565b9250925092509193909250565b6000610645611adb565b60095460ff161561067a5761067a6040518060400160405280600981526020016849732061637469766560b81b815250611b5a565b506009805460ff1916600190811790915590565b6000610698611adb565b6106a0611b85565b6106a8614fb3565b6106b183610be4565b61071b576106be83611bb2565b90506106cb838583611bdb565b90506106df81602001516060015182611d68565b7f03d06435b835aed8e31056998d82805968e80861808275303d222099b83e61e08160405161070e9190615b09565b60405180910390a1610728565b6107258484611f66565b90505b61073b85858360200151604001516120c8565b61075483600080600187866020015160200151146121a2565b60019150505b9392505050565b600061076b611b85565b816107758161230c565b6107aa576107aa6040518060400160405280601081526020016f556e697420697320696e41637469766560801b815250611b5a565b60006107b584611bb2565b60408101516060015190915033906001600160a01b03168114610810576108106040518060400160405280601981526020017f4f6e6c792041646d696e2063616e20636c6f736520706f6f6c00000000000000815250611b5a565b600060018360600151600281111561082a5761082a6157a9565b1490508015610882576001836000015160a0015160ff16111561087d5761087d6040518060400160405280601581526020017410d85b98d95b1b185d1a5bdb88191a5cd8589b1959605a1b815250611b5a565b6108c9565b602080840151805191015111156108c9576108c96040518060400160405280601581526020017410d85b98d95b1b185d1a5bdb88191a5cd8589b1959605a1b815250611b5a565b6108d882600060056001612354565b600360808401526108e8836124e4565b6020830151516108fe90600060038460016121a2565b6040838101518101516020850151805190830151925163bb16369f60e01b81526001600160a01b0386811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201929092526001600160601b039093166064840152169063bb16369f906084016020604051808303816000875af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190615b18565b6109f1576109f16040518060400160405280601081526020016f14d859994818d85b1b0819985a5b195960821b815250611b5a565b6040518681527f79d50744e568d2dcbac1c613dc0f174be90b0121dbc73682de80b3c4ebc5d1e7906020015b60405180910390a1600194505050505b50919050565b610a3b611adb565b610a436127bd565b6006805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610a9861505a565b610aa282846127e7565b90505b92915050565b6000610ab5611b85565b6000806000610ac385611a13565b92509250925081610afc57610afc6040518060400160405280600d81526020016c139bdd08191959985d5b1d1959609a1b815250611b5a565b33610b0781876128d3565b610b2881610b1488611bb2565b6020015160400151848760a001518a612919565b8360a001516001600160a01b0316816001600160a01b031603610b4d57610b4d615b35565b610b578187612af2565b6000806000610b6d898560018a60a00151612b46565b91945092509050610b9c8282600260015b87606001516002811115610b9457610b946157a9565b1460006121a2565b7f2f5bbba2897c0da2732c0b1eec00e0d12fe536c653a8575198092bed62561a7c83604051610bcb9190615b09565b60405180910390a160019750505050505050505b919050565b600080610bf083611bb2565b60a001516001811115610c0557610c056157a9565b1492915050565b600084610c188161230c565b610c4d57610c4d6040518060400160405280601081526020016f556e697420697320696e41637469766560801b815250611b5a565b610c55611b85565b6000610c6087611bb2565b905060008160400151606001516001600160a01b0316610c7d3390565b6001600160a01b031614610cb757610cb76040518060400160405280600b81526020016a139bdd08105b1b1bddd95960aa1b815250611b5a565b5080515161ffff610e108702169060ff908116908816118015610cdc575060ff878116105b15610cea57815160ff881690525b6102d08661ffff1611158015610d13575081600001516060015163ffffffff168163ffffffff16115b15610d2857815163ffffffff82166060909101525b81600001516040015162ffffff168562ffffff161115610d5157815162ffffff86166040909101525b610d6382602001516060015183611d68565b7f136b0bab8d4b28df6bdf26f270fde904c2c696b6bf243dde423642fff1df24b382604051610d929190615b09565b60405180910390a16001935050505b50949350505050565b6000610db4611adb565b600c546001600160a01b03848116911614801590610dda57506001600160a01b03831615155b15610dfb57600c80546001600160a01b0319166001600160a01b0385161790555b60008261ffff16118015610e14575061271061ffff8316105b15610e225761ffff8216600d555b50600192915050565b600081610e378161230c565b610e6c57610e6c6040518060400160405280601081526020016f556e697420697320696e41637469766560801b815250611b5a565b610e74611b85565b610e80338460006130c8565b6000610e8b84613111565b5090506000610e9985611bb2565b90506000610eaf868360000151602001516131ce565b9050600182608001516004811115610ec957610ec96157a9565b14610eff57610eff6040518060400160405280601081526020016f426f72726f77206e6f7420726561647960801b815250611b5a565b8151805160809091015160ff918216911603610f4157610f416040518060400160405280600b81526020016a115c1bd8da08195b99195960aa1b815250611b5a565b815151602080840151805191015160ff909216021115610f9057610f9060405180604001604052806014815260200173506f6f6c2066756e6420696e636f6d706c65746560601b815250611b5a565b8060200151610e100163ffffffff16610fa64290565b63ffffffff161115610fec5760a08101516001600160a01b0316336001600160a01b031614610fe757610fe48633610fde338a6132a0565b8461330e565b90505b61103f565b60a08101516001600160a01b0316336001600160a01b03161461103f5761103f604051806040016040528060158152602001745475726e54696d6520686173206e6f74207061737360581b815250611b5a565b8151608001805160ff60019182011690915260a082015160408401516001600160a01b0390911660209182015280840151015161108f9185908086606001516002811115610b9457610b946157a9565b6110af8260400151600001518260a00151846040015160400151866133a9565b50604080830151015160a08201516020808501510151600d546001600160a01b039093169263d4e8694492917f0000000000000000000000000000000000000000000000000000000000000000916111089082906134b2565b602088015160409081015190516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015260448401919091526064830152608482018790526001600160601b031660a482015260c4016020604051808303816000875af1158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190615b18565b6111dc576111dc6040518060400160405280601081526020016f14d859994818d85b1b0819985a5b195960821b815250611b5a565b6111e78284836134be565b809250819350505061121e818360200151604001516112168560400151602001518660200151600001516132a0565b516000613742565b61123082602001516060015183611d68565b7fe34571ffc6f937a259747d53f9fab8d617fd8a80c8cc077638061beead4d3ff882604051610a1d9190615b09565b611267611adb565b61126f611b85565b6006805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a733390565b6000806112b683613111565b91509150915091565b6112c761509b565b60408051608081018252600e548152600f546020808301919091526010549282019290925260115460608201528252600d5461ffff169082015261130961383a565b6001600160601b031660408201526000546001600160601b0316606082015290565b6000611335611b85565b600080806113468533600080612b46565b9194509250905061135b828260026001610b7e565b7f2f5bbba2897c0da2732c0b1eec00e0d12fe536c653a8575198092bed62561a7c8360405161138a9190615b09565b60405180910390a1506001949350505050565b60006113a7611b85565b60006113b283611bb2565b90506113bf833383611bdb565b90506113d381602001516060015182611d68565b6113f283600080600185606001516002811115610b9457610b946157a9565b7f03d06435b835aed8e31056998d82805968e80861808275303d222099b83e61e0816040516114219190615b09565b60405180910390a150600192915050565b600061143c611b85565b60006114978a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061147e9250612350915050565b8a8a8a8a8a61148e576002611491565b60015b8a61384a565b90506114cf8a8a60008181106114af576114af615b4b565b90506020020160208101906114c49190615a77565b600060056000612354565b6114de886000808760016121a2565b7fb161ed253087c33a1ed470e454d38c38a1b3cf735f6387e8755f5c85ec1496c18160405161150d9190615b09565b60405180910390a15060019998505050505050505050565b61152d6150f0565b610aa561153983613c26565b613de0565b6000611548611adb565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161461164257604051634df48c7360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639be918e690602401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190615b18565b6116425761164260405180604001604052806011815260200170155b9cdd5c1c1bdc9d195908105cdcd95d607a1b815250611b5a565b8251600003611678576116786040518060400160405280600c81526020016b24b73b30b634b2103830b4b960a11b815250611b5a565b6001600160a01b0384166116b4576116b46040518060400160405280600d81526020016c4173736574206973207a65726f60981b815250611b5a565b6001600160a01b03841660009081526008602052604090206116d68482615bdd565b506001949350505050565b60006116eb611adb565b60095460ff16611721576117216040518060400160405280600b81526020016a497320696e41637469766560a81b815250611b5a565b506009805460ff19169055600190565b6117396150f0565b610aa561153983613fa1565b6040805160608101825260008082526020820181905291810191909152610aa283836132a0565b6000611776611adb565b600680546001600160a01b0319166001600160a01b038416179055506001919050565b6060610aa283836140d2565b60006117af614fb3565b6117b883611bb2565b6040810151602001519091506001600160a01b03166117d9576117d9615b35565b6020808201516040908101516001600160601b03166000908152600a835281812080548351818602810186019094528084529193909190849084015b828210156118aa5760008481526020908190206040805160e08101825260048602909201805463ffffffff8082168552600160201b8204811685870152600160401b90910416918301919091526001808201546060840152600282015460808401526003909101546001600160a01b03811660a0840152600160a01b900460ff16151560c08301529083529092019101611815565b505050509050600081511115611a0d5760005b8151811015611a0b5760006118ef8383815181106118dd576118dd615b4b565b602002602001015160a00151876127e7565b90508360400151602001516001600160a01b0316816000015160a001516001600160a01b03160361192d5780516060015161192a9086615cb3565b94505b60408101515115611a025760005b816040015151811015611a005760008260400151828151811061196057611960615b4b565b6020026020010151905080606001516119764290565b63ffffffff1611156119f7578560400151602001516001600160a01b0316836000015160a001516001600160a01b0316036119cb5760608101514263ffffffff16038160a001516020015102870196506119f7565b60608101514263ffffffff160360028260a0015160200151816119f0576119f0615cc6565b0402870196505b5060010161193b565b505b506001016118bd565b505b50915091565b611a1b614f77565b604080516060810182526000808252602082018190529181018290526000611a4285611bb2565b6040810151602001519091506001600160a01b0316611a6357611a63615b35565b6000611a77826040015160200151876127e7565b80515190915063ffffffff164263ffffffff161115611ad257806000015160a001516001600160a01b03168260400151602001516001600160a01b031614611ac157611ac1615b35565b805160208201519095506001945092505b50509193909250565b6006546001600160a01b031680611b1c57611b1c6040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b815250611b5a565b611b25336141ad565b611b5757611b576040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b815250611b5a565b50565b805115611b57578060405163cc86106360e01b8152600401611b7c9190615cdc565b60405180910390fd5b600654600160a01b900460ff1615611bb05760405163d93c066560e01b815260040160405180910390fd5b565b611bba614fb3565b600082815260046020526040902054610aa5906001600160601b0316613c26565b611be3614fb3565b83611bed8161230c565b611c2257611c226040518060400160405280601081526020016f556e697420697320696e41637469766560801b815250611b5a565b600083608001516004811115611c3a57611c3a6157a9565b14611c6d57611c6d6040518060400160405280600d81526020016c496e76616c696420737461676560981b815250611b5a565b611c7561505a565b6020848101518051910180519091019052835160a001805160010160ff169052600284606001516002811115611cad57611cad6157a9565b03611cd957611cbe858760006130c8565b611cc885876127e7565b8051600160c0909101529050611cf6565b611ce385876128d3565b611cf3848787600060018061421c565b90505b611d1781600001518560200151604001518360200151600001516000613742565b611d3984600286606001516002811115611d3357611d336157a9565b146142b0565b15611d5257611d4a600087426142e8565b600160808501525b839250611d5f85856143a2565b50509392505050565b6001600160601b038083166000908152600360208181526040928390208551805182548285015183880151606080860151608087015160a09097015160ff908116600160501b0260ff60501b19988216600160481b029890981661ffff60481b1963ffffffff909316600160281b0268ffffffff00000000001962ffffff90961662010000029590951668ffffffffffffff0000199683166101000261ffff19909816929098169190911795909517939093169490941717161791909117825582870151805160018085019190915581850151600280860191909155828801519685018054938501518a16600160601b026001600160c01b03199094169790991696909617919091179096558487015180516004840180546001600160a01b039283166001600160a01b03199182161790915594820151600585018054918316918716919091179055958101516006840180549188169186169190911790558101516007830180549190961693169290921790935584015160088301805486959293919260ff1991909116918490811115611f0557611f056157a9565b0217905550608082015160088201805461ff001916610100836004811115611f2f57611f2f6157a9565b021790555060a082015160088201805462ff0000191662010000836001811115611f5b57611f5b6157a9565b021790555050505050565b611f6e614fb3565b604080516001808252818301909252600091602080830190803683370190505090508381600081518110611fa457611fa4615b4b565b60200260200101906001600160a01b031690816001600160a01b03168152505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663739c13db6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612024573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120489190615d2b565b905061205e82868660026048607860018861384a565b92506120898260008151811061207657612076615b4b565b6020026020010151600060056000612354565b7fb161ed253087c33a1ed470e454d38c38a1b3cf735f6387e8755f5c85ec1496c1836040516120b89190615b09565b60405180910390a1505092915050565b60005b835181101561219c576001600160601b0382166000908152600b602090815260408083206001600160a01b03871684529091529020845185908390811061211457612114615b4b565b60209081029190910181015182546001808201855560009485529383902082516007909202019081558183015181850155604082015160028201556060820151600382015560808201516004820180546001600160a01b0319166001600160a01b0390921691909117905560a0909101518051600583015590910151600690910155016120cb565b50505050565b60408051608081018252600e548152600f54602082015260105491810191909152601154606082015260008460048111156121df576121df6157a9565b036122205760208101805187019052811561221b578261220b5760408101805160010190819052612219565b606081018051600101908190525b505b6122e9565b6001846004811115612234576122346157a9565b0361225b57858160200151106122505760208101805187900390525b8051850181526122e9565b600284600481111561226f5761226f6157a9565b03612293578051851161228457805185900381525b602081018051870190526122e9565b81156122d25782156122bb576060810151156122b6576060810180516000190190525b6122d2565b6040810151156122d2576040810180516000190190525b858160200151106122e95760208101805187900390525b8051600e556020810151600f556040810151601055606001516011555050505050565b6000818152600460209081526040808320546001600160601b03168352600390915281206008015460019062010000900460ff1681811115610c0557610c056157a9565b3390565b60008161240457604051631535b78760e21b81526001600160a01b03868116600483015260ff808716602484015285166044830152600060648301527f000000000000000000000000000000000000000000000000000000000000000016906354d6de1c906084016020604051808303816000875af11580156123db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ff9190615b18565b6124a8565b604051637116b98760e01b81526001600160a01b03868116600483015260ff808716602484015285166044830152600060648301527f00000000000000000000000000000000000000000000000000000000000000001690637116b987906084016020604051808303816000875af1158015612484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a89190615b18565b9050806124dd576124dd6040518060400160405280600d81526020016c14995dd85c990819985a5b1959609a1b815250611b5a565b5050505050565b60008080526003602090815260408051610180810182527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff805460ff80821660c08501908152610100808404831660e087015262ffffff620100008504169086015263ffffffff600160281b840416610120860152600160481b83048216610140860152600160501b90920481166101608501529083528351608080820186527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f005482527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f0154828801527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f02546001600160601b0381811684890152600160601b9091041660608084019190915285880192909252855190810186527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f03546001600160a01b0390811682527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f04548116978201979097527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f05548716818701527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f065490961686820152938301949094527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f07549193909284019116600281111561270c5761270c6157a9565b600281111561271d5761271d6157a9565b81526020016008820160019054906101000a900460ff166004811115612745576127456157a9565b6004811115612756576127566157a9565b81526020016008820160029054906101000a900460ff16600181111561277e5761277e6157a9565b600181111561278f5761278f6157a9565b8152505090506127a782602001516060015182611d68565b6127b98260200151604001518361449f565b5050565b600654600160a01b900460ff16611bb057604051638dfc202b60e01b815260040160405180910390fd5b6127ef61505a565b60006127fa83614636565b905061280684846132a0565b60208084019182526001600160601b0383166000908152600a909152604090209051518154811061283957612839615b4b565b60009182526020918290206040805160e0810182526004909302909101805463ffffffff8082168552600160201b8204811695850195909552600160401b90049093169082015260018201546060820152600282015460808201526003909101546001600160a01b03811660a083015260ff600160a01b90910416151560c082015282526128c784826140d2565b60408301525092915050565b6128dd82826132a0565b60200151156127b9576127b96040518060400160405280601281526020017113595b58995c881b9bdd08185b1b1bddd95960721b815250611b5a565b6001600160601b0384166000908152600b602090815260408083206001600160a01b0386168452825280832080548251818502810185019093528083529192909190849084015b828210156129e65760008481526020908190206040805160c0810182526007860290920180548352600180820154848601526002820154848401526003820154606085015260048201546001600160a01b031660808501528251808401909352600582015483526006909101548285015260a08301919091529083529092019101612960565b505050509050600081511115612a6d576001600160601b0385166000908152600b602090815260408083206001600160a01b038781168552925280832091891683529091208154612a379290615103565b506001600160601b0385166000908152600b602090815260408083206001600160a01b03871684529091528120612a6d916151b1565b6001600160601b0385166000908152600a6020526040902084518154889291908110612a9b57612a9b615b4b565b906000526020600020906004020160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550612add868386600061464f565b612aea838386600161464f565b505050505050565b8160036000612b0084611bb2565b602090810151606001516001600160601b0316825281019190915260400160002060050180546001600160a01b0319166001600160a01b03929092169190911790555050565b612b4e614fb3565b60008086612b5b8161230c565b612b9057612b906040518060400160405280601081526020016f556e697420697320696e41637469766560801b815250611b5a565b612b99886117a5565b945092506000839003612bd457612bd46040518060400160405280600d81526020016c139bc81919589d08199bdd5b99609a1b815250611b5a565b6000612be88560400151602001518a6132a0565b516020808701516040908101516001600160601b03166000908152600a90925281208054929350909183908110612c2157612c21615b4b565b9060005260206000209060040201600101819055506000600a60008760200151604001516001600160601b03166001600160601b031681526020019081526020016000208281548110612c7657612c76615b4b565b6000918252602090912060026004909202010155426020808701516040908101516001600160601b03166000908152600a9092529020805483908110612cbe57612cbe615b4b565b60009182526020909120600490910201805463ffffffff191663ffffffff9290921691909117905560095460ff1615612d0757612d078560400151602001516002600080612354565b84516080810151905160ff918216911603612d315760046080860152612d2c856124e4565b612dd1565b426020808701516040908101516001600160601b03166000908152600a835220875190910151815460ff909116908110612d6d57612d6d615b4b565b6000918252602091829020600490910201805467ffffffff000000001916600160201b63ffffffff949094169390930292909217909155600160808701528551518682018051805160ff90931690920291909201525160600151612dd19086611d68565b60408581015181015190516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015612e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e669190615d48565b9050612e9c7f00000000000000000000000000000000000000000000000000000000000000008a886040015160400151886133a9565b508560400151604001516001600160a01b031663397c39bd6040518061014001604052808c6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200188815260200184815260200189600001516080015160ff168a600001516000015160ff161415158152602001600a60008b60200151604001516001600160601b03166001600160601b03168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561300c5760008481526020908190206040805160e08101825260048602909201805463ffffffff8082168552600160201b8204811685870152600160401b90910416918301919091526001808201546060840152600282015460808401526003909101546001600160a01b03811660a0840152600160a01b900460ff16151560c08301529083529092019101612f77565b5050505081526020018b151581526020018a6001600160a01b031681526020018960200151604001516001600160601b031681526020018960400151600001516001600160a01b03168152508c6040518363ffffffff1660e01b8152600401613076929190615da7565b6020604051808303816000875af1158015613095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b99190615d48565b93505050509450945094915050565b8061310c576130d783836132a0565b6020015161310c5761310c6040518060400160405280600c81526020016b2737ba10309036b2b6b132b960a11b815250611b5a565b505050565b600080600061311f84611bb2565b60208101515190915015611a0d576131be81600001516040015182600001516000015160ff1683602001516000015102604051806040016040528061316b8660400151600001516146da565b6001600160801b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316156131af5760086131b2565b60125b60ff1690529190614863565b9051604001519094909350915050565b6131d6614f77565b600a60006131e385614636565b6001600160601b03166001600160601b031681526020019081526020016000208260ff168154811061321757613217615b4b565b60009182526020918290206040805160e0810182526004909302909101805463ffffffff8082168552600160201b8204811695850195909552600160401b90049093169082015260018201546060820152600282015460808201526003909101546001600160a01b03811660a083015260ff600160a01b90910416151560c08201529392505050565b6040805160608082018352600080835260208084018290529284018190526001600160a01b03959095168552600582528285209385529281529281902081519283018252805483526001015460ff808216151594840194909452610100900490921615159181019190915290565b613316614f77565b613322848660006130c8565b600061332d86614636565b9050600061333b86886132a0565b905061334786886127e7565b519250613357868887600061464f565b6133688460a001518883600061464f565b6001600160a01b03861660a0808601829052840152845161338e90859084906000613742565b61339f838383600001516000613742565b5050949350505050565b6000806001600160a01b03851633146133c257336133c4565b845b90506133d18682856148cd565b91506001600160a01b038616158015906133f357506001600160a01b03841615155b6133ff576133ff615b35565b8115610da1576040516323b872dd60e01b81526001600160a01b0382811660048301528581166024830152604482018490528716906323b872dd906064016020604051808303816000875af115801561345c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134809190615b18565b610da157610da16040518060400160405280600d81526020016c151c9e11995c8819985a5b1959609a1b815250611b5a565b6000610aa28383614aae565b6134c6614fb3565b6134ce614f77565b84516020018051906134df82615e88565b60ff16905250845160600151420163ffffffff16835260808301849052602085810180518201516060860152516040908101516001600160601b03166000908152600b8352818120828901518401516001600160a01b03168252835281812080548351818602810186019094528084529193909190849084015b828210156135df5760008481526020908190206040805160c0810182526007860290920180548352600180820154848601526002820154848401526003820154606085015260048201546001600160a01b031660808501528251808401909352600582015483526006909101548285015260a08301919091529083529092019101613559565b50505050905060005b8151811015613726576020878101516040908101516001600160601b03166000908152600b8352818120828b01518401516001600160a01b031682529092529020805463ffffffff421691908390811061364457613644615b4b565b9060005260206000209060070201600301819055506136b082828151811061366e5761366e615b4b565b60200260200101516040015188600001516060015184848151811061369557613695615b4b565b602002602001015160200151614b5c9092919063ffffffff16565b6020808901516040908101516001600160601b03166000908152600b8352818120828c01518401516001600160a01b0316825290925290208054839081106136fa576136fa615b4b565b6000918252602091829020835160056007909302909101918201559101516006909101556001016135e8565b5050505060208381015160009101526002608084015291929050565b61374a614f77565b816137555784613757565b805b6001600160601b0385166000908152600a60205260409020805460ff861690811061378457613784615b4b565b60009182526020918290208351600490920201805492840151604085015163ffffffff908116600160401b026bffffffff000000000000000019928216600160201b0267ffffffffffffffff1990961691909416179390931792909216178155606082015160018201556080820151600282015560a08201516003909101805460c0909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790555050505050565b600061384560025490565b905090565b613852614fb3565b8661385c8161230c565b15613890576138906040518060400160405280600e81526020016d556e69742069732061637469766560901b815250611b5a565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161461398a57604051634df48c7360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639be918e690602401602060405180830381865afa158015613930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139549190615b18565b61398a5761398a60405180604001604052806011815260200170155b9cdd5c1c1bdc9d195908105cdcd95d607a1b815250611b5a565b61ffff871615806139a057506102d08761ffff16115b156139d6576139d66040518060400160405280601081526020016f24b73b30b634b210323ab930ba34b7b760811b815250611b5a565b60018560028111156139ea576139ea6157a9565b03613a795760018b5111806139fe57508a51155b15613a3957613a3960405180604001604052806015815260200174115e1c1958dd080c481a5d195b481a5b881b1a5cdd605a1b815250611b5a565b896001600160a01b03168b600081518110613a5657613a56615b4b565b60200260200101516001600160a01b031614613a7457613a74615b35565b613b27565b60028b511015613ac157613ac16040518060400160405280601881526020017f4c69737420746f6f206c6f7720666f7220726f75746572320000000000000000815250611b5a565b8a600081518110613ad457613ad4615b4b565b60200260200101516001600160a01b03168a6001600160a01b031614613b2757613b276040518060400160405280601281526020017114d95b99195c881b9bdd081a5b881b1a5cdd60721b815250611b5a565b600080613b338b614bbf565b91509150613bd96040518061012001604052808d8152602001846001600160601b03168152602001836001600160601b031681526020018c60ff1681526020018a62ffffff168152602001886001600160a01b031681526020018b61ffff1681526020018f600081518110613baa57613baa615b4b565b60200260200101516001600160a01b03168152602001896002811115613bd257613bd26157a9565b9052614c19565b9450613be68b8e87614d6d565b9450613bf28286611d68565b613c168d600081518110613c0857613c08615b4b565b6020026020010151866143a2565b5050505098975050505050505050565b613c2e614fb3565b6001600160601b03808316600090815260036020818152604092839020835161018081018552815460ff80821660c08401908152610100808404831660e086015262ffffff620100008504169085015263ffffffff600160281b840416610120850152600160481b83048216610140850152600160501b9092048116610160840152908252855160808082018852600185015482526002808601548388015296850154808a16838a0152600160601b9004909816606080830191909152838601919091528651978801875260048401546001600160a01b03908116895260058501548116958901959095526006840154851688880152600784015490941687850152948101959095526008810154909391850192911690811115613d5457613d546157a9565b6002811115613d6557613d656157a9565b81526020016008820160019054906101000a900460ff166004811115613d8d57613d8d6157a9565b6004811115613d9e57613d9e6157a9565b81526020016008820160029054906101000a900460ff166001811115613dc657613dc66157a9565b6001811115613dd757613dd76157a9565b90525092915050565b613de86150f0565b8181526020808301516040908101516001600160601b03166000908152600a835281812080548351818602810186019094528084529193909190849084015b82821015613ebc5760008481526020908190206040805160e08101825260048602909201805463ffffffff8082168552600160201b8204811685870152600160401b90910416918301919091526001808201546060840152600282015460808401526003909101546001600160a01b03811660a0840152600160a01b900460ff16151560c08301529083529092019101613e27565b5050505090506000815167ffffffffffffffff811115613ede57613ede6152ca565b604051908082528060200260200182016040528015613f1757816020015b613f0461505a565b815260200190600190039081613efc5790505b508351602001515190915015613f9a5760005b8251811015613f91576000838281518110613f4757613f47615b4b565b602002602001015160a001519050613f6b81866000015160200151600001516127e7565b838381518110613f7d57613f7d615b4b565b602090810291909101015250600101613f2a565b50602083018190525b5050919050565b613fa9614fb3565b6001600160601b03808316600090815260016020818152604092839020835161018081018552815460ff80821660c08401908152610100808404831660e086015262ffffff620100008504169085015263ffffffff600160281b840416610120850152600160481b83048216610140850152600160501b9092048116610160840152908252855160808082018852958401548152600280850154828701526003850154808a16838a0152600160601b9004909816606080830191909152838601919091528651958601875260048401546001600160a01b03908116875260058501548116958701959095526006840154851686880152600784015490941685850152948101939093526008810154929490939185019290911690811115613d5457613d546157a9565b6001600160601b0381166000908152600b602090815260408083206001600160a01b03861684528252808320805482518185028101850190935280835260609492939192909184015b828210156141a15760008481526020908190206040805160c0810182526007860290920180548352600180820154848601526002820154848401526003820154606085015260048201546001600160a01b031660808501528251808401909352600582015483526006909101548285015260a0830191909152908352909201910161411b565b50505050905092915050565b600654604051633f784de560e11b81526001600160a01b0383811660048301526000921690637ef09bca90602401602060405180830381865afa1580156141f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190615b18565b61422461505a565b6020808801516040908101516001600160601b03166000908152600a83522054908201805191909152515161425e90869088908787614ea3565b6020968701516040908101516001600160601b03166000908152600a90985287208054600101815590965285516001600160a01b0390941660a0909401939093525050825190151560c0909101525090565b600081156142d257825151602080850151805191015160ff9092160214610aa2565b505051805160a09091015160ff91821691161490565b60006001600160a01b0384166143205761430183611bb2565b516020015160ff16905061431583826131ce565b60a00151935061432e565b61432a84846132a0565b5190505b81600a600061433c86614636565b6001600160601b03166001600160601b03168152602001908152602001600020828154811061436d5761436d615b4b565b906000526020600020906004020160000160046101000a81548163ffffffff021916908363ffffffff16021790555050505050565b6143de7f0000000000000000000000000000000000000000000000000000000000000000838360400151604001518460200151600001516133a9565b50604080820151810151602083015182015191516320d46be760e11b81526001600160a01b0385811660048301526001600160601b0390931660248201529116906341a8d7ce906044016020604051808303816000875af1158015614447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061446b9190615b18565b6127b9576127b96040518060400160405280600f81526020016e105919081d5cd95c8819985a5b1959608a1b815250611b5a565b6001600160601b038083166000908152600160208181526040928390208551805182548285015183880151606080860151608087015160a09097015160ff908116600160501b0260ff60501b19988216600160481b029890981661ffff60481b1963ffffffff909316600160281b0268ffffffff00000000001962ffffff90961662010000029590951668ffffffffffffff0000199683166101000261ffff199098169290981691909117959095179390931694909417171617919091178255828701518051838601558084015160028085019190915581870151600385018054938501518a16600160601b026001600160c01b03199094169190991617919091179096558487015180516004840180546001600160a01b039283166001600160a01b03199182161790915594820151600585018054918316918716919091179055958101516006840180549188169186169190911790558101516007830180549190961693169290921790935584015160088301805486959293919260ff199190911691908490811115611f0557611f056157a9565b600061464182611bb2565b602001516040015192915050565b6040805160608101825260008082526020820181905291810191909152816146775782614679565b805b6001600160a01b0395909516600090815260056020908152604080832096835295815290859020865181559086015160019091018054959096015161ffff1990951690151561ff001916176101009415159490940293909317909355505050565b6001600160a01b0381166000908152600860205260408120805482919061470090615b61565b80601f016020809104026020016040519081016040528092919081815260200182805461472c90615b61565b80156147795780601f1061474e57610100808354040283529160200191614779565b820191906000526020600020905b81548152906001019060200180831161475c57829003601f168201915b5050505050905060006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614614853576040516304b01c2560e51b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063960384a090614809908590600401615cdc565b6040805180830381865afa158015614825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148499190615ebe565b509250610a2d9050565b50678ac7230489e8000092915050565b60008262ffffff1660000361487a5750600061075a565b60008360640262ffffff169050600085600001516001600160801b0316866020015160ff16600a0a8502816148b1576148b1615cc6565b04905061271065ffffffffffff83168202049695505050505050565b6000837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316146149c957604051634df48c7360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639be918e690602401602060405180830381865afa15801561496f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149939190615b18565b6149c9576149c960405180604001604052806011815260200170155b9cdd5c1c1bdc9d195908105cdcd95d607a1b815250611b5a565b6001600160a01b0385166149df576149df615b35565b6001600160a01b0384166149f5576149f5615b35565b604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015286169063dd62ed3e90604401602060405180830381865afa158015614a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a659190615d48565b915082821015614aa657614aa66040518060400160405280601681526020017556616c75652065786365656420616c6c6f77616e636560501b815250611b5a565b509392505050565b600061271061ffff83161580614ac2575083155b15614ad1576000915050610aa5565b61ffff83811610614b0e57614b0e60405180604001604052806011815260200170496e746572657374206f766572666c6f7760781b815250611b5a565b8061ffff168411614b3a57614b3a604051806060016040528060268152602001615ee960269139611b5a565b8061ffff168361ffff16850281614b5357614b53615cc6565b04949350505050565b604080518082019091526000808252602082015262278d0063ffffffff83161115614b8957614b89615b35565b614b938484614aae565b8082521561075a57805163ffffffff83169081614bb257614bb2615cc6565b0460208201529392505050565b600080614bd0600280546001019055565b600254600084815260046020526040902080546bffffffffffffffffffffffff19166001600160601b0383161790559150614c12600080546001810190915590565b9050915091565b614c21614fb3565b6040518060c00160405280836060015160ff168152602001600060ff168152602001836080015162ffffff1681526020018360c0015161ffff16610e100263ffffffff168152602001600060ff168152602001600160ff1681525081600001819052506040518060800160405280836000015181526020018360000151815260200183604001516001600160601b0316815260200183602001516001600160601b0316815250816020018190525060405180608001604052808360a001516001600160a01b0316815260200160006001600160a01b03168152602001614d0a8460000151614ed1565b6001600160a01b03908116825260e085015116602090910152604082015261010082015160608201906002811115614d4457614d446157a9565b90816002811115614d5757614d576157a9565b905250600160a082015260006080820152919050565b614d75614fb3565b60005b8351811015614e9a57614d8961505a565b81600003614dc157614dba8487878581518110614da857614da8615b4b565b6020026020010151600180600161421c565b9050614e70565b848281518110614dd357614dd3615b4b565b60200260200101516001600160a01b031685600081518110614df757614df7615b4b565b60200260200101516001600160a01b031603614e4357614e436040518060400160405280601581526020017443726561746f722073706f7474656420747769636560581b815250611b5a565b614e6d8487878581518110614e5a57614e5a615b4b565b602002602001015160006001600061421c565b90505b614e9181600001518560200151604001518360200151600001516000613742565b50600101614d78565b50909392505050565b6124dd858560405180606001604052808760ff1681526020018515158152602001861515815250600061464f565b60405163f72be56960e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f72be569906024016020604051808303816000875af1158015614f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f5f9190615d2b565b90506001600160a01b038116610bdf57610bdf615b35565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b604080516101808101909152600060c0820181815260e083018290526101008301829052610120830182905261014083018290526101608301919091528190815260408051608081018252600080825260208281018290529282018190526060820152910190815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081526020016000905290565b604051806060016040528061506d614f77565b81526040805160608101825260008082526020828101829052928201529101905b8152602001606081525090565b60405180608001604052806150d16040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001600061ffff16815260200160008152602001600081525090565b604051806040016040528061508e614fb3565b8280548282559060005260206000209060070281019282156151a15760005260206000209160070282015b828111156151a1578254825560018084015490830155600280840154908301556003808401549083015560048084015490830180546001600160a01b0319166001600160a01b0390921691909117905560058084015490830155600680840154908301556007928301929091019061512e565b506151ad9291506151ce565b5090565b5080546000825560070290600052602060002090810190611b5791905b5b808211156151ad5760008082556001820181905560028201819055600382018190556004820180546001600160a01b03191690556005820181905560068201556007016151cf565b60006020828403121561522957600080fd5b5035919050565b63ffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301526080810151608083015260018060a01b0360a08201511660a083015260c0810151151560c08301525050565b61016081016152998286615230565b92151560e0820152815161010082015260208201511515610120820152604090910151151561014090910152919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715615303576153036152ca565b60405290565b6040805190810167ffffffffffffffff81118282101715615303576153036152ca565b604051601f8201601f1916810167ffffffffffffffff81118282101715615355576153556152ca565b604052919050565b6001600160a01b0381168114611b5757600080fd5b8035610bdf8161535d565b6000806000606080858703121561539357600080fd5b843567ffffffffffffffff808211156153ab57600080fd5b818701915087601f8301126153bf57600080fd5b81356020828211156153d3576153d36152ca565b6153e1818360051b0161532c565b828152818101935060e092830285018201928b84111561540057600080fd5b948201945b8386101561549757858c038181121561541e5760008081fd5b6154266152e0565b87358152848801358582015260408089013581830152898901358a8301526080808a01356154538161535d565b9083015260a0609f19840182131561546b5760008081fd5b615473615309565b8a820135815260c08b01358882015290830152508652509485019493820193615405565b5097506154a5898201615372565b96505050505050604084013590509250925092565b600080604083850312156154cd57600080fd5b8235915060208301356154df8161535d565b809150509250929050565b805182526020808201518184015260408083015190840152606080830151908401526080808301516001600160a01b03169084015260a091820151805192840192909252015160c082015260e00190565b600061016080840161554e858551615230565b602084810151805160e088015280820151151561010088015260409081015115156101208801528501516101408701939093528251918290526101808601928101916000905b808210156155b9576155a78585516154ea565b94508284019350600182019150615594565b50929695505050505050565b602081526000610aa2602083018461553b565b803560ff81168114610bdf57600080fd5b803561ffff81168114610bdf57600080fd5b803562ffffff81168114610bdf57600080fd5b6000806000806080858703121561562457600080fd5b84359350615634602086016155d8565b9250615642604086016155e9565b9150615650606086016155fb565b905092959194509250565b6000806040838503121561566e57600080fd5b82356156798161535d565b9150615687602084016155e9565b90509250929050565b8015158114611b5757600080fd5b8035610bdf81615690565b60008060008060008060008060e0898b0312156156c557600080fd5b883567ffffffffffffffff808211156156dd57600080fd5b818b0191508b601f8301126156f157600080fd5b81358181111561570057600080fd5b8c60208260051b850101111561571557600080fd5b60209283019a50985050890135955061573060408a016155d8565b945061573e60608a016155e9565b935061574c60808a016155fb565b925061575a60a08a0161569e565b915061576860c08a01615372565b90509295985092959890939650565b80356001600160601b0381168114610bdf57600080fd5b6000602082840312156157a057600080fd5b610aa282615777565b634e487b7160e01b600052602160045260246000fd5b600381106157cf576157cf6157a9565b9052565b600581106157cf576157cf6157a9565b600281106157cf576157cf6157a9565b805160ff815116835260ff602082015116602084015262ffffff604082015116604084015263ffffffff606082015116606084015260ff608082015116608084015260ff60a08201511660a084015250602081015161588560c0840182805182526020810151602083015260408101516001600160601b03808216604085015280606084015116606085015250505050565b5060408181015180516001600160a01b03908116610140860152602082015181166101608601529181015182166101808501526060908101519091166101a08401528101516158d86101c08401826157bf565b5060808101516158ec6101e08401826157d3565b5060a081015161310c6102008401826157e3565b60006020808352610260830161591982850186516157f3565b8185015161024085810152805191829052610280600583901b8601810192918401919086019060005b818110156159715761027f1988860301835261595f85855161553b565b94509285019291850191600101615942565b5092979650505050505050565b6000806040838503121561599157600080fd5b823561599c8161535d565b915060208381013567ffffffffffffffff808211156159ba57600080fd5b818601915086601f8301126159ce57600080fd5b8135818111156159e0576159e06152ca565b6159f2601f8201601f1916850161532c565b91508082528784828501011115615a0857600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060408385031215615a3957600080fd5b8235615a448161535d565b946020939093013593505050565b8151815260208083015115159082015260408083015115159082015260608101610aa5565b600060208284031215615a8957600080fd5b813561075a8161535d565b60008060408385031215615aa757600080fd5b8235615ab28161535d565b915061568760208401615777565b6020808252825182820181905260009190848201906040850190845b81811015615afd57615aef8385516154ea565b938501939250600101615adc565b50909695505050505050565b6102208101610aa582846157f3565b600060208284031215615b2a57600080fd5b815161075a81615690565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680615b7557607f821691505b602082108103610a2d57634e487b7160e01b600052602260045260246000fd5b601f82111561310c576000816000526020600020601f850160051c81016020861015615bbe5750805b601f850160051c820191505b81811015612aea57828155600101615bca565b815167ffffffffffffffff811115615bf757615bf76152ca565b615c0b81615c058454615b61565b84615b95565b602080601f831160018114615c405760008415615c285750858301515b600019600386901b1c1916600185901b178555612aea565b600085815260208120601f198616915b82811015615c6f57888601518255948401946001909101908401615c50565b5085821015615c8d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115610aa557610aa5615c9d565b634e487b7160e01b600052601260045260246000fd5b60006020808352835180602085015260005b81811015615d0a57858101830151858201604001528201615cee565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215615d3d57600080fd5b815161075a8161535d565b600060208284031215615d5a57600080fd5b5051919050565b60008151808452602080850194506020840160005b83811015615d9c57615d89878351615230565b60e0969096019590820190600101615d76565b509495945050505050565b60408152615dc16040820184516001600160a01b03169052565b60006020840151615ddd60608401826001600160a01b03169052565b5060408401516080830152606084015160a08301526080840151615e0560c084018215159052565b5060a08401516101408060e0850152615e22610180850183615d61565b915060c0860151610100615e398187018315159052565b60e08801519150610120615e57818801846001600160a01b03169052565b908801516001600160601b0316928601929092525094909401516001600160a01b0316610160830152506020015290565b600060ff821660ff8103615e9e57615e9e615c9d565b60010192915050565b80516001600160801b0381168114610bdf57600080fd5b60008060408385031215615ed157600080fd5b615eda83615ea7565b915061568760208401615ea756fe5072696e636970616c2073686f756c642062652067726561746572207468616e203130303030a2646970667358221220f89c30611d947ab132579c69d44bb915a2b73ffb232f2fd08e75c9b953b03dd464736f6c63430008180033";

type FlexpoolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlexpoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlexpoolFactory__factory extends ContractFactory {
  constructor(...args: FlexpoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeTo: AddressLike,
    _makerRate: BigNumberish,
    _diaOracleAddress: AddressLike,
    _roleManager: AddressLike,
    _assetManager: AddressLike,
    _baseAsset: AddressLike,
    _pointFactory: AddressLike,
    _safeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeTo,
      _makerRate,
      _diaOracleAddress,
      _roleManager,
      _assetManager,
      _baseAsset,
      _pointFactory,
      _safeFactory,
      overrides || {}
    );
  }
  override deploy(
    _feeTo: AddressLike,
    _makerRate: BigNumberish,
    _diaOracleAddress: AddressLike,
    _roleManager: AddressLike,
    _assetManager: AddressLike,
    _baseAsset: AddressLike,
    _pointFactory: AddressLike,
    _safeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeTo,
      _makerRate,
      _diaOracleAddress,
      _roleManager,
      _assetManager,
      _baseAsset,
      _pointFactory,
      _safeFactory,
      overrides || {}
    ) as Promise<
      FlexpoolFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlexpoolFactory__factory {
    return super.connect(runner) as FlexpoolFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlexpoolFactoryInterface {
    return new Interface(_abi) as FlexpoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlexpoolFactory {
    return new Contract(address, _abi, runner) as unknown as FlexpoolFactory;
  }
}
