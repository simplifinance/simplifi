/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  Provider,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Providers,
  ProvidersInterface,
} from "../../../../contracts/standalone/celo/Providers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_flexpoolFactory",
        type: "address",
      },
      {
        internalType: "contract IRoleBase",
        name: "_roleManager",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_baseAsset",
        type: "address",
      },
      {
        internalType: "contract ISupportedAsset",
        name: "_assetManager",
        type: "address",
      },
      {
        internalType: "contract ISafeFactory",
        name: "_safeFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errorMsg",
        type: "string",
      },
    ],
    name: "ErrorOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Common.Provider[]",
        name: "providers",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "Borrowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Common.Provider",
        name: "",
        type: "tuple",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct Common.Provider",
        name: "",
        type: "tuple",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "assetManager",
    outputs: [
      {
        internalType: "contract ISupportedAsset",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "providersSlots",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flexpoolFactory",
    outputs: [
      {
        internalType: "contract IFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProviders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "slot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "earnStartDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "fullInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "intPerSec",
                type: "uint256",
              },
            ],
            internalType: "struct Common.Interest",
            name: "accruals",
            type: "tuple",
          },
        ],
        internalType: "struct Common.Provider[]",
        name: "prov",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rate",
        type: "uint16",
      },
    ],
    name: "provideLiquidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeFactory",
    outputs: [
      {
        internalType: "contract ISafeFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minLiquidity",
        type: "uint256",
      },
    ],
    name: "setMinimumLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setRoleManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "slots",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasIndex",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001add38038062001add833981016040819052620000359162000246565b600080546001600160a01b0319166001600160a01b038616179055818385838383838380826000805460ff60a01b19169055506001600160a01b0390811660805260a051811690851603620000c35760408051808201909152601581527f5f61737365744d616e61676572206973207a65726f00000000000000000000006020820152620000c390620001e6565b60c0516001600160a01b0316836001600160a01b0316036200011e5760408051808201909152601281527f5f626173654173736574206973207a65726f000000000000000000000000000060208201526200011e90620001e6565b50506001600160a01b0391821660a052811660c0528216620001795760408051808201909152601481527f5f726f6c654d616e61676572206973207a65726f00000000000000000000000060208201526200017990620001e6565b5050600160035550506001600160a01b038516620001d05760408051808201909152601881527f5f666c6578706f6f6c466163746f7279206973207a65726f00000000000000006020820152620001d090620001e6565b505050506001600160a01b031660e05262000317565b8051156200022d57806040517fcc861063000000000000000000000000000000000000000000000000000000008152600401620002249190620002c6565b60405180910390fd5b50565b6001600160a01b03811681146200022d57600080fd5b600080600080600060a086880312156200025f57600080fd5b85516200026c8162000230565b60208701519095506200027f8162000230565b6040870151909450620002928162000230565b6060870151909350620002a58162000230565b6080870151909250620002b88162000230565b809150509295509295909350565b60006020808352835180602085015260005b81811015620002f657858101830151858201604001528201620002d8565b506000604082860101526040601f19601f8301168501019250505092915050565b60805160a05160c05160e0516117626200037b60003960008181610228015261088c015260008181610279015281816103f001528181610745015281816108b001526111a801526000818161020101526111fe0152600061013901526117626000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638456cb5911610097578063c9f8437c11610066578063c9f8437c14610261578063cdf456e114610274578063edc922a91461029b578063f1d588c5146102b057600080fd5b80638456cb59146101f457806394217ad1146101fc5780639e32d7d114610223578063b56cf0111461024a57600080fd5b80633f4ba83a116100d35780633f4ba83a146101af578063468758f5146101b75780635c975abb146101da57806367b9a286146101ec57600080fd5b8062435da514610104578063131e7e1c14610134578063282567b41461015b5780633930142714610170575b600080fd5b600054610117906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101177f000000000000000000000000000000000000000000000000000000000000000081565b61016e6101693660046113dd565b6102c3565b005b61019a61017e3660046113f6565b6005602052600090815260409020805460019091015460ff1682565b6040805192835290151560208301520161012b565b61016e610307565b6101ca6101c5366004611426565b610364565b604051901515815260200161012b565b600054600160a01b900460ff166101ca565b6101ca6106b3565b61016e6107ba565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b61025360025481565b60405190815260200161012b565b6101ca61026f366004611460565b610805565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6102a36109c2565b60405161012b91906115b9565b6101ca6102be3660046113f6565b610a75565b6102cb610aa2565b6002548103610302576103026040518060400160405280600d81526020016c506172616d2069732073616d6560981b815250610b21565b600255565b61030f610aa2565b610317610b4c565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061036e610b78565b61ffff828116106103a6576103a66040518060400160405280600c81526020016b496e76616c6964207261746560a01b815250610b21565b336000818152600560209081526040808320815180830183528154815260019091015460ff16151581840152815180830190925283825291810183905260025491929091610419907f00000000000000000000000000000000000000000000000000000000000000009086903090610ba3565b905082602001516105ce57600480548452600160208086018281526001600160a01b0388811660008181526005855260408082208b5181559451948701805460ff191695151595909517909455835160c0810185528a51815280860189815261ffff8f16958201958652606082018381526080830194855260a083018c81528a54998a018b559990935290517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600790980297880155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c87015592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d86015591517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e85015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19f840180546001600160a01b03191691909216179055915180517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd1a0830155909101517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd1a190910155610601565b8060048460000151815481106105e6576105e66115cc565b60009182526020909120600160079092020101805490910190555b7f0a528f81d4ce06395729238fd3358a726bef29566b10db382cf88e62fb39185b6004846000015181548110610639576106396115cc565b906000526020600020906007020160405161069f91908154815260018201546020820152600282015460408201526003820154606082015260048201546001600160a01b03166080820152600582015460a082015260069091015460c082015260e00190565b60405180910390a150600195945050505050565b60006106bd610b78565b6106c5610cb5565b60008060006106d2610cdf565b925092509250826020015160000361071657610716604051806040016040528060118152602001704e6f7468696e6720746f2072656d6f766560781b815250610b21565b60006004838154811061072b5761072b6115cc565b90600052602060002090600702016001018190555061076f7f0000000000000000000000000000000000000000000000000000000000000000828560200151610de9565b7f1e62e0ceb04999bb91501874d5b75964403c0e7e81111f35d45d188ac9bba4118360405161079e91906115e2565b60405180910390a1600193505050506107b76001600355565b90565b6107c2610aa2565b6107ca610b78565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586103473390565b600061080f610b78565b8251600003610846576108466040518060400160405280600d81526020016c4c69737420697320656d70747960981b815250610b21565b8160000361087c5761087c6040518060400160405280600d81526020016c04c6f616e20616d74206973203609c1b815250610b21565b60006108888484610ec1565b90507f00000000000000000000000000000000000000000000000000000000000000006108d67f00000000000000000000000000000000000000000000000000000000000000008286610de9565b604051632ef3946f60e01b81526001600160a01b03821690632ef3946f90610906908590339089906004016115f0565b6020604051808303816000875af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610949919061161e565b61097c5761097c6040518060400160405280600e81526020016d119858dd1bdc9e48195c9c9bd95960921b815250610b21565b7febdbff8e38cffc3e7a007be6cd1b611012beb1c67223a2fb5ec524704ce41e8882336040516109ad929190611640565b60405180910390a16001925050505b92915050565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610a6c5760008481526020908190206040805160c0810182526007860290920180548352600180820154848601526002820154848401526003820154606085015260048201546001600160a01b031660808501528251808401909352600582015483526006909101548285015260a083019190915290835290920191016109e6565b50505050905090565b6000610a7f610aa2565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b031680610ae357610ae36040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b815250610b21565b610aec33611134565b610b1e57610b1e6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b815250610b21565b50565b805115610b1e578060405163cc86106360e01b8152600401610b43919061166a565b60405180910390fd5b600054600160a01b900460ff16610b7657604051638dfc202b60e01b815260040160405180910390fd5b565b600054600160a01b900460ff1615610b765760405163d93c066560e01b815260040160405180910390fd5b6000806001600160a01b0385163314610bbc5733610bbe565b845b9050610bcb8682856111a3565b91506001600160a01b03861615801590610bed57506001600160a01b03841615155b610bf957610bf96116b9565b8115610cac576040516323b872dd60e01b81526001600160a01b0382811660048301528581166024830152604482018490528716906323b872dd906064016020604051808303816000875af1158015610c56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7a919061161e565b610cac57610cac6040518060400160405280600d81526020016c151c9e11995c8819985a5b1959609a1b815250610b21565b50949350505050565b600260035403610cd857604051633ee5aeb560e01b815260040160405180910390fd5b6002600355565b610ce7611384565b3360008181526005602090815260408083208151808301909252805482526001015460ff16151591810182905291929190610d5357610d53604051806040016040528060168152602001752ab9b2b91034b9903737ba103090383937bb34b232b960511b815250610b21565b8060000151925060048381548110610d6d57610d6d6115cc565b60009182526020918290206040805160c0810182526007909302909101805483526001810154838501526002810154838301526003810154606084015260048101546001600160a01b03166080840152815180830190925260058101548252600601549281019290925260a08101919091529492935090919050565b6001600160a01b038216610dff57610dff6116b9565b6001600160a01b038316610e1557610e156116b9565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e88919061161e565b610ebc57610ebc6040518060400160405280600f81526020016e105c1c1c9bdd985b0811985a5b1959608a1b815250610b21565b505050565b8151606090829060008167ffffffffffffffff811115610ee357610ee361144a565b604051908082528060200260200182016040528015610f1c57816020015b610f09611384565b815260200190600190039081610f015790505b50905060005b82811015611103576000878281518110610f3e57610f3e6115cc565b602002602001015190506004805490508110610f8a57610f8a60405180604001604052806015815260200174125b9d985b1a59081cdb1bdd0819195d1958dd1959605a1b815250610b21565b600060048281548110610f9f57610f9f6115cc565b60009182526020918290206040805160c08101825260079093029091018054835260018101548385019081526002820154848401526003820154606085015260048201546001600160a01b031660808501528251808401909352600582015483526006909101549382019390935260a082015290519091508611611055578581602001510360048381548110611037576110376115cc565b90600052602060002090600702016001018190555060009550611089565b806020015186039550600060048381548110611073576110736115cc565b9060005260206000209060070201600101819055505b60006004838154811061109e5761109e6115cc565b906000526020600020906007020160010154905080826020018181516110c491906116cf565b905250845182908690869081106110dd576110dd6115cc565b6020026020010181905250866000036110f857505050611103565b505050600101610f22565b50821561112b5761112b60405180606001604052806023815260200161170a60239139610b21565b95945050505050565b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa15801561117f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc919061161e565b6000837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161461129f57604051634df48c7360e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639be918e690602401602060405180830381865afa158015611245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611269919061161e565b61129f5761129f60405180604001604052806011815260200170155b9cdd5c1c1bdc9d195908105cdcd95d607a1b815250610b21565b6001600160a01b0385166112b5576112b56116b9565b6001600160a01b0384166112cb576112cb6116b9565b604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015286169063dd62ed3e90604401602060405180830381865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b91906116f0565b91508282101561137c5761137c6040518060400160405280601681526020017556616c75652065786365656420616c6c6f77616e636560501b815250610b21565b509392505050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016113d8604051806040016040528060008152602001600081525090565b905290565b6000602082840312156113ef57600080fd5b5035919050565b60006020828403121561140857600080fd5b81356001600160a01b038116811461141f57600080fd5b9392505050565b60006020828403121561143857600080fd5b813561ffff8116811461141f57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561147357600080fd5b823567ffffffffffffffff8082111561148b57600080fd5b818501915085601f83011261149f57600080fd5b81356020828211156114b3576114b361144a565b8160051b604051601f19603f830116810181811086821117156114d8576114d861144a565b6040529283528183019350848101820192898411156114f657600080fd5b948201945b83861015611514578535855294820194938201936114fb565b9997909101359750505050505050565b8051825260208101516020830152604081015160408301526060810151606083015260018060a01b03608082015116608083015260a0810151805160a0840152602081015160c0840152505050565b60008151808452602080850194506020840160005b838110156115ae5761159b878351611524565b60e0969096019590820190600101611588565b509495945050505050565b60208152600061141f6020830184611573565b634e487b7160e01b600052603260045260246000fd5b60e081016109bc8284611524565b6060815260006116036060830186611573565b6001600160a01b039490941660208301525060400152919050565b60006020828403121561163057600080fd5b8151801515811461141f57600080fd5b6040815260006116536040830185611573565b905060018060a01b03831660208301529392505050565b60006020808352835180602085015260005b818110156116985785810183015185820160400152820161167c565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052600160045260246000fd5b818103818111156109bc57634e487b7160e01b600052601160045260246000fd5b60006020828403121561170257600080fd5b505191905056fe4c6f616e20657863656564206167677265676174652070726f7669646572732062616ca264697066735822122078cdd5462f5e8be735cf9198ae8ca416aabe1f2363de77d53f3f409e7569a51164736f6c63430008180033";

type ProvidersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvidersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Providers__factory extends ContractFactory {
  constructor(...args: ProvidersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _flexpoolFactory: AddressLike,
    _roleManager: AddressLike,
    _baseAsset: AddressLike,
    _assetManager: AddressLike,
    _safeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _flexpoolFactory,
      _roleManager,
      _baseAsset,
      _assetManager,
      _safeFactory,
      overrides || {}
    );
  }
  override deploy(
    _flexpoolFactory: AddressLike,
    _roleManager: AddressLike,
    _baseAsset: AddressLike,
    _assetManager: AddressLike,
    _safeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _flexpoolFactory,
      _roleManager,
      _baseAsset,
      _assetManager,
      _safeFactory,
      overrides || {}
    ) as Promise<
      Providers & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Providers__factory {
    return super.connect(runner) as Providers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvidersInterface {
    return new Interface(_abi) as ProvidersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Providers {
    return new Contract(address, _abi, runner) as unknown as Providers;
  }
}
