/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Reserve,
  ReserveInterface,
} from "../../../contracts/standalone/Reserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRoleBase",
        name: "_roleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errorMsg",
        type: "string",
      },
    ],
    name: "ErrorOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setRoleManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newToken",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b12380380610b1283398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b610a838061008f6000396000f3fe6080604052600436106100895760003560e01c806317be3fa51161005957806317be3fa51461017a57806388d695b21461019a578063dd2e0ac0146101ba578063f1d588c5146101da578063fc0c546a1461020a57600080fd5b8062435da5146100c557806306fdde03146101025780631072cbea14610138578063144fa6d71461015a57600080fd5b366100c05760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156100d157600080fd5b506000546100e5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010e57600080fd5b5060408051808201825260078152665245534552564560c81b602082015290516100f99190610745565b34801561014457600080fd5b5061015861015336600461078d565b61022a565b005b34801561016657600080fd5b506101586101753660046107b9565b61024d565b34801561018657600080fd5b5061015861019536600461078d565b610289565b3480156101a657600080fd5b506101586101b53660046108b0565b6102a8565b3480156101c657600080fd5b506101586101d5366004610972565b6102c7565b3480156101e657600080fd5b506101fa6101f53660046107b9565b6102e8565b60405190151581526020016100f9565b34801561021657600080fd5b506001546100e5906001600160a01b031681565b610232610315565b600154610249906001600160a01b03168383610391565b5050565b610255610315565b610267816001600160a01b03166103f9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610291610315565b600154610249906001600160a01b0316838361044f565b6102b0610315565b600154610249906001600160a01b0316838361047f565b6102cf610315565b6001546102e5906001600160a01b03168261049e565b50565b60006102f2610315565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b031680610356576103566040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b8152506104bd565b61035f336104df565b6102e5576102e56040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b8152506104bd565b6040516001600160a01b0383166024820152604481018290526103f490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610554565b505050565b6001600160a01b0381166102e55760405162461bcd60e51b815260206004820152601b60248201527f4c69623a20546172676574206973207a65726f2061646472657373000000000060448201526064016100b7565b6040516001600160a01b0383166024820152604481018290526103f49084906317be3fa560e01b906064016103bd565b6103f48363c52c159360e01b84846040516024016103bd92919061098b565b6102498263dd2e0ac060e01b836040516024016103bd91815260200190565b8051156102e5578060405163cc86106360e01b81526004016100b79190610745565b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190610a0f565b92915050565b60006105696001600160a01b038416836105e9565b905080516000148061058a57508080602001905181019061058a9190610a0f565b6103f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100b7565b60606105f7838360006105fe565b9392505050565b606030318211156106245760405163cd78605960e01b81523060048201526024016100b7565b600080856001600160a01b031684866040516106409190610a31565b60006040518083038185875af1925050503d806000811461067d576040519150601f19603f3d011682016040523d82523d6000602084013e610682565b606091505b509150915061069286838361069c565b9695505050505050565b6060826106b1576106ac826106f8565b6105f7565b81511580156106c857506001600160a01b0384163b155b156106f157604051639996b31560e01b81526001600160a01b03851660048201526024016100b7565b50806105f7565b8051156107085780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b8381101561073c578181015183820152602001610724565b50506000910152565b6020815260008251806020840152610764816040850160208701610721565b601f01601f19169190910160400192915050565b6001600160a01b03811681146102e557600080fd5b600080604083850312156107a057600080fd5b82356107ab81610778565b946020939093013593505050565b6000602082840312156107cb57600080fd5b81356105f781610778565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610815576108156107d6565b604052919050565b600067ffffffffffffffff821115610837576108376107d6565b5060051b60200190565b600082601f83011261085257600080fd5b813560206108676108628361081d565b6107ec565b8083825260208201915060208460051b87010193508684111561088957600080fd5b602086015b848110156108a5578035835291830191830161088e565b509695505050505050565b600080604083850312156108c357600080fd5b823567ffffffffffffffff808211156108db57600080fd5b818501915085601f8301126108ef57600080fd5b813560206108ff6108628361081d565b82815260059290921b8401810191818101908984111561091e57600080fd5b948201945b8386101561094557853561093681610778565b82529482019490820190610923565b9650508601359250508082111561095b57600080fd5b5061096885828601610841565b9150509250929050565b60006020828403121561098457600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156109cd5781516001600160a01b0316845292840192908401906001016109a8565b5050508381038285015284518082528583019183019060005b81811015610a02578351835292840192918401916001016109e6565b5090979650505050505050565b600060208284031215610a2157600080fd5b815180151581146105f757600080fd5b60008251610a43818460208701610721565b919091019291505056fea264697066735822122027584ead882e63daf150a948feea4cc779bd85a30e76e351a31cb3d1469bec5f64736f6c63430008180033";

type ReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reserve__factory extends ContractFactory {
  constructor(...args: ReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_roleManager, overrides || {});
  }
  override deploy(
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_roleManager, overrides || {}) as Promise<
      Reserve & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reserve__factory {
    return super.connect(runner) as Reserve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReserveInterface {
    return new Interface(_abi) as ReserveInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reserve {
    return new Contract(address, _abi, runner) as unknown as Reserve;
  }
}
