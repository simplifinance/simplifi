/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SimpliToken,
  SimpliTokenInterface,
} from "../../../../contracts/standalone/tokens/SimpliToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attorney_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reserve_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initTokenReceiver",
        type: "address",
      },
      {
        internalType: "contract IRoleBase",
        name: "_roleManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AddressIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errorMsg",
        type: "string",
      },
    ],
    name: "ErrorOccurred",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPreviousLockDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "accountBalances",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "_bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "batchTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttorney",
    outputs: [
      {
        internalType: "address",
        name: "_attorney",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "getLockedInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "escapeTo",
            type: "address",
          },
        ],
        internalType: "struct IERC20.Protected",
        name: "_locked",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_routeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountToRetrieve",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "spendable",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "escapeTo",
                type: "address",
              },
            ],
            internalType: "struct IERC20.Protected",
            name: "locked",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20.Balances",
        name: "_bal",
        type: "tuple",
      },
    ],
    name: "panicUnlock",
    outputs: [
      {
        internalType: "bool",
        name: "feedback",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleManager",
    outputs: [
      {
        internalType: "contract IRoleBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAttorney",
        type: "address",
      },
    ],
    name: "setAttorney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setRoleManager",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unlockToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b6738038062001b67833981016040819052620000349162000433565b600080546001600160a01b0319166001600160a01b038316179055838383836000805460ff60a01b19169055620000746001600160a01b038516620001d5565b6040805160a081018252601280825260006020808401918252845180860186529283527f53696d706c66696e616e636520546f6b656e0000000000000000000000000000838201528385019283528451808601909552600485527f54534654000000000000000000000000000000000000000000000000000000009085015260608301939093526001600160a01b038716608083015281516001805460ff191660ff90921691909117815592516002555190919060039062000137908262000573565b50606082015160038201906200014e908262000573565b5060809190910151600490910180546001600160a01b0319166001600160a01b0390921691909117905562000196620001843390565b6aa56fa5b99019a5c80000006200024e565b620001ae826b0295be96e6406697200000006200024e565b620001c782846b024306c4097859c43c000000620002d2565b505050505050505062000680565b6001600160a01b0381166200024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4c69623a20546172676574206973207a65726f2061646472657373000000000060448201526064015b60405180910390fd5b50565b620002626001600160a01b038316620001d5565b806001800160008282546200027891906200063f565b90915550506001600160a01b0382166000818152600660209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b5050565b620002e66001600160a01b038316620001d5565b6001600160a01b0380841660009081526006602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015280516200033b9083620003b1565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526006835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b505050565b80821015620002ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f422069732067726561746572207468616e204100000000000000000000000000604482015260640162000242565b6001600160a01b03811681146200024b57600080fd5b600080600080608085870312156200044a57600080fd5b845162000457816200041d565b60208601519094506200046a816200041d565b60408601519093506200047d816200041d565b606086015190925062000490816200041d565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c90821680620004df57607f821691505b60208210810362000519577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620003ac576000816000526020600020601f850160051c810160208610156200054a5750805b601f850160051c820191505b818110156200056b5782815560010162000556565b505050505050565b81516001600160401b038111156200058f576200058f6200049b565b620005a781620005a08454620004ca565b846200051f565b602080601f831160018114620005df5760008415620005c65750858301515b600019600386901b1c1916600185901b1785556200056b565b600085815260208120601f198616915b828110156200061057888601518255948401946001909101908401620005ef565b50858210156200062f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200067a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b6114d780620006906000396000f3fe6080604052600436106101695760003560e01c80636ff96d17116100d1578063a543fdf61161008a578063dd2e0ac011610064578063dd2e0ac01461048d578063dd62ed3e146104ad578063f1d588c5146104cd578063f627590b146104ed57600080fd5b8063a543fdf61461042f578063a9059cbb1461044d578063c52c15931461046d57600080fd5b80636ff96d171461034b57806370a08231146103985780638456cb59146103b85780638afb2207146103cd57806395d89b41146103fa578063a457c2d71461040f57600080fd5b806323b872dd1161012357806323b872dd14610295578063313ce567146102b557806339509351146102d75780633f4ba83a146102f757806342966c681461030c5780635c975abb1461032c57600080fd5b8062435da5146101a557806306fdde03146101e2578063095ea7b31461020457806317be3fa51461023457806318160ddd146102545780631fa29aad1461027357600080fd5b366101a05760405162461bcd60e51b81526020600482015260026024820152614e4160f01b60448201526064015b60405180910390fd5b600080fd5b3480156101b157600080fd5b506000546101c5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ee57600080fd5b506101f761050d565b6040516101d99190611071565b34801561021057600080fd5b5061022461021f3660046110d7565b6105a2565b60405190151581526020016101d9565b34801561024057600080fd5b5061022461024f3660046110d7565b6105bc565b34801561026057600080fd5b506002545b6040519081526020016101d9565b34801561027f57600080fd5b5061029361028e366004611101565b610615565b005b3480156102a157600080fd5b506102246102b0366004611123565b610651565b3480156102c157600080fd5b5060015460405160ff90911681526020016101d9565b3480156102e357600080fd5b506102246102f23660046110d7565b610675565b34801561030357600080fd5b50610293610697565b34801561031857600080fd5b5061029361032736600461115f565b6106f4565b34801561033857600080fd5b50600054600160a01b900460ff16610224565b34801561035757600080fd5b5061036b610366366004611101565b610701565b6040805182518152602092830151805184830152909201516001600160a01b0316908201526060016101d9565b3480156103a457600080fd5b506102656103b3366004611101565b610754565b3480156103c457600080fd5b50610293610772565b3480156103d957600080fd5b506103ed6103e8366004611101565b6107bd565b6040516101d99190611178565b34801561040657600080fd5b506101f7610828565b34801561041b57600080fd5b5061022461042a3660046110d7565b61083a565b34801561043b57600080fd5b506005546001600160a01b03166101c5565b34801561045957600080fd5b506102246104683660046110d7565b6108b5565b34801561047957600080fd5b506102246104883660046112a2565b6108c3565b34801561049957600080fd5b506102246104a836600461115f565b61096a565b3480156104b957600080fd5b506102656104c836600461135b565b6109c1565b3480156104d957600080fd5b506102246104e8366004611101565b6109ec565b3480156104f957600080fd5b5061022461050836600461138e565b610a1a565b60606001600201805461051f90611414565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90611414565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b5050505050905090565b6000336105b0818585610aa5565b60019150505b92915050565b60006105c9338484610b2b565b7f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd6000833604080516001600160a01b039092168252602082018590520160405180910390a150600192915050565b61061d610c01565b61062f816001600160a01b0316610c7d565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60003361065f858285610cd3565b61066a858585610d07565b506001949350505050565b6000336105b081858561068883836109c1565b6106929190611448565b610aa5565b61069f610c01565b6106a7610dbb565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6106fe3382610de7565b50565b610709611034565b506001600160a01b0390811660009081526006602090815260409182902082518084018452815481528351808501909452600182015484526002909101549093168282015282015290565b6001600160a01b0381166000908152600660205260408120546105b6565b61077a610c01565b610782610e74565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106d73390565b604080518082019091526000808252602082015260055433906001600160a01b03168103610822576001600160a01b03808416600090815260066020908152604091829020825180840190935260018101548352600201549092169181019190915291505b50919050565b60606001600301805461051f90611414565b6000338161084882866109c1565b9050838110156108a85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610197565b61066a8286868403610aa5565b6000336105b0818585610d07565b805182516000919081146109085760405162461bcd60e51b815260206004820152600c60248201526b155b995c5d585b081b1a5cdd60a21b6044820152606401610197565b60005b8181101561066a57600084828151811061092757610927611469565b60200260200101519050600086838151811061094557610945611469565b602002602001015190506109606109593390565b8383610d07565b505060010161090b565b60006109763383610e9f565b7f4e7407468c9afb1673f0eb43b54dbfa1f26fd38ee8918b42318c78efefac177333604080516001600160a01b039092168252602082018590520160405180910390a1506001919050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b60006109f6610c01565b600080546001600160a01b0319166001600160a01b0384161790555060015b919050565b600554600090610a32906001600160a01b0316610c7d565b6005546001600160a01b031633036105b6576001600160a01b038084166000908152600660209081526040808320600101839055858201518051920151909316825291902080549091019055815115610a9c57610a9c838360200151602001518460000151610d07565b50600192915050565b610ab7836001600160a01b0316610c7d565b610ac9826001600160a01b0316610c7d565b6001600160a01b0383811660008181526007602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b610b3d826001600160a01b0316610c7d565b6001600160a01b038084166000908152600660209081526040918290208251808401845281548152835180850190945260018201548452600290910154909316828201528201528051610b909083610f59565b60408051808201825282518490038152815180830183526020938401515190940184526001600160a01b039485168385015282810193845294841660009081526006835220935184559051805160018501550151600290920180546001600160a01b03191692909116919091179055565b6000546001600160a01b031680610c4257610c426040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b815250610fa3565b610c4b33610fc5565b6106fe576106fe6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b815250610fa3565b6001600160a01b0381166106fe5760405162461bcd60e51b815260206004820152601b60248201527f4c69623a20546172676574206973207a65726f206164647265737300000000006044820152606401610197565b6000610cdf84846109c1565b90506000198114610d0157610cf48183610f59565b610d018484848403610aa5565b50505050565b610d19836001600160a01b0316610c7d565b610d2b826001600160a01b0316610c7d565b6001600160a01b038316600090815260066020526040902054610d4e8183610f59565b6001600160a01b0380851660008181526006602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dae9086815260200190565b60405180910390a3610d01565b600054600160a01b900460ff16610de557604051638dfc202b60e01b815260040160405180910390fd5b565b610df9826001600160a01b0316610c7d565b6001600160a01b038216600090815260066020526040902054610e1c8183610f59565b6001600160a01b03831660008181526006602090815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610b1e565b600054600160a01b900460ff1615610de55760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03808316600090815260066020908152604091829020825180840184528154815283518085019094526001820154845260029091015484168383019081529181019290925251909116610f0c57604051631ec4ebaf60e21b815260040160405180910390fd5b602081015151610f1c9083610f59565b6001600160a01b03928316600090815260066020908152604080832060010180548690039055928101510151909316835290912080549091019055565b80821015610f9f5760405162461bcd60e51b8152602060048201526013602482015272422069732067726561746572207468616e204160681b6044820152606401610197565b5050565b8051156106fe578060405163cc86106360e01b81526004016101979190611071565b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b6919061147f565b60405180604001604052806000815260200161106c60405180604001604052806000815260200160006001600160a01b031681525090565b905290565b60006020808352835180602085015260005b8181101561109f57858101830151858201604001528201611083565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a1557600080fd5b600080604083850312156110ea57600080fd5b6110f3836110c0565b946020939093013593505050565b60006020828403121561111357600080fd5b61111c826110c0565b9392505050565b60008060006060848603121561113857600080fd5b611141846110c0565b925061114f602085016110c0565b9150604084013590509250925092565b60006020828403121561117157600080fd5b5035919050565b815181526020808301516001600160a01b031690820152604081016105b6565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156111d1576111d1611198565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561120057611200611198565b604052919050565b600067ffffffffffffffff82111561122257611222611198565b5060051b60200190565b600082601f83011261123d57600080fd5b8135602061125261124d83611208565b6111d7565b8083825260208201915060208460051b87010193508684111561127457600080fd5b602086015b848110156112975761128a816110c0565b8352918301918301611279565b509695505050505050565b600080604083850312156112b557600080fd5b823567ffffffffffffffff808211156112cd57600080fd5b818501915085601f8301126112e157600080fd5b813560206112f161124d83611208565b82815260059290921b8401810191818101908984111561131057600080fd5b948201945b8386101561132e57853582529482019490820190611315565b9650508601359250508082111561134457600080fd5b506113518582860161122c565b9150509250929050565b6000806040838503121561136e57600080fd5b611377836110c0565b9150611385602084016110c0565b90509250929050565b60008082840360808112156113a257600080fd5b6113ab846110c0565b92506060601f19820112156113bf57600080fd5b6113c76111ae565b602085013581526040603f19830112156113e057600080fd5b6113e86111ae565b9150604085013582526113fd606086016110c0565b602083015281602082015280925050509250929050565b600181811c9082168061142857607f821691505b60208210810361082257634e487b7160e01b600052602260045260246000fd5b808201808211156105b657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561149157600080fd5b8151801515811461111c57600080fdfea2646970667358221220597ecf7783e711243863c6e6c90b78718fc3a939d639f7fe5d50cd88199561e264736f6c63430008180033";

type SimpliTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpliTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpliToken__factory extends ContractFactory {
  constructor(...args: SimpliTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      attorney_,
      reserve_,
      initTokenReceiver,
      _roleManager,
      overrides || {}
    );
  }
  override deploy(
    attorney_: AddressLike,
    reserve_: AddressLike,
    initTokenReceiver: AddressLike,
    _roleManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      attorney_,
      reserve_,
      initTokenReceiver,
      _roleManager,
      overrides || {}
    ) as Promise<
      SimpliToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpliToken__factory {
    return super.connect(runner) as SimpliToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpliTokenInterface {
    return new Interface(_abi) as SimpliTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpliToken {
    return new Contract(address, _abi, runner) as unknown as SimpliToken;
  }
}
