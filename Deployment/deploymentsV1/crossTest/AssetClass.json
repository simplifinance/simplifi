{
  "address": "0x1a375D2aEF1370B306B4aCc9d930e3C2defaBF9c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ownershipMgr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Locked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UnSupportedAsset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getSupportedAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "listed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownershipManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setOwnershipManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "supportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAsset",
          "type": "address"
        }
      ],
      "name": "unsupportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xae689c04d7e4c3c860e9ba6850cf614d06d9ca4af4965a92129ba51a3731fb45",
  "receipt": {
    "to": null,
    "from": "0xD7c271d20c9E323336bFC843AEb8deC23B346352",
    "contractAddress": "0x1a375D2aEF1370B306B4aCc9d930e3C2defaBF9c",
    "transactionIndex": 2,
    "gasUsed": "574515",
    "logsBloom": "0x
    "blockHash": "0x500ad148d8c79f0ed5730e58982a6231e8e7e4559e38b688134d9d1634647677",
    "transactionHash": "0xae689c04d7e4c3c860e9ba6850cf614d06d9ca4af4965a92129ba51a3731fb45",
    "logs": [],
    "blockNumber": 5046169,
    "cumulativeGasUsed": "950362",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb28721f7b977D64F9401161EA91bC25D59F25308",
    "0xe09e23F8a8032BB39326098802c970f9b48D726C"
  ],
  "numDeployments": 1,
  "solcInputHash": "7f41b4ad30a01bb2f81e21f127887c76",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownershipMgr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UnSupportedAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getSupportedAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownershipManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setOwnershipManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"supportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAsset\",\"type\":\"address\"}],\"name\":\"unsupportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initialize state variables\",\"params\":{\"_asset\":\": Initial supported asset\"}},\"getSupportedAssets()\":{\"details\":\"Returns a list of supported assets\"},\"isSupportedAsset(address)\":{\"details\":\"Check if an asset is supported\"},\"setOwnershipManager(address)\":{\"params\":{\"newManager\":\": New manager address\"}},\"supportAsset(address)\":{\"details\":\"Support a new asset Note: OnlyOwner action\",\"params\":{\"_asset\":\": Asset to add to list of supported asset\"}},\"unsupportAsset(address)\":{\"details\":\"Unsupports an asset Note: Only-owner action\",\"params\":{\"newAsset\":\": Removes an asset from the list of supported asset\"}}},\"stateVariables\":{\"supportedAssets\":{\"details\":\"Mapping assets address to bool i.e Assets must be contract account and must be supported\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setOwnershipManager(address)\":{\"notice\":\"Set Ownership manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementations/AssetClass.sol\":\"AssetClass\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/OnlyOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { MsgSender, OwnerShip } from \\\"../implementations/OwnerShip.sol\\\";\\r\\nimport { IOwnerShip } from \\\"../apis/IOwnerShip.sol\\\";\\r\\n\\r\\nabstract contract OnlyOwner is MsgSender {\\r\\n    address public ownershipManager;\\r\\n\\r\\n    constructor(address _ownershipManager)\\r\\n    {\\r\\n        _setOwnershipManager(_ownershipManager);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Caller must have owner role before execeution can proceed.\\r\\n     * The 'errorMessage' argument can be used to return error specific to \\r\\n     * a context e.g function call. \\r\\n     * @param errorMessage : Custom error message\\r\\n     */\\r\\n    modifier onlyOwner(string memory errorMessage) {\\r\\n        address mgr = ownershipManager;\\r\\n        require(mgr != address(0), \\\"OnlyOwner: Manager not set\\\");\\r\\n        require(IOwnerShip(mgr).isOwner(_msgSender()), errorMessage);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function _setOwnershipManager(\\r\\n        address newManager\\r\\n    )\\r\\n        private\\r\\n    {\\r\\n        ownershipManager = newManager;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set Ownership manager\\r\\n     * @param newManager : New manager address\\r\\n     */\\r\\n    function setOwnershipManager(\\r\\n        address newManager\\r\\n    )\\r\\n        public\\r\\n        onlyOwner(\\\"OnlyOwner: Not permitted\\\")\\r\\n        returns(bool)\\r\\n    {\\r\\n        _setOwnershipManager(newManager);\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x69c663365e2cf43d13d18b4926714078df66472a2d0aca7988dae04b61feafb6\",\"license\":\"MIT\"},\"contracts/apis/IAssetClass.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\ninterface IAssetClass {\\r\\n  error UnSupportedAsset(address);\\r\\n  error Locked();\\r\\n  \\r\\n  function isSupportedAsset(\\r\\n    address _asset\\r\\n  ) \\r\\n    external \\r\\n    view returns(bool);\\r\\n}\",\"keccak256\":\"0x8c5b7a13d1c6e9e9d7bfdfc11d1fb337729ef4a809f8bfe2636a1999b77a341b\",\"license\":\"MIT\"},\"contracts/apis/IOwnerShip.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IOwnerShip \\r\\n * Interface of the OwnerShip contract\\r\\n * @author Simplifi (Bobeu)\\r\\n */\\r\\ninterface IOwnerShip {\\r\\n    function setPermission(\\r\\n        address[] memory newOwners\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function removeOwner(\\r\\n        address target\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function renounceOwnerShip() \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function getOwner(\\r\\n        uint ownerId\\r\\n    ) \\r\\n        external \\r\\n        view \\r\\n        returns(address);\\r\\n\\r\\n    function isOwner(\\r\\n        address target\\r\\n    )\\r\\n        external\\r\\n        view \\r\\n        returns(bool);\\r\\n}\",\"keccak256\":\"0xe21511940e88a7e8036b4b6adfde25125f7f3d49cde2732bffd219847b3ed6c0\",\"license\":\"MIT\"},\"contracts/implementations/AssetClass.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { OnlyOwner } from \\\"../abstracts/OnlyOwner.sol\\\";\\r\\nimport { IAssetClass } from \\\"../apis/IAssetClass.sol\\\"; \\r\\n\\r\\ncontract AssetClass is IAssetClass, OnlyOwner {\\r\\n  address[] private assets;\\r\\n\\r\\n  /**\\r\\n   * @dev Mapping assets address to bool i.e Assets must be contract account\\r\\n   * and must be supported\\r\\n   */\\r\\n  mapping(address => bool) private supportedAssets;\\r\\n\\r\\n  mapping(address => bool) public listed;\\r\\n\\r\\n  /**\\r\\n   * @dev Asset must be supported before they can be used.\\r\\n   */\\r\\n  modifier onlySupportedAsset(address _asset) {\\r\\n    if(!supportedAssets[_asset]) revert UnSupportedAsset(_asset);\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initialize state variables\\r\\n   * @param _asset : Initial supported asset\\r\\n   */\\r\\n  constructor(\\r\\n    address _asset,\\r\\n    address _ownershipMgr\\r\\n  ) \\r\\n    OnlyOwner(_ownershipMgr) \\r\\n  {\\r\\n    require(_asset != address(0), \\\"Asset cannot be empty\\\");\\r\\n    _supportAsset(_asset);\\r\\n  }\\r\\n\\r\\n  // fallback(bytes calldata data) external returns(bytes memory) {\\r\\n  //   return \\\"Function not found\\\";\\r\\n  // }\\r\\n\\r\\n  /**\\r\\n   * @dev Support a new asset\\r\\n   * Note: OnlyOwner action\\r\\n   * @param _asset : Asset to add to list of supported asset\\r\\n   */\\r\\n  function supportAsset(\\r\\n    address _asset\\r\\n  ) \\r\\n    public \\r\\n    onlyOwner(\\\"AssetClass - supportAsset: Not permitted\\\")\\r\\n  {\\r\\n    _supportAsset(_asset); \\r\\n  }\\r\\n\\r\\n  function _supportAsset(address _asset) private {\\r\\n    \\r\\n    if(!listed[_asset]){\\r\\n      listed[_asset] = true;\\r\\n      assets.push(_asset);\\r\\n    }\\r\\n    if(!_isAssetSupported(_asset)){\\r\\n      supportedAssets[_asset] = true;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Unsupports an asset\\r\\n   * Note: Only-owner action\\r\\n   * @param newAsset : Removes an asset from the list of supported asset\\r\\n   */\\r\\n  function unsupportAsset(\\r\\n    address newAsset\\r\\n  ) \\r\\n    public \\r\\n    onlyOwner(\\\"AssetClass - unsupportAsset: Not permitted\\\")\\r\\n  {\\r\\n    supportedAssets[newAsset] = false;\\r\\n  }\\r\\n\\r\\n  function _isAssetSupported(address _asset) internal view returns(bool) {\\r\\n    return supportedAssets[_asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Check if an asset is supported\\r\\n   */\\r\\n  function isSupportedAsset(address _asset) public override view returns(bool) {\\r\\n    return _isAssetSupported(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns a list of supported assets\\r\\n   */\\r\\n  function getSupportedAssets() public view returns(address[] memory _assets) {\\r\\n    _assets = assets;\\r\\n    return _assets;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0x411cdf19d0fc620c12782d2c152fffb57e5a8e6f3fc8c606359651d73c9ba324\",\"license\":\"MIT\"},\"contracts/implementations/OwnerShip.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { IOwnerShip } from \\\"../apis/IOwnerShip.sol\\\";\\r\\n/**\\r\\n * @title MsgSender \\r\\n * @author Simplifi (Bobeu)\\r\\n * @notice Non-deployable contract simply returning the calling account.\\r\\n */\\r\\nabstract contract MsgSender {\\r\\n    function _msgSender() internal view returns(address sender) {\\r\\n        sender = msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title OwnerShip \\r\\n * @author Simplifi (Bobeu)\\r\\n * @notice Standalone contract for managing ownership in Simplifi protocol.\\r\\n */\\r\\ncontract OwnerShip is IOwnerShip, MsgSender{\\r\\n    /**\\r\\n     * @notice Number of owners.\\r\\n     */\\r\\n    uint public ownersCount;\\r\\n\\r\\n    /**\\r\\n     * @notice Addresses with ownership permission.\\r\\n     */\\r\\n    \\r\\n    mapping (address => bool) private _isOwner;\\r\\n\\r\\n    /**\\r\\n     * @notice Mapping of ownersCount to addresses.\\r\\n     * A valid id will return a mapped owner.\\r\\n     */\\r\\n    mapping (uint => address) public owners;\\r\\n\\r\\n    /**\\r\\n     * @dev Only owner is allowed.\\r\\n     */\\r\\n    modifier onlyOwner {\\r\\n        require(_isOwner[_msgSender()], \\\"Oop! Caller is not recognized\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        _setOwner(_msgSender(), true);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns owner variable.\\r\\n     */\\r\\n    function _getOwner(uint ownerId) \\r\\n        internal \\r\\n        view \\r\\n        returns(address _owner) \\r\\n    {\\r\\n        _owner = owners[ownerId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add or remove target address as owner.\\r\\n     * @param target: Target address.\\r\\n     * @notice 'target' parameter must not be empty.\\r\\n     */\\r\\n    function _setOwner(\\r\\n        address target,\\r\\n        bool add\\r\\n    ) \\r\\n        private \\r\\n    {\\r\\n        require(target != address(0), \\\"Simplifi OwnerShip: 'target' parameter is empty\\\");\\r\\n        add? (_isOwner[target] = true, ownersCount ++) : (_isOwner[target] = false, ownersCount --);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a new owner address\\r\\n     * @param newOwners: New owners\\r\\n     * @notice Only address with owner permission can add another owner.\\r\\n     */\\r\\n    function setPermission(\\r\\n        address[] memory newOwners\\r\\n    ) \\r\\n        external\\r\\n        onlyOwner\\r\\n        returns(bool) \\r\\n    {\\r\\n        bool rt = true;\\r\\n        for(uint r = 0; r < newOwners.length; r++) {\\r\\n            _setOwner(newOwners[r], rt);\\r\\n        }\\r\\n        return rt;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Remove an address as owner.\\r\\n     * @param target: Target address\\r\\n     * @notice Only address with owner permission can remove another owner.\\r\\n     */\\r\\n    function removeOwner(\\r\\n        address target\\r\\n    ) \\r\\n        external\\r\\n        onlyOwner\\r\\n        returns(bool) \\r\\n    {\\r\\n        _setOwner(target, false);\\r\\n        return true;\\r\\n    }\\r\\n    /**\\r\\n     * @dev An owner can renounce their ownership. This however will not leave the\\r\\n     * contract empty without an owner. There must be at least one owner left.\\r\\n     * @notice Only address with owner permission can renounce ownership.\\r\\n     */\\r\\n    function renounceOwnerShip() \\r\\n        external\\r\\n        onlyOwner\\r\\n        returns(bool) \\r\\n    {\\r\\n        require(ownersCount > 1, \\\"At least 2 owners is required to leave\\\"); \\r\\n        _setOwner(_msgSender(), false);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns owner variable.\\r\\n     * Can be called externally by contracts.\\r\\n     * @param ownerId : Owner Id. \\r\\n     */\\r\\n    function getOwner(\\r\\n        uint ownerId\\r\\n    ) \\r\\n        external \\r\\n        view \\r\\n        returns(address) \\r\\n    {\\r\\n        return _getOwner(ownerId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Check if target is an owner.\\r\\n     * @param target : Target address.\\r\\n     */\\r\\n    function isOwner(\\r\\n        address target\\r\\n    )\\r\\n        external\\r\\n        view \\r\\n        returns(bool) \\r\\n    {\\r\\n        return _isOwner[target];\\r\\n    }\\r\\n}\",\"keccak256\":\"0xecca6e7a2c2684e193fcb16ac131d1b2895f981862969101d96d94616db70c0c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161093c38038061093c83398101604081905261002f916101b4565b600080546001600160a01b0319166001600160a01b0383161790556001600160a01b0382166100be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f41737365742063616e6e6f7420626520656d7074790000000000000000000000604482015260640160405180910390fd5b6100c7826100ce565b50506101e7565b6001600160a01b03811660009081526003602052604090205460ff16610151576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff16610195576001600160a01b0381166000908152600260205260409020805460ff191660011790555b50565b80516001600160a01b03811681146101af57600080fd5b919050565b600080604083850312156101c757600080fd5b6101d083610198565b91506101de60208401610198565b90509250929050565b610746806101f66000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063696875121161005b57806369687512146100e25780639be918e6146100f5578063b88a391514610121578063e5406dbf1461014c57600080fd5b80634cd55c2d1461008257806361737d621461009757806364138230146100bf575b600080fd5b610095610090366004610599565b610161565b005b6100aa6100a5366004610599565b610252565b60405190151581526020015b60405180910390f35b6100aa6100cd366004610599565b60036020526000908152604090205460ff1681565b6100956100f0366004610599565b610370565b6100aa610103366004610599565b6001600160a01b031660009081526002602052604090205460ff1690565b600054610134906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b61015461046d565b6040516100b691906105c9565b6040518060600160405280602881526020016106e9602891396000546001600160a01b0316806101ac5760405162461bcd60e51b81526004016101a390610616565b60405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061064d565b82906102435760405162461bcd60e51b81526004016101a3919061066f565b5061024d836104cf565b505050565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600080549091906001600160a01b0316806102b35760405162461bcd60e51b81526004016101a390610616565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b919061064d565b829061034a5760405162461bcd60e51b81526004016101a3919061066f565b50600080546001600160a01b0319166001600160a01b0386161790555060019392505050565b6040518060600160405280602a81526020016106bf602a91396000546001600160a01b0316806103b25760405162461bcd60e51b81526004016101a390610616565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a919061064d565b82906104495760405162461bcd60e51b81526004016101a3919061066f565b5050506001600160a01b03166000908152600260205260409020805460ff19169055565b606060018054806020026020016040519081016040528092919081815260200182805480156104c557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104a7575b5050505050905090565b6001600160a01b03811660009081526003602052604090205460ff16610552576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff16610596576001600160a01b0381166000908152600260205260409020805460ff191660011790555b50565b6000602082840312156105ab57600080fd5b81356001600160a01b03811681146105c257600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561060a5783516001600160a01b0316835292840192918401916001016105e5565b50909695505050505050565b6020808252601a908201527f4f6e6c794f776e65723a204d616e61676572206e6f7420736574000000000000604082015260600190565b60006020828403121561065f57600080fd5b815180151581146105c257600080fd5b60006020808352835180602085015260005b8181101561069d57858101830151858201604001528201610681565b506000604082860101526040601f19601f830116850101925050509291505056fe4173736574436c617373202d20756e737570706f727441737365743a204e6f74207065726d69747465644173736574436c617373202d20737570706f727441737365743a204e6f74207065726d6974746564a2646970667358221220ff437961d5cd65333ec93ff49ac2bf045dc84627299f9b91af6f0a5052598b9464736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063696875121161005b57806369687512146100e25780639be918e6146100f5578063b88a391514610121578063e5406dbf1461014c57600080fd5b80634cd55c2d1461008257806361737d621461009757806364138230146100bf575b600080fd5b610095610090366004610599565b610161565b005b6100aa6100a5366004610599565b610252565b60405190151581526020015b60405180910390f35b6100aa6100cd366004610599565b60036020526000908152604090205460ff1681565b6100956100f0366004610599565b610370565b6100aa610103366004610599565b6001600160a01b031660009081526002602052604090205460ff1690565b600054610134906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b61015461046d565b6040516100b691906105c9565b6040518060600160405280602881526020016106e9602891396000546001600160a01b0316806101ac5760405162461bcd60e51b81526004016101a390610616565b60405180910390fd5b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061064d565b82906102435760405162461bcd60e51b81526004016101a3919061066f565b5061024d836104cf565b505050565b60408051808201909152601881527f4f6e6c794f776e65723a204e6f74207065726d697474656400000000000000006020820152600080549091906001600160a01b0316806102b35760405162461bcd60e51b81526004016101a390610616565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b919061064d565b829061034a5760405162461bcd60e51b81526004016101a3919061066f565b50600080546001600160a01b0319166001600160a01b0386161790555060019392505050565b6040518060600160405280602a81526020016106bf602a91396000546001600160a01b0316806103b25760405162461bcd60e51b81526004016101a390610616565b6001600160a01b038116632f54bf6e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a919061064d565b82906104495760405162461bcd60e51b81526004016101a3919061066f565b5050506001600160a01b03166000908152600260205260409020805460ff19169055565b606060018054806020026020016040519081016040528092919081815260200182805480156104c557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104a7575b5050505050905090565b6001600160a01b03811660009081526003602052604090205460ff16610552576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff16610596576001600160a01b0381166000908152600260205260409020805460ff191660011790555b50565b6000602082840312156105ab57600080fd5b81356001600160a01b03811681146105c257600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561060a5783516001600160a01b0316835292840192918401916001016105e5565b50909695505050505050565b6020808252601a908201527f4f6e6c794f776e65723a204d616e61676572206e6f7420736574000000000000604082015260600190565b60006020828403121561065f57600080fd5b815180151581146105c257600080fd5b60006020808352835180602085015260005b8181101561069d57858101830151858201604001528201610681565b506000604082860101526040601f19601f830116850101925050509291505056fe4173736574436c617373202d20756e737570706f727441737365743a204e6f74207065726d69747465644173736574436c617373202d20737570706f727441737365743a204e6f74207065726d6974746564a2646970667358221220ff437961d5cd65333ec93ff49ac2bf045dc84627299f9b91af6f0a5052598b9464736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initialize state variables",
        "params": {
          "_asset": ": Initial supported asset"
        }
      },
      "getSupportedAssets()": {
        "details": "Returns a list of supported assets"
      },
      "isSupportedAsset(address)": {
        "details": "Check if an asset is supported"
      },
      "setOwnershipManager(address)": {
        "params": {
          "newManager": ": New manager address"
        }
      },
      "supportAsset(address)": {
        "details": "Support a new asset Note: OnlyOwner action",
        "params": {
          "_asset": ": Asset to add to list of supported asset"
        }
      },
      "unsupportAsset(address)": {
        "details": "Unsupports an asset Note: Only-owner action",
        "params": {
          "newAsset": ": Removes an asset from the list of supported asset"
        }
      }
    },
    "stateVariables": {
      "supportedAssets": {
        "details": "Mapping assets address to bool i.e Assets must be contract account and must be supported"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setOwnershipManager(address)": {
        "notice": "Set Ownership manager"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1594,
        "contract": "contracts/implementations/AssetClass.sol:AssetClass",
        "label": "ownershipManager",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2594,
        "contract": "contracts/implementations/AssetClass.sol:AssetClass",
        "label": "assets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 2599,
        "contract": "contracts/implementations/AssetClass.sol:AssetClass",
        "label": "supportedAssets",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2603,
        "contract": "contracts/implementations/AssetClass.sol:AssetClass",
        "label": "listed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}