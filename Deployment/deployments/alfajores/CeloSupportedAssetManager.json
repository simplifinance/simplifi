{
  "address": "0xB417BD4eB45A35Dd46f68C9549D4c55F2033E32F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "collateralAssets",
          "type": "address[]"
        },
        {
          "internalType": "contract IRoleBase",
          "name": "_roleManager",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "pair",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "oracleAddress",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "latestPrice",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "timestampOflatestPrice",
              "type": "uint128"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPriceOracle.PriceData[]",
          "name": "oracleData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "ErrorOccurred",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getDefaultSupportedCollateralAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getPriceQuote",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "price",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "inTime",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedAssets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "internalType": "struct ISupportedAsset.SupportedAsset[]",
          "name": "_assets",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "listed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTimePassed",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleManager",
      "outputs": [
        {
          "internalType": "contract IRoleBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "newMaxTimePass",
          "type": "uint128"
        }
      ],
      "name": "setMaxTimePass",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setRoleManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "supportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAsset",
          "type": "address"
        }
      ],
      "name": "unsupportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "updatePriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf4234e77bc1b5567036df87c043407175225d1add9218cf6e3d6a08128e55ed6",
  "receipt": {
    "to": null,
    "from": "0xD7c271d20c9E323336bFC843AEb8deC23B346352",
    "contractAddress": "0xB417BD4eB45A35Dd46f68C9549D4c55F2033E32F",
    "transactionIndex": 2,
    "gasUsed": "1417716",
    "logsBloom": "0x
    "blockHash": "0x66ae6eb62659ad237f8c556915a299a07292d7c9da5187a5ad90510bc07d1534",
    "transactionHash": "0xf4234e77bc1b5567036df87c043407175225d1add9218cf6e3d6a08128e55ed6",
    "logs": [],
    "blockNumber": 46117003,
    "cumulativeGasUsed": "1533222",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xFc9685ecaf3063002E97595A5Fe0D037a9d8A75B",
      "0x152238bc1a9498464CA6ad055C4dcD33D495Be64"
    ],
    "0x16884C8C6a494527f4541007A46239218e76F661",
    [
      {
        "latestPrice": "0",
        "timestampOflatestPrice": "0",
        "oracleAddress": "0x022F9dCC73C5Fb43F2b4eF2EF9ad3eDD1D853946",
        "pair": "SIMPL/USD",
        "decimals": 18
      },
      {
        "latestPrice": "0",
        "timestampOflatestPrice": "0",
        "oracleAddress": "0x0568fD19986748cEfF3301e55c0eb1E729E0Ab7e",
        "pair": "CELO/USD",
        "decimals": 8
      }
    ]
  ],
  "numDeployments": 3,
  "solcInputHash": "89370d9a8b41c6d99998d35c26e63e2c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"collateralAssets\",\"type\":\"address[]\"},{\"internalType\":\"contract IRoleBase\",\"name\":\"_roleManager\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"pair\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"latestPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"timestampOflatestPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IPriceOracle.PriceData[]\",\"name\":\"oracleData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"ErrorOccurred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getDefaultSupportedCollateralAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getPriceQuote\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"inTime\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct ISupportedAsset.SupportedAsset[]\",\"name\":\"_assets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimePassed\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"contract IRoleBase\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newMaxTimePass\",\"type\":\"uint128\"}],\"name\":\"setMaxTimePass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setRoleManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"supportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAsset\",\"type\":\"address\"}],\"name\":\"unsupportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_roleManager\":\": Role manager contract\",\"collateralAssets\":\": Supported assets\",\"oracleData\":\": Celo oracle data: optional \"}},\"getPriceQuote(address)\":{\"details\":\"Get price data into external contracts\",\"params\":{\"asset\":\": Asset for which to fetch price. \"}},\"getSupportedAssets()\":{\"details\":\"Returns a list of supported assets\"},\"isSupportedAsset(address)\":{\"details\":\"Check if an asset is supported\"},\"setMaxTimePass(uint128)\":{\"details\":\"Update the maxTimePass\",\"params\":{\"newMaxTimePass\":\": New maxTime\"}},\"setRoleManager(address)\":{\"params\":{\"newManager\":\": New manager address\"}},\"supportAsset(address)\":{\"details\":\"Support a new asset Note: OnlyRoleBase action\",\"params\":{\"_asset\":\": Asset to add to list of supported asset\"}},\"unsupportAsset(address)\":{\"details\":\"Unsupports an asset Note: Only-owner action\",\"params\":{\"newAsset\":\": Removes an asset from the list of supported asset\"}},\"updatePriceFeed(address)\":{\"details\":\"Get price data into external contracts\",\"params\":{\"asset\":\": Asset for which to fetch price.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Ensure the length of collateralAssets matches that of celoOracleData.\"},\"setRoleManager(address)\":{\"notice\":\"Set Role manager\"},\"updatePriceFeed(address)\":{\"notice\":\"Only permitted account can update the price feed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/oracles/CeloSupportedAssetManager.sol\":\"CeloSupportedAssetManager\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/interfaces/Common.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { IERC20 } from './IERC20.sol';\\r\\n\\r\\ninterface Common {\\r\\n    event PoolCreated(Pool);\\r\\n    event NewContributorAdded(Pool);\\r\\n    event GetFinanced(Pool);\\r\\n    event Payback(Pool);\\r\\n    event Liquidated(Pool);\\r\\n    event Cancellation(uint unit);\\r\\n    event PoolEdited(Pool);\\r\\n\\r\\n    enum Stage {\\r\\n        JOIN, \\r\\n        GET, \\r\\n        PAYBACK, \\r\\n        CANCELED,\\r\\n        ENDED\\r\\n    }\\r\\n\\r\\n    // enum Network { HARDHAT, CELO, CROSSFI }\\r\\n\\r\\n    enum Phase { ALPHA, MAINNET }\\r\\n\\r\\n    enum Status { AVAILABLE, TAKEN }\\r\\n\\r\\n    enum Branch { CURRENT, RECORD }\\r\\n\\r\\n    enum Router { NONE, PERMISSIONLESS, PERMISSIONED }\\r\\n\\r\\n    struct Pool {\\r\\n        Low low;\\r\\n        Big big;\\r\\n        Addresses addrs;\\r\\n        Router router;\\r\\n        Stage stage;\\r\\n        Status status;\\r\\n    }\\r\\n\\r\\n    struct Low {\\r\\n        uint8 maxQuorum;\\r\\n        uint8 selector;\\r\\n        uint24 colCoverage;\\r\\n        uint32 duration;\\r\\n        uint8 allGh;\\r\\n        uint8 userCount;\\r\\n    }\\r\\n\\r\\n    struct Big {\\r\\n        uint256 unit;\\r\\n        uint256 currentPool;\\r\\n        uint96 recordId;\\r\\n        uint96 unitId;\\r\\n    }\\r\\n\\r\\n    struct Point {\\r\\n        uint contributor;\\r\\n        uint creator;\\r\\n        uint referrals;\\r\\n        address user;\\r\\n        Phase phase;\\r\\n    }\\r\\n\\r\\n    struct PointsReturnValue {\\r\\n        string key;\\r\\n        Point[] value;\\r\\n    }\\r\\n\\r\\n    struct Interest {\\r\\n        uint fullInterest;\\r\\n        uint intPerSec;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Structured types - Address\\r\\n     * @param asset : Contract address of the asset in use.\\r\\n     * @param lastPaid: Last contributor who got finance.\\r\\n     * @param safe : Strategy for each pool or epoch. See Strategy.sol for more details.\\r\\n     * @param admin : Pool creator.\\r\\n     * \\r\\n    */\\r\\n    struct Addresses {\\r\\n        IERC20 colAsset;\\r\\n        address lastPaid;\\r\\n        address safe;\\r\\n        address admin;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @param isMember : Whether user is a member or not\\r\\n     *  @param turnStartTime: Time when the contributor's turn start to count.\\r\\n     *  @param getFinanceTime: Date when loan was disbursed\\r\\n     *  @param paybackTime: Date which the borrowed fund must be retured\\r\\n     *  @param loan: Total debts owed by the last fund recipient.\\r\\n     *  @param colBals: Collateral balances of the last recipient.\\r\\n     *  @param sentQuota : Whether an user/current msg.sender has received or not.\\r\\n     *  @param id : Address of the last recipient.\\r\\n     * @param interestPaid : The amount of interest paid  \\r\\n    */\\r\\n    struct Contributor {\\r\\n        uint32 paybackTime;\\r\\n        uint32 turnStartTime;\\r\\n        uint32 getFinanceTime;\\r\\n        uint loan;\\r\\n        uint colBals;\\r\\n        address id;\\r\\n        bool sentQuota;\\r\\n    }\\r\\n\\r\\n    struct Price {\\r\\n        uint128 price;\\r\\n        uint8 decimals;\\r\\n    }\\r\\n\\r\\n    struct Provider {\\r\\n        uint slot;\\r\\n        uint amount;\\r\\n        uint rate;\\r\\n        uint earnStartDate;\\r\\n        address account;\\r\\n        Interest accruals;\\r\\n    }\\r\\n\\r\\n    struct Payback_Safe {\\r\\n        address user; \\r\\n        IERC20 baseAsset; \\r\\n        uint256 debt;\\r\\n        uint256 attestedInitialBal;\\r\\n        bool allGF; \\r\\n        Contributor[] cData;\\r\\n        bool isSwapped;\\r\\n        address defaulted;\\r\\n        uint96 recordId;\\r\\n        IERC20 collateralAsset;\\r\\n    }\\r\\n\\r\\n    struct Slot {\\r\\n        uint value;\\r\\n        bool isMember;\\r\\n        bool isAdmin;\\r\\n    }\\r\\n\\r\\n    struct ReadPoolDataReturnValue {\\r\\n        Pool pool;\\r\\n        ContributorReturnValue[] cData;\\r\\n    }\\r\\n\\r\\n    struct ReadRecordDataReturnValue {\\r\\n        Pool pool;\\r\\n        Contributor[] cData;\\r\\n    }\\r\\n\\r\\n    struct UpdatePoolData {\\r\\n        uint unit;\\r\\n        uint96 unitId;\\r\\n        uint96 recordId;\\r\\n        uint8 maxQuorum;\\r\\n        uint24 colCoverage;\\r\\n        IERC20 colAsset;\\r\\n        uint16 durationInHours;\\r\\n        address creator;\\r\\n        Router router; \\r\\n    }\\r\\n\\r\\n    struct Analytics {\\r\\n        uint256 tvlCollateral;\\r\\n        uint256 tvlBase;\\r\\n        uint totalPermissioned;\\r\\n        uint totalPermissionless;\\r\\n    }\\r\\n\\r\\n    struct ViewFactoryData {\\r\\n        Analytics analytics;\\r\\n        uint16 makerRate;\\r\\n        uint currentEpoches;\\r\\n        uint recordEpoches;\\r\\n    }\\r\\n\\r\\n    struct ContributorReturnValue {\\r\\n        Contributor profile;\\r\\n        Slot slot;\\r\\n        Common.Provider[] providers;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x46c85b1ab84886a4ef21b9a7b7534216778ac3dd132120498927ec91cd96af5f\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport \\\"./IERC20Metadata.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 is IERC20Metadata{\\r\\n    error NotCallable();\\r\\n    error AddressIsZero(address);\\r\\n    error NoPreviousLockDetected();\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n    \\r\\n    /** \\r\\n     * @dev Moves `amounts` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event for each transfer.\\r\\n     * Note: BE AWARE OF THE GAS COST WHEN USING THIS FUNCTION. IT INCREASES \\r\\n                RELATIVE TO THE ACCOUNTS ARRAY\\r\\n     */\\r\\n    function batchTransfer(uint[] memory amounts, address[] memory accounts) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**@dev Locks specific amount of JFT to the private ledger.\\r\\n        param: routeTo - Alternative address that funds will be sent to when panic call is made.\\r\\n        param: amount - Amount to lock.\\r\\n    */\\r\\n    function lockToken(address routeTo, uint256 amount) external returns(bool);\\r\\n\\r\\n    /**@dev Moves an 'amount' from private ledger to regular balances.\\r\\n        @param amount - Amount to unlock.\\r\\n        Note: If the lock duration was set, holder will not be able to unlock until the \\r\\n            set time has passed else they can withdraw to regular balance anytime.\\r\\n     */\\r\\n    function unlockToken(uint amount) external returns(bool);\\r\\n\\r\\n    /** @dev Returns seperate balances of @param who\\r\\n        return value will be in struct format having two values\\r\\n     */\\r\\n    function accountBalances(address who) external view returns(Balances memory);\\r\\n   \\r\\n    // /**@dev Return JFT's Metadata including the information of `who`\\r\\n    //  */\\r\\n    // function getInfo(address who) external view returns(Protected memory);\\r\\n\\r\\n    /**\\r\\n     * @dev PanicUnlock is meant to be invoked only by the Attorney.\\r\\n     * It should only be called when JFT holder has lost access to their account and they had \\r\\n     * earlier initiated a lock. The locked token is simply unlocked and sent to an escape address\\r\\n     * provided at the time the lock was activated.\\r\\n     * \\r\\n     * Note: Attorney charges a fee for doing this. \\r\\n     * @param account : Account that owns this token.\\r\\n     */\\r\\n    function panicUnlock(address account, Balances memory _bal) external returns(bool);\\r\\n\\r\\n    struct Protected {\\r\\n        uint256 value; // Total value currently locked\\r\\n        address escapeTo;\\r\\n    }\\r\\n\\r\\n    struct Balances {\\r\\n        uint256 spendable;\\r\\n        Protected locked;\\r\\n    }\\r\\n\\r\\n    struct TokenInfo {\\r\\n        uint8 decimals;\\r\\n        uint256 totalSupply;\\r\\n        string name;\\r\\n        string symbol;\\r\\n        address attorney;\\r\\n        // address rewarder;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0f16e22e9c3da96f41e8237352b0d826ca0421b69340e09aedae74eb222428e6\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0xcb50d28f397609626ce66bde796d1ea41ce80b047482aea9d7f228b285c619ad\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { Common } from \\\"./Common.sol\\\";\\r\\n\\r\\ninterface IPriceOracle {\\r\\n  struct PriceData {\\r\\n    string pair;\\r\\n    address oracleAddress;\\r\\n    uint128 latestPrice;\\r\\n    uint128 timestampOflatestPrice;\\r\\n    uint8 decimals;\\r\\n  }\\r\\n\\r\\n  // Only rolebearer function\\r\\n  function getPriceQuote(address asset) external view returns(uint128 price, bool inTime, uint8 decimals);\\r\\n  function updatePriceFeed(address asset) external;\\r\\n}\",\"keccak256\":\"0xdde0b228f09aae3b7a2cdd2b2276d7adc21d2ec0a32b5852c892c9a402aecf7c\",\"license\":\"MIT\"},\"contracts/interfaces/IRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IRoleBase \\r\\n * Interface of the OwnerShip contract\\r\\n * @author Simplifi (Bobeu)\\r\\n */\\r\\ninterface IRoleBase {\\r\\n    function setRole(\\r\\n        address[] memory newRoleTos\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function removeRole(\\r\\n        address target\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function renounceRole() \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function getRoleBearer(\\r\\n        uint ownerId\\r\\n    ) \\r\\n        external \\r\\n        view \\r\\n        returns(address);\\r\\n\\r\\n    function hasRole(\\r\\n        address target\\r\\n    )\\r\\n        external\\r\\n        view \\r\\n        returns(bool);\\r\\n}\",\"keccak256\":\"0xa166efe0dfbcd8f4e00f33c155797b3e2d652087f630893518b0dec1f823519b\",\"license\":\"MIT\"},\"contracts/interfaces/ISupportedAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { Common } from \\\"./Common.sol\\\";\\r\\n\\r\\ninterface ISupportedAsset {\\r\\n  struct SupportedAsset {\\r\\n    address id;\\r\\n    string name;\\r\\n    string symbol;\\r\\n  }\\r\\n  function isSupportedAsset(address _asset) external view returns(bool);\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address);\\r\\n} \",\"keccak256\":\"0x4e8b8ddf5a0189841512e2a014002847497b6d0e8819504e9fd690fc34b547c2\",\"license\":\"MIT\"},\"contracts/libraries/ErrorLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nlibrary ErrorLib {\\r\\n    error ErrorOccurred(string errorMsg);\\r\\n\\r\\n    /**\\r\\n     * @dev Reverts any operation.\\r\\n     * @param _error : Error struct\\r\\n     */\\r\\n    function _throw(string memory _error) internal pure {\\r\\n        if(bytes(_error).length > 0){ \\r\\n            revert ErrorOccurred(_error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x967582ca2a833932c7403e6950ede1972f1b7f94ecfedd2d3ddee9175d309e5a\",\"license\":\"MIT\"},\"contracts/peripherals/OnlyRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { IRoleBase } from \\\"../interfaces/IRoleBase.sol\\\";\\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title MsgSender \\r\\n * @author Simplifi (Bobeu)\\r\\n * @notice Non-deployable contract simply returning the calling account.\\r\\n */\\r\\nabstract contract MsgSender {\\r\\n    function _msgSender() internal view virtual returns(address sender) {\\r\\n        sender = msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract OnlyRoleBase is MsgSender {\\r\\n    using ErrorLib for *;\\r\\n\\r\\n    // Role manager address\\r\\n    IRoleBase public roleManager;\\r\\n\\r\\n    // ============= constructor ============\\r\\n    constructor(IRoleBase _roleManager)\\r\\n    {\\r\\n        _setRoleManager(_roleManager);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Caller must have owner role before execeution can proceed.\\r\\n     * The 'errorMessage' argument can be used to return error specific to \\r\\n     * a context e.g function call. \\r\\n     */\\r\\n    modifier onlyRoleBearer {\\r\\n        _onlyRoleBearer();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Allow only account with role access\\r\\n    function _onlyRoleBearer() internal view {\\r\\n        IRoleBase mgr = roleManager;\\r\\n        if(address(mgr) == address(0)) 'Manager is zero'._throw();\\r\\n        if(!_hasRole(_msgSender())) 'Access denied'._throw();\\r\\n    }\\r\\n\\r\\n    function _hasRole(address target) internal view returns(bool result) {\\r\\n        result = IRoleBase(roleManager).hasRole(target);\\r\\n    }  \\r\\n\\r\\n    /// @dev Set role manager\\r\\n    function _setRoleManager(IRoleBase newManager) private{\\r\\n        roleManager = newManager;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set Role manager\\r\\n     * @param newManager : New manager address\\r\\n     */\\r\\n    function setRoleManager(\\r\\n        address newManager\\r\\n    )\\r\\n        public\\r\\n        onlyRoleBearer\\r\\n        returns(bool)\\r\\n    {\\r\\n        _setRoleManager(IRoleBase(newManager));\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd10e299b8bf634ae026b74cefab6933d135d5cc8265acde354aafccbbed4ad23\",\"license\":\"MIT\"},\"contracts/peripherals/SupportedAssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { OnlyRoleBase, IRoleBase } from \\\"../peripherals/OnlyRoleBase.sol\\\";\\r\\nimport { ISupportedAsset } from \\\"../interfaces/ISupportedAsset.sol\\\"; \\r\\nimport { IERC20 } from \\\"../interfaces/IERC20.sol\\\"; \\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\nimport { IPriceOracle } from \\\"../interfaces/IPriceOracle.sol\\\";\\r\\n\\r\\nabstract contract SupportedAssetManager is ISupportedAsset, IPriceOracle, OnlyRoleBase {\\r\\n  using ErrorLib for *;\\r\\n\\r\\n  // The max acceptable amount of time passed since the oracle price was last updated.\\r\\n  uint128 public maxTimePassed;\\r\\n\\r\\n  // Supported assets\\r\\n  SupportedAsset[] private assets;\\r\\n\\r\\n  /**\\r\\n   * @dev Mapping assets address to bool i.e Assets must be contract account\\r\\n   * and must be supported\\r\\n   */\\r\\n  mapping(address => bool) private supportedAssets;\\r\\n\\r\\n  mapping(address => bool) public listed;\\r\\n\\r\\n  /**\\r\\n   * @dev Asset must be supported before they can be used.\\r\\n   */\\r\\n  modifier onlySupportedAsset(address _asset) {\\r\\n    if(!supportedAssets[_asset]) 'Unsupported asset'._throw();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \\r\\n   * @param _assets : Supported assets\\r\\n   * @param _roleManager : Role manager contract\\r\\n  */\\r\\n  constructor(\\r\\n    address[] memory _assets,\\r\\n    IRoleBase _roleManager\\r\\n  )\\r\\n    OnlyRoleBase(_roleManager) \\r\\n  {\\r\\n    for(uint i = 0; i < _assets.length; i++) {\\r\\n      if(_assets[i] != address(0)) _supportAsset(_assets[i]);\\r\\n    }\\r\\n    maxTimePassed = 120 seconds;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Support a new asset\\r\\n   * Note: OnlyRoleBase action\\r\\n   * @param _asset : Asset to add to list of supported asset\\r\\n   */\\r\\n  function supportAsset(address _asset) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    _supportAsset(_asset); \\r\\n  }\\r\\n\\r\\n  function _supportAsset(address _asset) private {\\r\\n    if(!listed[_asset]){\\r\\n      listed[_asset] = true;\\r\\n      assets.push(SupportedAsset(\\r\\n        _asset, \\r\\n        IERC20(_asset).name(), \\r\\n        IERC20(_asset).symbol()\\r\\n      ));\\r\\n    }\\r\\n    if(!_isAssetSupported(_asset)){\\r\\n      supportedAssets[_asset] = true;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Unsupports an asset\\r\\n   * Note: Only-owner action\\r\\n   * @param newAsset : Removes an asset from the list of supported asset\\r\\n   */\\r\\n  function unsupportAsset(\\r\\n    address newAsset\\r\\n  ) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    supportedAssets[newAsset] = false;\\r\\n  }\\r\\n\\r\\n  function _isAssetSupported(address _asset) internal view returns(bool) {\\r\\n    return supportedAssets[_asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Check if an asset is supported\\r\\n   */\\r\\n  function isSupportedAsset(address _asset) external view returns(bool) {\\r\\n    return _isAssetSupported(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns a list of supported assets\\r\\n   */\\r\\n  function getSupportedAssets() public view returns(SupportedAsset[] memory _assets) {\\r\\n    _assets = assets;\\r\\n    return _assets;\\r\\n  }\\r\\n\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address){\\r\\n    return assets[0].id;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Update the maxTimePass\\r\\n   * @param newMaxTimePass : New maxTime\\r\\n   */\\r\\n  function setMaxTimePass(uint128 newMaxTimePass) public onlyRoleBearer returns(bool) {\\r\\n    maxTimePassed = newMaxTimePass;\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0x5b980c099dcbf25c8ebfc5f3dbc4a715a65babb46338700a7bcf28774ef3479d\",\"license\":\"MIT\"},\"contracts/standalone/oracles/CeloSupportedAssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { SupportedAssetManager, IRoleBase } from \\\"../../peripherals/SupportedAssetManager.sol\\\";\\r\\nimport { AggregatorV3Interface } from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract CeloSupportedAssetManager is SupportedAssetManager {\\r\\n  /**\\r\\n   * @notice Each asset pair on chainlink maintains a price oracle contract address\\r\\n   */\\r\\n  mapping(address => PriceData) private data;\\r\\n\\r\\n  /**\\r\\n   * \\r\\n   * @param collateralAssets : Supported assets\\r\\n   * @param _roleManager : Role manager contract\\r\\n   * @param oracleData : Celo oracle data: optional \\r\\n   * @notice Ensure the length of collateralAssets matches that of celoOracleData.\\r\\n  */\\r\\n  constructor(\\r\\n    address[] memory collateralAssets,\\r\\n    IRoleBase _roleManager,\\r\\n    PriceData[] memory oracleData\\r\\n  )\\r\\n    SupportedAssetManager(collateralAssets, _roleManager) \\r\\n  {\\r\\n    require(collateralAssets.length == oracleData.length, \\\"Oracle keys & values mismatch\\\");\\r\\n    for(uint i = 0; i < collateralAssets.length; i++) {\\r\\n      address asset = collateralAssets[i];\\r\\n      data[asset] = oracleData[i];\\r\\n      // if(i == 1) {\\r\\n      //   // _updatePriceFeed(asset);\\r\\n      // }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev A function that retreives the price and the corresponding timestamp\\r\\n  * from the price oracle and save it in the state\\r\\n  * @param asset : Asset\\r\\n  * @param _data : Mutable oracle data.\\r\\n  */ \\r\\n  function _getPriceInfo(address asset, PriceData memory _data) internal returns(uint128 price) {\\r\\n    assert(asset != address(0));\\r\\n    (,int256 answer,,uint256 timestampOflatestPrice,) = AggregatorV3Interface(_data.oracleAddress).latestRoundData();\\r\\n    _data.latestPrice = uint128(uint(answer));\\r\\n    _data.timestampOflatestPrice = uint128(uint(timestampOflatestPrice));\\r\\n    data[asset] = _data;\\r\\n    price = _data.latestPrice;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev A function that checks if the timestamp of the saved price\\r\\n  * is older than maxTimePassed.\\r\\n  * @param timestampOflatestPrice: The time price was last updated. \\r\\n  * @return inTime - A bool that will be true if the price was updated\\r\\n  * at most maxTimePassed seconds ago, otherwise false.\\r\\n  */ \\r\\n  function _checkPriceAge(uint128 timestampOflatestPrice) internal view returns (bool inTime){\\r\\n    inTime = (block.timestamp - timestampOflatestPrice) < maxTimePassed;\\r\\n  } \\r\\n\\r\\n  /**\\r\\n   * @dev Get price data into external contracts\\r\\n   * @param asset : Asset for which to fetch price. \\r\\n   */\\r\\n  function getPriceQuote(address asset) external view returns(uint128 price, bool inTime, uint8) {\\r\\n    PriceData memory _data = data[asset];\\r\\n    (price, inTime) = (_data.latestPrice, _checkPriceAge(uint128(_data.timestampOflatestPrice)));\\r\\n    return (price, inTime, _data.decimals);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Get price data into external contracts\\r\\n   * @param asset : Asset for which to fetch price.\\r\\n   */\\r\\n  function _updatePriceFeed(address asset) internal returns(uint128 price) {\\r\\n    price = _getPriceInfo(asset, data[asset]);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Get price data into external contracts\\r\\n   * @param asset : Asset for which to fetch price.\\r\\n   * @notice Only permitted account can update the price feed\\r\\n   */\\r\\n  function updatePriceFeed(address asset) external onlyRoleBearer {\\r\\n    _updatePriceFeed(asset);\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0x8749dd5da6f901d4c7f0f73ff7e827dddb254091884056f472000f60f1e3b657\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200199338038062001993833981016040819052620000349162000706565b600080546001600160a01b0319166001600160a01b038416179055828260005b8251811015620000cb5760006001600160a01b03168382815181106200007e576200007e620007ea565b60200260200101516001600160a01b031614620000c257620000c2838281518110620000ae57620000ae620007ea565b60200260200101516200025860201b60201c565b60010162000054565b5050600180546001600160801b031916607817905550805183511462000151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f7261636c65206b65797320262076616c756573206d69736d61746368000000604482015260640160405180910390fd5b60005b83518110156200024e576000848281518110620001755762000175620007ea565b60200260200101519050828281518110620001945762000194620007ea565b6020908102919091018101516001600160a01b03831660009081526005909252604090912081518190620001c99082620008c3565b506020820151600180830180546001600160a01b039093166001600160a01b031990931692909217909155604083015160608401516001600160801b039081167001000000000000000000000000000000000291161760028301556080909201516003909101805460ff90921660ff1990921691909117905591909101905062000154565b50505050620009cf565b6001600160a01b03811660009081526004602052604090205460ff166200040a576001600160a01b0381166000818152600460208181526040808420805460ff19166001179055805160608101825285815281517f06fdde03000000000000000000000000000000000000000000000000000000008152915160029691959386019491936306fdde039380840193919291908290030181865afa15801562000304573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200032e91908101906200098f565b8152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000372573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200039c91908101906200098f565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b03909316929092178255928201519192909190820190620003ef9082620008c3565b5060408201516002820190620004069082620008c3565b5050505b6001600160a01b03811660009081526003602052604090205460ff166200044f576001600160a01b0381166000908152600360205260409020805460ff191660011790555b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a081016001600160401b0381118282101715620004a657620004a662000452565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004d757620004d762000452565b604052919050565b60006001600160401b03821115620004fb57620004fb62000452565b5060051b60200190565b6001600160a01b03811681146200044f57600080fd5b8051620005288162000505565b919050565b600082601f8301126200053f57600080fd5b81516001600160401b038111156200055b576200055b62000452565b602062000571601f8301601f19168201620004ac565b82815285828487010111156200058657600080fd5b60005b83811015620005a657858101830151828201840152820162000589565b506000928101909101919091529392505050565b80516001600160801b03811681146200052857600080fd5b600082601f830112620005e457600080fd5b81516020620005fd620005f783620004df565b620004ac565b82815260059290921b840181019181810190868411156200061d57600080fd5b8286015b84811015620006fb5780516001600160401b0380821115620006435760008081fd5b9088019060a0828b03601f19018113156200065e5760008081fd5b6200066862000481565b87840151838111156200067b5760008081fd5b6200068b8d8a838801016200052d565b8252506040925082840151620006a18162000505565b818901526060620006b4858201620005ba565b8483015260809350620006c9848601620005ba565b90820152928101519260ff84168414620006e557600091508182fd5b9182019290925284525091830191830162000621565b509695505050505050565b6000806000606084860312156200071c57600080fd5b83516001600160401b03808211156200073457600080fd5b818601915086601f8301126200074957600080fd5b815160206200075c620005f783620004df565b82815260059290921b8401810191818101908a8411156200077c57600080fd5b948201945b83861015620007a7578551620007978162000505565b8252948201949082019062000781565b9750620007b890508882016200051b565b955050506040860151915080821115620007d157600080fd5b50620007e086828701620005d2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806200082e57607f821691505b60208210810362000868577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620008be576000816000526020600020601f850160051c81016020861015620008995750805b601f850160051c820191505b81811015620008ba57828155600101620008a5565b5050505b505050565b81516001600160401b03811115620008df57620008df62000452565b620008f781620008f0845462000819565b846200086e565b602080601f8311600181146200092f5760008415620009165750858301515b600019600386901b1c1916600185901b178555620008ba565b600085815260208120601f198616915b8281101562000960578886015182559484019460019091019084016200093f565b50858210156200097f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620009a257600080fd5b81516001600160401b03811115620009b957600080fd5b620009c7848285016200052d565b949350505050565b610fb480620009df6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638fbdf193116100715780638fbdf1931461017657806395877f78146101b15780639be918e6146101c4578063d0eb2d80146101d7578063e5406dbf146101ea578063f1d588c5146101ff57600080fd5b8062435da5146100b85780634cd55c2d146100e857806364138230146100fd57806369687512146101305780636f0220cd14610143578063739c13db1461016e575b600080fd5b6000546100cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fb6100f6366004610b3d565b610212565b005b61012061010b366004610b3d565b60046020526000908152604090205460ff1681565b60405190151581526020016100df565b6100fb61013e366004610b3d565b610226565b600154610156906001600160801b031681565b6040516001600160801b0390911681526020016100df565b6100cb61024f565b610189610184366004610b3d565b610284565b604080516001600160801b039094168452911515602084015260ff16908201526060016100df565b6100fb6101bf366004610b3d565b6103b3565b6101206101d2366004610b3d565b6103c8565b6101206101e5366004610b6d565b6103eb565b6101f2610420565b6040516100df9190610be6565b61012061020d366004610b3d565b6105b9565b61021a6105e6565b61022381610662565b50565b61022e6105e6565b6001600160a01b03166000908152600360205260409020805460ff19169055565b6000600260008154811061026557610265610c84565b60009182526020909120600390910201546001600160a01b0316919050565b6001600160a01b038116600090815260056020526040808220815160a081019092528054839283928392829082906102bb90610c9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102e790610c9a565b80156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b505050918352505060018201546001600160a01b0316602082015260028201546001600160801b03808216604080850191909152600160801b9092041660608084019190915260039093015460ff1660809092019190915282015190820151919250906103a090610836565b6080929092015190969195509350915050565b6103bb6105e6565b6103c48161085b565b5050565b6001600160a01b03811660009081526003602052604081205460ff165b92915050565b60006103f56105e6565b50600180546fffffffffffffffffffffffffffffffff19166001600160801b0383161781555b919050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105b057600084815260209081902060408051606081019091526003850290910180546001600160a01b03168252600181018054929391929184019161048d90610c9a565b80601f01602080910402602001604051908101604052809291908181526020018280546104b990610c9a565b80156105065780601f106104db57610100808354040283529160200191610506565b820191906000526020600020905b8154815290600101906020018083116104e957829003601f168201915b5050505050815260200160028201805461051f90610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461054b90610c9a565b80156105985780601f1061056d57610100808354040283529160200191610598565b820191906000526020600020905b81548152906001019060200180831161057b57829003601f168201915b50505050508152505081526020019060010190610444565b50505050905090565b60006105c36105e6565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b031680610627576106276040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b81525061095f565b6106303361098a565b610223576102236040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b81525061095f565b6001600160a01b03811660009081526004602052604090205460ff166107f0576001600160a01b0381166000818152600460208181526040808420805460ff19166001179055805160608101825285815281516306fdde0360e01b8152915160029691959386019491936306fdde039380840193919291908290030181865afa1580156106f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261071b9190810190610cea565b8152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107869190810190610cea565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b039093169290921782559282015191929091908201906107d79082610de8565b50604082015160028201906107ec9082610de8565b5050505b6001600160a01b03811660009081526003602052604090205460ff16610223576001600160a01b0381166000908152600360205260409020805460ff1916600117905550565b6001546000906001600160801b039081169061085490841642610ea8565b1092915050565b6001600160a01b038116600090815260056020526040808220815160a0810190925280546103e592859290918290829061089490610c9a565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090610c9a565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b505050918352505060018201546001600160a01b0316602082015260028201546001600160801b038082166040840152600160801b90910416606082015260039091015460ff166080909101526109f9565b805115610223578060405163cc86106360e01b81526004016109819190610ec9565b60405180910390fd5b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610edc565b60006001600160a01b038316610a1157610a11610efe565b60008083602001516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a9190610f2e565b506001600160801b038084166040808b019190915290821660608a01526001600160a01b038a166000908152600560205220885193965090945087935091829150610ac59082610de8565b5060208201516001820180546001600160a01b039092166001600160a01b031990921691909117905560408083015160608401516001600160801b03908116600160801b0291161760028301556080909201516003909101805460ff90921660ff199092169190911790559390930151949350505050565b600060208284031215610b4f57600080fd5b81356001600160a01b0381168114610b6657600080fd5b9392505050565b600060208284031215610b7f57600080fd5b81356001600160801b0381168114610b6657600080fd5b60005b83811015610bb1578181015183820152602001610b99565b50506000910152565b60008151808452610bd2816020860160208601610b96565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610c7657888303603f19018552815180516001600160a01b0316845287810151606089860181905290610c4882870182610bba565b91505087820151915084810388860152610c628183610bba565b968901969450505090860190600101610c0f565b509098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610cae57607f821691505b602082108103610cce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610cfc57600080fd5b815167ffffffffffffffff80821115610d1457600080fd5b818401915084601f830112610d2857600080fd5b815181811115610d3a57610d3a610cd4565b604051601f8201601f19908116603f01168101908382118183101715610d6257610d62610cd4565b81604052828152876020848701011115610d7b57600080fd5b610d8c836020830160208801610b96565b979650505050505050565b601f821115610de3576000816000526020600020601f850160051c81016020861015610dc05750805b601f850160051c820191505b81811015610ddf57828155600101610dcc565b5050505b505050565b815167ffffffffffffffff811115610e0257610e02610cd4565b610e1681610e108454610c9a565b84610d97565b602080601f831160018114610e4b5760008415610e335750858301515b600019600386901b1c1916600185901b178555610ddf565b600085815260208120601f198616915b82811015610e7a57888601518255948401946001909101908401610e5b565b5085821015610e985787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156103e557634e487b7160e01b600052601160045260246000fd5b602081526000610b666020830184610bba565b600060208284031215610eee57600080fd5b81518015158114610b6657600080fd5b634e487b7160e01b600052600160045260246000fd5b805169ffffffffffffffffffff8116811461041b57600080fd5b600080600080600060a08688031215610f4657600080fd5b610f4f86610f14565b9450602086015193506040860151925060608601519150610f7260808701610f14565b9050929550929590935056fea2646970667358221220b13ce125a087b6b9f5a94b3f5713c4884a4811ce68521ec72a06e5b8fdf37edc64736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_roleManager": ": Role manager contract",
          "collateralAssets": ": Supported assets",
          "oracleData": ": Celo oracle data: optional "
        }
      },
      "getPriceQuote(address)": {
        "details": "Get price data into external contracts",
        "params": {
          "asset": ": Asset for which to fetch price. "
        }
      },
      "getSupportedAssets()": {
        "details": "Returns a list of supported assets"
      },
      "isSupportedAsset(address)": {
        "details": "Check if an asset is supported"
      },
      "setMaxTimePass(uint128)": {
        "details": "Update the maxTimePass",
        "params": {
          "newMaxTimePass": ": New maxTime"
        }
      },
      "setRoleManager(address)": {
        "params": {
          "newManager": ": New manager address"
        }
      },
      "supportAsset(address)": {
        "details": "Support a new asset Note: OnlyRoleBase action",
        "params": {
          "_asset": ": Asset to add to list of supported asset"
        }
      },
      "unsupportAsset(address)": {
        "details": "Unsupports an asset Note: Only-owner action",
        "params": {
          "newAsset": ": Removes an asset from the list of supported asset"
        }
      },
      "updatePriceFeed(address)": {
        "details": "Get price data into external contracts",
        "params": {
          "asset": ": Asset for which to fetch price."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Ensure the length of collateralAssets matches that of celoOracleData."
      },
      "setRoleManager(address)": {
        "notice": "Set Role manager"
      },
      "updatePriceFeed(address)": {
        "notice": "Only permitted account can update the price feed"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3914,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "roleManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRoleBase)1087"
      },
      {
        "astId": 5055,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "maxTimePassed",
        "offset": 0,
        "slot": "1",
        "type": "t_uint128"
      },
      {
        "astId": 5059,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "assets",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(SupportedAsset)1198_storage)dyn_storage"
      },
      {
        "astId": 5064,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "supportedAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5068,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "listed",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6564,
        "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
        "label": "data",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(PriceData)1032_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(SupportedAsset)1198_storage)dyn_storage": {
        "base": "t_struct(SupportedAsset)1198_storage",
        "encoding": "dynamic_array",
        "label": "struct ISupportedAsset.SupportedAsset[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRoleBase)1087": {
        "encoding": "inplace",
        "label": "contract IRoleBase",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(PriceData)1032_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPriceOracle.PriceData)",
        "numberOfBytes": "32",
        "value": "t_struct(PriceData)1032_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PriceData)1032_storage": {
        "encoding": "inplace",
        "label": "struct IPriceOracle.PriceData",
        "members": [
          {
            "astId": 1023,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "pair",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1025,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "oracleAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1027,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "latestPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint128"
          },
          {
            "astId": 1029,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "timestampOflatestPrice",
            "offset": 16,
            "slot": "2",
            "type": "t_uint128"
          },
          {
            "astId": 1031,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "decimals",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(SupportedAsset)1198_storage": {
        "encoding": "inplace",
        "label": "struct ISupportedAsset.SupportedAsset",
        "members": [
          {
            "astId": 1193,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1195,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1197,
            "contract": "contracts/standalone/oracles/CeloSupportedAssetManager.sol:CeloSupportedAssetManager",
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}