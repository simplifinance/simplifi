{
  "address": "0x8a7a88e6Af8F2A2966D0E46E09fc46E3c3943551",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "contract IRoleBase",
          "name": "_roleManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "errorMsg",
          "type": "string"
        }
      ],
      "name": "ErrorOccurred",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getDefaultSupportedCollateralAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "_default",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "listed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleManager",
      "outputs": [
        {
          "internalType": "contract IRoleBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setRoleManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "supportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAsset",
          "type": "address"
        }
      ],
      "name": "unsupportAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x781b1dbc458c60197e915ef0fabbbe1b02d7ce0813b2aec1beb8a29e3ea8b17f",
  "receipt": {
    "to": null,
    "from": "0xD7c271d20c9E323336bFC843AEb8deC23B346352",
    "contractAddress": "0x8a7a88e6Af8F2A2966D0E46E09fc46E3c3943551",
    "transactionIndex": 2,
    "gasUsed": "489748",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x468fd2450ce54dcf55fca0cfee35e0ad40ba7eaff6b07a359d2f087f4a593730",
    "transactionHash": "0x781b1dbc458c60197e915ef0fabbbe1b02d7ce0813b2aec1beb8a29e3ea8b17f",
    "logs": [],
    "blockNumber": 43513886,
    "cumulativeGasUsed": "588670",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x79dF2FCc7DfDdc0C85Cc1f82B1f631b4b9D994B0",
    "0xf4991C26f62524073C4d8eFa57Df0Ce9bC5313Cd"
  ],
  "numDeployments": 1,
  "solcInputHash": "e53fffc54a45618d4e5c0d23ea7a22bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IRoleBase\",\"name\":\"_roleManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"ErrorOccurred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getDefaultSupportedCollateralAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_default\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"contract IRoleBase\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setRoleManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"supportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAsset\",\"type\":\"address\"}],\"name\":\"unsupportAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initialize state variables\",\"params\":{\"_asset\":\": Initial supported asset\"}},\"getDefaultSupportedCollateralAsset()\":{\"details\":\"Returns the default supported asset\"},\"getSupportedAssets()\":{\"details\":\"Returns a list of supported assets\"},\"isSupportedAsset(address)\":{\"details\":\"Check if an asset is supported\"},\"setRoleManager(address)\":{\"params\":{\"newManager\":\": New manager address\"}},\"supportAsset(address)\":{\"details\":\"Support a new asset Note: OnlyRoleBase action\",\"params\":{\"_asset\":\": Asset to add to list of supported asset\"}},\"unsupportAsset(address)\":{\"details\":\"Unsupports an asset Note: Only-owner action\",\"params\":{\"newAsset\":\": Removes an asset from the list of supported asset\"}}},\"stateVariables\":{\"supportedAssets\":{\"details\":\"Mapping assets address to bool i.e Assets must be contract account and must be supported\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRoleManager(address)\":{\"notice\":\"Set Role manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standalone/SupportedAssetManager.sol\":\"SupportedAssetManager\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/apis/IRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\n/**\\r\\n * @title IRoleBase \\r\\n * Interface of the OwnerShip contract\\r\\n * @author Simplifi (Bobeu)\\r\\n */\\r\\ninterface IRoleBase {\\r\\n    function setRole(\\r\\n        address[] memory newRoleTos\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function removeRole(\\r\\n        address target\\r\\n    ) \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function renounceRole() \\r\\n        external\\r\\n        returns(bool);\\r\\n\\r\\n    function getRoleBearer(\\r\\n        uint ownerId\\r\\n    ) \\r\\n        external \\r\\n        view \\r\\n        returns(address);\\r\\n\\r\\n    function hasRole(\\r\\n        address target\\r\\n    )\\r\\n        external\\r\\n        view \\r\\n        returns(bool);\\r\\n}\",\"keccak256\":\"0xa166efe0dfbcd8f4e00f33c155797b3e2d652087f630893518b0dec1f823519b\",\"license\":\"MIT\"},\"contracts/apis/ISupportedAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\ninterface ISupportedAsset {\\r\\n  function isSupportedAsset(address _asset) external view returns(bool);\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address _default);\\r\\n}\",\"keccak256\":\"0x676b33d227f783ad956a0abe0877df24ffcec14f4991119903801ce207e281bf\",\"license\":\"MIT\"},\"contracts/libraries/ErrorLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nlibrary ErrorLib {\\r\\n    error ErrorOccurred(string errorMsg);\\r\\n\\r\\n    /**\\r\\n     * @dev Reverts any operation.\\r\\n     * @param _error : Error struct\\r\\n     */\\r\\n    function _throw(string memory _error) internal pure {\\r\\n        if(bytes(_error).length > 0){ \\r\\n            revert ErrorOccurred(_error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x967582ca2a833932c7403e6950ede1972f1b7f94ecfedd2d3ddee9175d309e5a\",\"license\":\"MIT\"},\"contracts/peripherals/OnlyRoleBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { IRoleBase } from \\\"../apis/IRoleBase.sol\\\";\\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title MsgSender \\r\\n * @author Simplifi (Bobeu)\\r\\n * @notice Non-deployable contract simply returning the calling account.\\r\\n */\\r\\nabstract contract MsgSender {\\r\\n    function _msgSender() internal view virtual returns(address sender) {\\r\\n        sender = msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract OnlyRoleBase is MsgSender {\\r\\n    using ErrorLib for *;\\r\\n\\r\\n    // Role manager address\\r\\n    IRoleBase public roleManager;\\r\\n\\r\\n    // ============= constructor ============\\r\\n    constructor(IRoleBase _roleManager)\\r\\n    {\\r\\n        _setRoleManager(_roleManager);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Caller must have owner role before execeution can proceed.\\r\\n     * The 'errorMessage' argument can be used to return error specific to \\r\\n     * a context e.g function call. \\r\\n     */\\r\\n    modifier onlyRoleBearer {\\r\\n        _onlyRoleBearer();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Allow only account with role access\\r\\n    function _onlyRoleBearer() internal view {\\r\\n        IRoleBase mgr = roleManager;\\r\\n        if(address(mgr) == address(0)) 'Manager is zero'._throw();\\r\\n        if(!_hasRole(_msgSender())) 'Access denied'._throw();\\r\\n    }\\r\\n\\r\\n    function _hasRole(address target) internal view returns(bool result) {\\r\\n        result = IRoleBase(roleManager).hasRole(target);\\r\\n    }  \\r\\n\\r\\n    /// @dev Set role manager\\r\\n    function _setRoleManager(IRoleBase newManager) private{\\r\\n        roleManager = newManager;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set Role manager\\r\\n     * @param newManager : New manager address\\r\\n     */\\r\\n    function setRoleManager(\\r\\n        address newManager\\r\\n    )\\r\\n        public\\r\\n        onlyRoleBearer\\r\\n        returns(bool)\\r\\n    {\\r\\n        _setRoleManager(IRoleBase(newManager));\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa16a1ee72f3b6ef52356210cdc85a46ddd5a88d56c0c044c0740b68cf5b83438\",\"license\":\"MIT\"},\"contracts/standalone/SupportedAssetManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.24;\\r\\n\\r\\nimport { OnlyRoleBase, IRoleBase } from \\\"../peripherals/OnlyRoleBase.sol\\\";\\r\\nimport { ISupportedAsset } from \\\"../apis/ISupportedAsset.sol\\\"; \\r\\nimport { ErrorLib } from \\\"../libraries/ErrorLib.sol\\\";\\r\\n\\r\\ncontract SupportedAssetManager is ISupportedAsset, OnlyRoleBase {\\r\\n  using ErrorLib for *;\\r\\n\\r\\n  // Supported assets\\r\\n  address[] private assets;\\r\\n\\r\\n  /**\\r\\n   * @dev Mapping assets address to bool i.e Assets must be contract account\\r\\n   * and must be supported\\r\\n   */\\r\\n  mapping(address => bool) private supportedAssets;\\r\\n\\r\\n  mapping(address => bool) public listed;\\r\\n\\r\\n  /**\\r\\n   * @dev Asset must be supported before they can be used.\\r\\n   */\\r\\n  modifier onlySupportedAsset(address _asset) {\\r\\n    if(!supportedAssets[_asset]) 'Unsupported asset'._throw();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Initialize state variables\\r\\n   * @param _asset : Initial supported asset\\r\\n   */\\r\\n  constructor(\\r\\n    address _asset,\\r\\n    IRoleBase _roleManager\\r\\n  ) \\r\\n    OnlyRoleBase(_roleManager) \\r\\n  {\\r\\n    if(_asset == address(0)) 'Default asset is empty'._throw();\\r\\n    _supportAsset(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Support a new asset\\r\\n   * Note: OnlyRoleBase action\\r\\n   * @param _asset : Asset to add to list of supported asset\\r\\n   */\\r\\n  function supportAsset(\\r\\n    address _asset\\r\\n  ) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    _supportAsset(_asset); \\r\\n  }\\r\\n\\r\\n  function _supportAsset(address _asset) private {\\r\\n    \\r\\n    if(!listed[_asset]){\\r\\n      listed[_asset] = true;\\r\\n      assets.push(_asset);\\r\\n    }\\r\\n    if(!_isAssetSupported(_asset)){\\r\\n      supportedAssets[_asset] = true;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Unsupports an asset\\r\\n   * Note: Only-owner action\\r\\n   * @param newAsset : Removes an asset from the list of supported asset\\r\\n   */\\r\\n  function unsupportAsset(\\r\\n    address newAsset\\r\\n  ) \\r\\n    public \\r\\n    onlyRoleBearer\\r\\n  {\\r\\n    supportedAssets[newAsset] = false;\\r\\n  }\\r\\n\\r\\n  function _isAssetSupported(address _asset) internal view returns(bool) {\\r\\n    return supportedAssets[_asset];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Check if an asset is supported\\r\\n   */\\r\\n  function isSupportedAsset(address _asset) external view returns(bool) {\\r\\n    return _isAssetSupported(_asset);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns a list of supported assets\\r\\n   */\\r\\n  function getSupportedAssets() public view returns(address[] memory _assets) {\\r\\n    _assets = assets;\\r\\n    return _assets;\\r\\n  }\\r\\n\\r\\n  /// @dev Returns the default supported asset\\r\\n  function getDefaultSupportedCollateralAsset() external view returns(address _default) {\\r\\n    _default = assets[0];\\r\\n    assert(_default != address(0));\\r\\n    return _default;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0x3a087390311230bc591967c4f5bdf9cccfcee03edd8fb11a44b8bda275994efb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161081738038061081783398101604081905261002f916101ca565b600080546001600160a01b0319166001600160a01b0383161790556001600160a01b0382166100955760408051808201909152601681527f44656661756c7420617373657420697320656d707479000000000000000000006020820152610095906100a5565b61009e826100ec565b5050610253565b8051156100e957806040517fcc8610630000000000000000000000000000000000000000000000000000000081526004016100e09190610204565b60405180910390fd5b50565b6001600160a01b03811660009081526003602052604090205460ff1661016f576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff166100e9576001600160a01b0381166000908152600260205260409020805460ff1916600117905550565b6001600160a01b03811681146100e957600080fd5b600080604083850312156101dd57600080fd5b82516101e8816101b5565b60208401519092506101f9816101b5565b809150509250929050565b60006020808352835180602085015260005b8181101561023257858101830151858201604001528201610216565b506000604082860101526040601f19601f8301168501019250505092915050565b6105b5806102626000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063739c13db1161005b578063739c13db146101175780639be918e61461011f578063e5406dbf14610132578063f1d588c51461014757600080fd5b8062435da51461008c5780634cd55c2d146100bc57806364138230146100d15780636968751214610104575b600080fd5b60005461009f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cf6100ca366004610465565b61015a565b005b6100f46100df366004610465565b60036020526000908152604090205460ff1681565b60405190151581526020016100b3565b6100cf610112366004610465565b61016e565b61009f610197565b6100f461012d366004610465565b6101d4565b61013a6101f7565b6040516100b39190610495565b6100f4610155366004610465565b610259565b610162610286565b61016b81610302565b50565b610176610286565b6001600160a01b03166000908152600260205260409020805460ff19169055565b600060016000815481106101ad576101ad6104e2565b6000918252602090912001546001600160a01b03169050806101d1576101d16104f8565b90565b6001600160a01b03811660009081526002602052604081205460ff165b92915050565b6060600180548060200260200160405190810160405280929190818152602001828054801561024f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610231575b5050505050905090565b6000610263610286565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b0316806102c7576102c76040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b8152506103cb565b6102d0336103f6565b61016b5761016b6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b8152506103cb565b6001600160a01b03811660009081526003602052604090205460ff16610385576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff1661016b576001600160a01b0381166000908152600260205260409020805460ff1916600117905550565b80511561016b578060405163cc86106360e01b81526004016103ed919061050e565b60405180910390fd5b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f1919061055d565b60006020828403121561047757600080fd5b81356001600160a01b038116811461048e57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156104d65783516001600160a01b0316835292840192918401916001016104b1565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020808352835180602085015260005b8181101561053c57858101830151858201604001528201610520565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561056f57600080fd5b8151801515811461048e57600080fdfea2646970667358221220e6ade9caa10f888e738e967c658b33076424060a7fc6ba6b53a59f8162429cc464736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100875760003560e01c8063739c13db1161005b578063739c13db146101175780639be918e61461011f578063e5406dbf14610132578063f1d588c51461014757600080fd5b8062435da51461008c5780634cd55c2d146100bc57806364138230146100d15780636968751214610104575b600080fd5b60005461009f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cf6100ca366004610465565b61015a565b005b6100f46100df366004610465565b60036020526000908152604090205460ff1681565b60405190151581526020016100b3565b6100cf610112366004610465565b61016e565b61009f610197565b6100f461012d366004610465565b6101d4565b61013a6101f7565b6040516100b39190610495565b6100f4610155366004610465565b610259565b610162610286565b61016b81610302565b50565b610176610286565b6001600160a01b03166000908152600260205260409020805460ff19169055565b600060016000815481106101ad576101ad6104e2565b6000918252602090912001546001600160a01b03169050806101d1576101d16104f8565b90565b6001600160a01b03811660009081526002602052604081205460ff165b92915050565b6060600180548060200260200160405190810160405280929190818152602001828054801561024f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610231575b5050505050905090565b6000610263610286565b600080546001600160a01b0319166001600160a01b038416179055506001919050565b6000546001600160a01b0316806102c7576102c76040518060400160405280600f81526020016e4d616e61676572206973207a65726f60881b8152506103cb565b6102d0336103f6565b61016b5761016b6040518060400160405280600d81526020016c1058d8d95cdcc819195b9a5959609a1b8152506103cb565b6001600160a01b03811660009081526003602052604090205460ff16610385576001600160a01b0381166000818152600360205260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690911790555b6001600160a01b03811660009081526002602052604090205460ff1661016b576001600160a01b0381166000908152600260205260409020805460ff1916600117905550565b80511561016b578060405163cc86106360e01b81526004016103ed919061050e565b60405180910390fd5b60008054604051633f784de560e11b81526001600160a01b03848116600483015290911690637ef09bca90602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f1919061055d565b60006020828403121561047757600080fd5b81356001600160a01b038116811461048e57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156104d65783516001600160a01b0316835292840192918401916001016104b1565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020808352835180602085015260005b8181101561053c57858101830151858201604001528201610520565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561056f57600080fd5b8151801515811461048e57600080fdfea2646970667358221220e6ade9caa10f888e738e967c658b33076424060a7fc6ba6b53a59f8162429cc464736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initialize state variables",
        "params": {
          "_asset": ": Initial supported asset"
        }
      },
      "getDefaultSupportedCollateralAsset()": {
        "details": "Returns the default supported asset"
      },
      "getSupportedAssets()": {
        "details": "Returns a list of supported assets"
      },
      "isSupportedAsset(address)": {
        "details": "Check if an asset is supported"
      },
      "setRoleManager(address)": {
        "params": {
          "newManager": ": New manager address"
        }
      },
      "supportAsset(address)": {
        "details": "Support a new asset Note: OnlyRoleBase action",
        "params": {
          "_asset": ": Asset to add to list of supported asset"
        }
      },
      "unsupportAsset(address)": {
        "details": "Unsupports an asset Note: Only-owner action",
        "params": {
          "newAsset": ": Removes an asset from the list of supported asset"
        }
      }
    },
    "stateVariables": {
      "supportedAssets": {
        "details": "Mapping assets address to bool i.e Assets must be contract account and must be supported"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setRoleManager(address)": {
        "notice": "Set Role manager"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4486,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "roleManager",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRoleBase)1766"
      },
      {
        "astId": 7220,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "assets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7225,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "supportedAssets",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7229,
        "contract": "contracts/standalone/SupportedAssetManager.sol:SupportedAssetManager",
        "label": "listed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRoleBase)1766": {
        "encoding": "inplace",
        "label": "contract IRoleBase",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}